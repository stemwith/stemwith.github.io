<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>stemwith</title>
    <link>http://stemwith.github.io/</link>
    
    <atom:link href="http://stemwith.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>for stem education</description>
    <pubDate>Wed, 03 Nov 2021 00:13:24 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>전자기파 검출기 만들기</title>
      <link>http://stemwith.github.io/2021/11/02/STEM-%EC%A0%84%EC%9E%90%EA%B8%B0%ED%8C%8C-%EA%B2%80%EC%B6%9C%EA%B8%B0/</link>
      <guid>http://stemwith.github.io/2021/11/02/STEM-%EC%A0%84%EC%9E%90%EA%B8%B0%ED%8C%8C-%EA%B2%80%EC%B6%9C%EA%B8%B0/</guid>
      <pubDate>Tue, 02 Nov 2021 08:57:00 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;전자기파-검출&quot;&gt;&lt;a href=&quot;#전자기파-검출&quot; class=&quot;headerlink&quot; title=&quot;전자기파 검출&quot;&gt;&lt;/a&gt;전자기파 검출&lt;/h3&gt;&lt;p&gt;콘센트, 멀티탭, 전자제품 등에서 나오는 60Hz 정도의 전자파를 검출하여 증폭시킨 뒤, </description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="전자기파-검출"><a href="#전자기파-검출" class="headerlink" title="전자기파 검출"></a>전자기파 검출</h3><p>콘센트, 멀티탭, 전자제품 등에서 나오는 60Hz 정도의 전자파를 검출하여 증폭시킨 뒤, 이를 스위칭 신호로 만들어 LED를 켜는 회로를 구성해본다.</p><p>※ 참고: 눈이 즐거운 물리 (<a href="http://www.phys.pe.kr/">www.phys.pe.kr</a>) </p><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/w/wave-27.png"></p><br><h4 id="작동원리"><a href="#작동원리" class="headerlink" title="작동원리"></a>작동원리</h4><ul><li>안테나에 전자기파가 잡히면</li><li>C1815 트랜지스터로 신호를 증폭</li><li>1N4148 다이오드는 반대 방향으로 흐르는 노이즈 신호를 제거하여, 안테나에 잡힌 전자기파만을 유효 신호로 처리하도록 함</li><li>증폭된 신호를 A1015 트랜지스터를 스위치 삼아 LED를 켬</li></ul><br><h3 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h3><h4 id="개별-준비물"><a href="#개별-준비물" class="headerlink" title="개별 준비물"></a>개별 준비물</h4><ul><li>LED 1개</li><li>0.01uF (103) 세라믹 캐패시터 1개</li><li>A1015 트랜지스터 1개</li><li>C1815 트랜지스터 1개</li><li>10uH 인덕터 코일 (갈-검-검-금) 1개</li><li>1N4148 스위칭 다이오드 1개</li><li>CR2032 3V 리튬전지 1개</li><li>듀퐁 케이블 10P (9P 사용 가능) 1개</li></ul><br><h4 id="기타-준비물"><a href="#기타-준비물" class="headerlink" title="기타 준비물"></a>기타 준비물</h4><p>스트리퍼, 가위, 스카치테이프</p><br><h4 id="듀퐁-케이블-준비"><a href="#듀퐁-케이블-준비" class="headerlink" title="듀퐁 케이블 준비"></a>듀퐁 케이블 준비</h4><ol><li>듀퐁 케이블은 40P 형태로 판매되는 것이 많으므로, 40P 10cm 듀퐁 케이블 구입한다.</li></ol><img src="/image/w/wave-02.png" style="zoom:75%;" /><br><br><ol start="2"><li>갈색과 검은색 사이를 갈라내어 10P 4세트로 만든다. 이제, (갈-빨-주-노-초-파-보-회-흰-검) 10P가 1세트가 된다.</li></ol><p><img src="/image/w/wave-03.png"></p><br><ol start="3"><li>준비한 10P 케이블을 가위를 사용하여 반으로 잘라, 10P 8세트로 만든다. 1명당 1세트만 사용하면 되므로, 40P 듀퐁케이블 1개를 구입하면 학생 8명이 사용할 수 있다.</li></ol><p><img src="/image/w/wave-04.png"></p><br><ol start="4"><li>준비 완료</li></ol><p><img src="/image/w/wave-01.png"></p><br><br><h3 id="제작-방법"><a href="#제작-방법" class="headerlink" title="제작 방법"></a>제작 방법</h3><h4 id="듀퐁-케이블을-사용하여-회로-구성하기"><a href="#듀퐁-케이블을-사용하여-회로-구성하기" class="headerlink" title="듀퐁 케이블을 사용하여 회로 구성하기"></a>듀퐁 케이블을 사용하여 회로 구성하기</h4><ol><li><p>10가닥의 케이블을 (갈-빨-주-노-초-파-보-회-흰-검) 번호 순서대로 나열한 뒤, 스카치 테이프로 단단히 고정한다.</p><table><thead><tr><th>번호</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>0</th></tr></thead><tbody><tr><td>색깔</td><td>갈</td><td>빨</td><td>주</td><td>노</td><td>초</td><td>파</td><td>보</td><td>회</td><td>흰</td><td>검</td></tr></tbody></table></li></ol><p><img src="/image/w/wave-05.png"></p><br><ol start="2"><li>케이블의 중간 위치 정도까지 스카치 테이프를 붙여 단단히 고정한다. </li></ol><p><img src="/image/w/wave-06.png"></p><br><ol start="3"><li>케이블 아래쪽을 모두 갈라 10가닥으로 만든다.</li></ol><p><img src="/image/w/wave-07.png"></p><br><ol start="4"><li>빨간색(2번), 초록색(5번), 보라색(7번), 검은색(0번) 케이블을 짧게 자른다.</li></ol><p><img src="/image/w/wave-08.png"></p><br><ol start="5"><li>남아있는 케이블(갈(1번), 주(3번), 노(4번), 파(6번), 회(8번), 흰(9번))의 끝부분 7~8mm 정도를 스트리퍼의 22AWG 부분으로 집은 뒤에 힘을 주어 벗겨낸다. (흰색(9번)은 벗겨내지 않아도 됨)</li></ol><p><img src="/image/w/wave-09.png"></p><p><img src="/image/w/wave-10.png"></p><br><ol start="6"><li><p>주황색(3번)선과 파란색(6번)선의 끝부분을 모은 뒤, 함께 꼬아 하나로 만든다.</p><p>같은 방법으로, 노란색(4번)선과 회색(8번)선의 끝부분을 모아 하나로 만든 뒤, 다른 곳에 닿지 않도록 스카치테이프로 절연처리한다. </p></li></ol><p><img src="/image/w/wave-11.png"></p><br><ol start="7"><li><p>스카치테이프를 사용하여 CR2032 배터리를 붙인다.</p><ul><li>CR2032 (+)극 (CR2032 레터링 된 면) : 갈색(1번) 선을 스카치테이프로 단단히 붙임</li></ul><p><img src="/image/w/wave-13.png"></p><ul><li>CR2032 (-)극 (검은색 테두리가 보이는 면) : 주황색(3번)/파란색(6번) 선을 하나로 묶어낸 선을 붙임 </li></ul></li></ol><p><img src="/image/w/wave-12.png"></p><br><h4 id="부품-꼽기"><a href="#부품-꼽기" class="headerlink" title="부품 꼽기"></a>부품 꼽기</h4><ol><li><p>LED (LED는 극성이 있으므로 주의한다.)</p><ul><li>(+)극 (다리가 긴 쪽) : 갈색(1번)에 삽입</li><li>(-)극 (다리가 짧은 쪽) : 빨간색(2번)에 삽입</li></ul><p><img src="/image/w/wave-14.png"></p></li></ol><p><img src="/image/w/wave-15.png"></p><br><ol start="2"><li><p>A1015 트랜지스터 (글씨가 써 있는, 평평한 부분을 바라보았을 때를 기준으로)</p><ul><li>왼쪽 핀 (Emitter) : 빨간색(2번)에 삽입</li><li>가운데 핀(Collector) : 주황색(3번)에 삽입</li><li>오른쪽 핀(Base) : 노란색(4번)에 삽입</li></ul><p><img src="/image/w/wave-16.png"></p><p><img src="/image/w/wave-17.png"></p></li></ol><br><ol start="3"><li><p>0.01uF (103) 세라믹 캐패시터 (극성 없음) : 노란색(4번)과 파란색(6번)에 삽입</p><p><img src="/image/w/wave-18.png"></p><p><img src="/image/w/wave-19.png"></p></li></ol><br><ol start="4"><li>10uH 인덕터 코일 (극성 없음) : 파란색(6번)과 보라색(7번)에 삽입</li></ol><p><img src="/image/w/wave-20.png"></p><p><img src="/image/w/wave-21.png"></p><br><ol start="5"><li><p>C1815 트랜지스터  (글씨가 써 있는, 평평한 부분을 바라보았을 때를 기준으로)</p><ul><li>왼쪽 핀 (Emitter) : 보라색(7번)에 삽입</li><li>가운데 핀(Collector) : 회색(8번)에 삽입</li><li>오른쪽 핀(Base) : 흰색(9번)에 삽입</li></ul><p><img src="/image/w/wave-22.png"></p><p><img src="/image/w/wave-23.png"></p></li></ol><br><ol start="6"><li><p>1N4148 스위칭 다이오드 (<strong>방향에 주의!</strong>)</p><p><img src="/image/w/wave-24.png"></p></li></ol><p><img src="/image/w/wave-25.png"></p><br><ol start="7"><li>흰색(9번)선은 안테나의 역할을 한다.</li></ol><br><ol start="8"><li>완성!!</li></ol><br><br><h3 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h3><ul><li>전자파가 나올 만한 곳에 가져가 본다.</li><li>핸드폰 충전기가 꼽혀있는 콘센트 근처에 가져가 보았더니, 다음과 같이 LED에 불이 들어왔다.</li></ul><p><img src="/image/w/wave-26.png"></p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/science/">Science</category>
      
      
      
      <comments>http://stemwith.github.io/2021/11/02/STEM-%EC%A0%84%EC%9E%90%EA%B8%B0%ED%8C%8C-%EA%B2%80%EC%B6%9C%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32, DC모터, TB6612FNG</title>
      <link>http://stemwith.github.io/2021/11/01/ESP32-DC%EB%AA%A8%ED%84%B0/</link>
      <guid>http://stemwith.github.io/2021/11/01/ESP32-DC%EB%AA%A8%ED%84%B0/</guid>
      <pubDate>Mon, 01 Nov 2021 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;DC모터-사용하기&quot;&gt;&lt;a href=&quot;#DC모터-사용하기&quot; class=&quot;headerlink&quot; title=&quot;DC모터 사용하기&quot;&gt;&lt;/a&gt;DC모터 사용하기&lt;/h3&gt;&lt;p&gt;아두이노의 경우와 마찬가지로 ESP32에서도 TB6612FNG 모터드라이버와</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="DC모터-사용하기"><a href="#DC모터-사용하기" class="headerlink" title="DC모터 사용하기"></a>DC모터 사용하기</h3><p>아두이노의 경우와 마찬가지로 ESP32에서도 TB6612FNG 모터드라이버와 함께, 모터 및 아두이노 단독사용을 위하여 3.7V 18650 2개를 직렬로 연결한 외부전원을 사용한다.</p><br><h4 id="TB6612FNG"><a href="#TB6612FNG" class="headerlink" title="TB6612FNG"></a>TB6612FNG</h4><h5 id="기본-핀-배열"><a href="#기본-핀-배열" class="headerlink" title="기본 핀 배열"></a>기본 핀 배열</h5><table><thead><tr><th align="center">VM<br/>VCC<br/>GND(*)<br/>AOUT1<br/>AOUT2<br/>BOUT2<br/>BOUT1<br/>GND</th><th align="center"><img src="/image/t/tb6612fng-01.png" style="zoom:50%;" /></th><th align="center">PWMA<br/>AIN2<br/>AIN1<br/>STBY<br/>BIN1<br/>BIN2<br/>PWMB<br/>GND</th></tr></thead><tbody><tr><td align="center"></td><td align="center"><img src="/image/t/tb6612fng-02.png" style="zoom: 42%;" /></td><td align="center"></td></tr></tbody></table><br><h5 id="핀-배열이-다른-경우"><a href="#핀-배열이-다른-경우" class="headerlink" title="핀 배열이 다른 경우"></a>핀 배열이 다른 경우</h5><table><thead><tr><th align="center">GND<br/>VCC<br/>AOUT1<br/>AOUT2<br/>BOUT2<br/>BOUT1<br/>VM<br/>GND</th><th align="center"><img src="/image/t/tb6612fng-03.png" style="zoom:75%;" /></th><th align="center">PWMA<br/>AIN2<br/>AIN1<br/>NC (=STBY)<br/>BIN1<br/>BIN2<br/>PWMB<br/>GND</th></tr></thead><tbody><tr><td align="center"></td><td align="center"><img src="/image/t/tb6612fng-04.png" style="zoom: 50%;" /></td><td align="center"></td></tr></tbody></table><ul><li>VM (모터 전압) = 15V max</li><li>VCC (로직 전압) = 2.7 ~ 5.5V</li><li><strong>GND</strong><ul><li>TB6612FNG 모듈을 여러개 테스트한 결과, 기본 핀 배열을 가진 모듈의 <strong>3번핀 GND</strong>에 연결할 경우 <strong>작동이 안되는</strong> 몇몇 제품이 있었음</li><li>그러므로 <strong>8번핀, 9번핀의 GND 사용을 권장</strong>함</li></ul></li><li>출력전류: 정전류 1.2A (3.2A peak)까지 (모터 2개 사용시 합산 전류임)</li><li>모터 제어모드: CW, CCW, short-brake, STOP, stand-by</li><li>두개의 모터 출력을 개별 제어하며, <strong>100kHz</strong>의 PWM으로 속도 제어</li><li>써멀 셧다운 및 저전압 감지회로 내장</li></ul><br><h5 id="Pin의-사용"><a href="#Pin의-사용" class="headerlink" title="Pin의 사용"></a>Pin의 사용</h5><p>ESP32와 TB6612FNG모듈을 브레드보드를 통해 연결하기 쉽도록 핀을 구성한 Pinmap이므로, 필요에 따라 수정하여 사용할 수 있다. (아래표는 참고만 할 것!)</p><table><thead><tr><th>핀번호</th><th>TB6612FNG 모터드라이브 (기본 핀 배열)</th><th>ESP32 DEVKIT_C V4 사용시</th><th>ESP32 DEVKIT V1 사용시</th><th>외부전원</th><th>모터 / 역할</th></tr></thead><tbody><tr><td>1</td><td>VM</td><td></td><td></td><td>(+) (DC모터에 사용하는 전압 사용)</td><td></td></tr><tr><td>2</td><td>VCC</td><td>+3.3V</td><td>+3.3V</td><td></td><td></td></tr><tr><td>3</td><td><strong>GND (사용 비추천)</strong></td><td></td><td></td><td></td><td></td></tr><tr><td>4</td><td>A_OUT1</td><td></td><td></td><td></td><td>모터A</td></tr><tr><td>5</td><td>A_OUT2</td><td></td><td></td><td></td><td>모터A</td></tr><tr><td>6</td><td>B_OUT2</td><td></td><td></td><td></td><td>모터B</td></tr><tr><td>7</td><td>B_OUT1</td><td></td><td></td><td></td><td>모터B</td></tr><tr><td>8</td><td>GND</td><td></td><td></td><td>(-)</td><td></td></tr><tr><td>9</td><td>GND</td><td>GND</td><td>GND</td><td></td><td></td></tr><tr><td>10</td><td>B_PWM</td><td>12</td><td>13</td><td></td><td>모터B 속도제어</td></tr><tr><td>11</td><td>B_IN2</td><td>14</td><td>12</td><td></td><td>모터B 방향제어</td></tr><tr><td>12</td><td>B_IN1</td><td>27</td><td>14</td><td></td><td>모터B 방향제어</td></tr><tr><td>13</td><td>STBY</td><td>26</td><td>27</td><td></td><td>모터 상태신호</td></tr><tr><td>14</td><td>A_IN1</td><td>25</td><td>26</td><td></td><td>모터A 방향제어</td></tr><tr><td>15</td><td>A_IN2</td><td>33</td><td>25</td><td></td><td>모터A 방향제어</td></tr><tr><td>16</td><td>A_PWM</td><td>32</td><td>33</td><td></td><td>모터A 속도제어</td></tr></tbody></table><br><table><thead><tr><th>ESP32 DEVKIT V4 사용시</th><th><img src="/image/t/ESP32-RC-04.png"></th></tr></thead><tbody><tr><td>ESP32 DEVKIT V1 사용시</td><td><img src="/image/t/ESP32-RC-05.png"></td></tr></tbody></table><br><br><h3 id="모터-1개-컨트롤하기"><a href="#모터-1개-컨트롤하기" class="headerlink" title="모터 1개 컨트롤하기"></a>모터 1개 컨트롤하기</h3><table><thead><tr><th>(기어박스를 포함한) 일반 DC모터</th><th>(엔코더 모듈을 포함한) 엔코더 DC모터</th></tr></thead><tbody><tr><td>아두이노를 사용한 스마트카 실습용으로 많이 사용됨</td><td>Hall sensor를 통해 회전수를 정밀하게 측정가능</td></tr><tr><td>(+)와 (-), 2P 단자가 있음</td><td>5P or 6P 단자가 있음 (여기서는 (+)와 (-) 2P만 사용)</td></tr><tr><td><img src="/image/4wd-01.jpg" style="zoom:80%;" /></td><td><img src="/image/t/ESP32-RC-07.png" style="zoom: 67%;" /></td></tr></tbody></table><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><h5 id="ESP32와-컴퓨터를-USB선으로-연결하여-사용할-경우-단-모터-외부전원은-사용"><a href="#ESP32와-컴퓨터를-USB선으로-연결하여-사용할-경우-단-모터-외부전원은-사용" class="headerlink" title="ESP32와 컴퓨터를 USB선으로 연결하여 사용할 경우 (단, 모터 외부전원은 사용)"></a>ESP32와 컴퓨터를 USB선으로 연결하여 사용할 경우 (단, 모터 외부전원은 사용)</h5><p><img src="/image/t/ESP32-RC-01.png"></p><br><h5 id="ESP32와-컴퓨터의-연결없이-외부전원을-사용하여-단독으로-사용할-경우"><a href="#ESP32와-컴퓨터의-연결없이-외부전원을-사용하여-단독으로-사용할-경우" class="headerlink" title="ESP32와 컴퓨터의 연결없이, 외부전원을 사용하여 단독으로 사용할 경우"></a>ESP32와 컴퓨터의 연결없이, 외부전원을 사용하여 단독으로 사용할 경우</h5><ul><li><p>18650 2S 외부전원(7.4V)을 DC컨버터 모듈에 연결</p><ul><li>입력: 8~36V</li><li>출력: 1.25~32V 및 USB 5V 출력</li><li>75W내 사용 권장, 전류량 최대 5A (4.5A 이내 사용 권장)</li></ul><p><img src="/image/t/ESP32-RC-03.png"></p></li><li><p>여기서는 서보모터 추가 연결을 위해서, 왼쪽 가변 저항을 사용하여 출력 전압을 5V로 세팅하여 사용</p></li><li><p>USB 출력단자는 ESP32의 microUSB 단자에 연결</p></li></ul><p><img src="/image/t/ESP32-RC-02.png"></p><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TB6612FNG right side &amp; ESP32-WROOM-32D DEVKIT_C V4 left side pin order</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_PWMA = <span class="number">32</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_AIN1 = <span class="number">33</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_AIN2 = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_STBY = <span class="number">26</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_BIN1 = <span class="number">27</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_BIN2 = <span class="number">14</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_PWMB = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// TB6612FNG right side &amp; ESP32-WROOM-32 left side pin order</span></span><br><span class="line"><span class="comment">const int PIN_PWMA = 33;  </span></span><br><span class="line"><span class="comment">const int PIN_AIN1 = 25;</span></span><br><span class="line"><span class="comment">const int PIN_AIN2 = 26;</span></span><br><span class="line"><span class="comment">const int PIN_STBY = 27;</span></span><br><span class="line"><span class="comment">const int PIN_BIN1 = 14;</span></span><br><span class="line"><span class="comment">const int PIN_BIN2 = 12;</span></span><br><span class="line"><span class="comment">const int PIN_PWMB = 13;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PWM Channel setup</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> CH_PWMA = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> CH_PWMB = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// PWM frequency and bit resolution setup</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> pwmFrequency = <span class="number">10000</span>;  <span class="comment">// Hz</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> bitResolution = <span class="number">8</span>;     <span class="comment">// pwm value: 0~255</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_LED = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_LED, OUTPUT);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// tb6612fng setting</span></span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_STBY,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_AIN1,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_AIN2,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_PWMA,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_BIN1,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_BIN2,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_PWMB,OUTPUT);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// motor output(PWM) setting (channel, frequency, bit)</span></span><br><span class="line">  <span class="built_in">ledcSetup</span>(CH_PWMA, pwmFrequency, bitResolution);</span><br><span class="line">  <span class="built_in">ledcSetup</span>(CH_PWMB, pwmFrequency, bitResolution);</span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(PIN_PWMA, CH_PWMA);</span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(PIN_PWMB, CH_PWMB);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// channel setting (GPIO pin, channel)</span></span><br><span class="line">  <span class="comment">// if STBY(CH0) = LOW, Standby states.</span></span><br><span class="line">  <span class="comment">// if STBY(CH0) = HIGH, and INA1&amp;INA2 have different value</span></span><br><span class="line">  <span class="comment">// and PWMA has some value, CW or CCW rotation is made.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Channel      CW   CCW  Stanby Stop Brake1 Brake2 Brake3</span></span><br><span class="line">  <span class="comment">// PIN_STBY (0) HIGH HIGH LOW    HIGH  HIGH  HIGH   HIGH</span></span><br><span class="line">  <span class="comment">// PIN_INA1 (1) HIGH LOW  *      LOW   HIGH  LOW    HIGH</span></span><br><span class="line">  <span class="comment">// PIN_INA2 (2) LOW  HIGH *      LOW   HIGH  HIGH   LOW</span></span><br><span class="line">  <span class="comment">// CH_PWMA  (3) PWM  PWM  *      HIGH  *     LOW    LOW  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Motor A : CW</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_STBY, HIGH); <span class="comment">// STBY</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_AIN1, HIGH); <span class="comment">// AIN1</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_AIN2, LOW);   <span class="comment">// AIN2</span></span><br><span class="line">  <span class="built_in">ledcWrite</span>(CH_PWMA, <span class="number">255</span>); <span class="comment">// PWMA</span></span><br><span class="line">  <span class="comment">// Motor B : CW</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_BIN1, HIGH); <span class="comment">// BIN1</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_BIN2, LOW);   <span class="comment">// BIN2</span></span><br><span class="line">  <span class="built_in">ledcWrite</span>(CH_PWMB, <span class="number">255</span>); <span class="comment">// PWMB</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Motor : Stand-by</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_STBY, LOW); <span class="comment">// STBY</span></span><br><span class="line">  <span class="comment">//delay(1000);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//LED Blink</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, LOW);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, HIGH);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, LOW);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Motor A : CCW</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_STBY, HIGH); <span class="comment">// STBY</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_AIN1, LOW); <span class="comment">// AIN1</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_AIN2, HIGH);   <span class="comment">// AIN2</span></span><br><span class="line">  <span class="built_in">ledcWrite</span>(CH_PWMA, <span class="number">255</span>); <span class="comment">// PWMA</span></span><br><span class="line">  <span class="comment">// Motor B : CCW</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_BIN1, LOW); <span class="comment">// BIN1</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_BIN2, HIGH);   <span class="comment">// BIN2</span></span><br><span class="line">  <span class="built_in">ledcWrite</span>(CH_PWMB, <span class="number">255</span>); <span class="comment">// PWMB</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Motor : Stand-by</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_STBY, LOW); <span class="comment">// STBY</span></span><br><span class="line">  <span class="comment">//delay(1000);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//LED Blink</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_LED, LOW);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_LED, HIGH);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_LED, LOW);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h4><h5 id="스케치-중간에-있는-stand-by가-있거나-없거나-동일한-운동을-보일-것-같지만-실제로는-완전히-다르다"><a href="#스케치-중간에-있는-stand-by가-있거나-없거나-동일한-운동을-보일-것-같지만-실제로는-완전히-다르다" class="headerlink" title="스케치 중간에 있는 stand-by가 있거나 없거나 동일한 운동을 보일 것 같지만, 실제로는 완전히 다르다."></a>스케치 중간에 있는 stand-by가 있거나 없거나 동일한 운동을 보일 것 같지만, 실제로는 완전히 다르다.</h5><ul><li><p>stand-by가 있는 경우</p><ul><li>3초간 CW회전 후 정지 → 3.5초 대기 → 0.5초 LED켜졌다가 꺼짐 → 3초간 CCW회전 후 정지→ 3.5초 대기 → 0.5초 LED켜졌다가 꺼짐</li></ul></li><li><p>stand-by가 없는 경우:</p><ul><li>모터<ul><li>모터의 delay 시간(회전시간)이 3초로 되어 있어도 stand-by 상태로 들어가지 않으므로, <strong>실제로는 7초간 회전</strong> 후 방향을 바꿈 </li><li>7초간 CW회전 후 → (정지하지 않고) 곧바로 7초간 CCW회전 (반복)</li></ul></li><li>LED<ul><li>꺼짐: 6.5초간 꺼져있다가 (모터의 delay 시간 3초 + led low delay 시간 3.5초)</li><li>켜짐:  0.5초간 켜짐 (반복)</li></ul></li></ul></li><li><p>그러므로, 각 상황에 따라 stand-by를 걸어야 할지, 말아야할지를 결정해야 함.</p><ul><li>stand-by를 걸지 않은 상태에서 멈추려면 PWMA or PWMB를 0으로 주면 됨.</li></ul></li></ul><br><h5 id="회전-방향이-생각했던-방향과-반대로-회전하는-경우"><a href="#회전-방향이-생각했던-방향과-반대로-회전하는-경우" class="headerlink" title="회전 방향이 (생각했던 방향과) 반대로 회전하는 경우"></a>회전 방향이 (생각했던 방향과) 반대로 회전하는 경우</h5><p>AIN1핀과 AIN2 핀의 번호를 바꿔준다. 즉, 위 스케치에서</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AIN2 = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AIN1 = <span class="number">26</span>;</span><br></pre></td></tr></table></figure><p>부분을</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AIN2 = <span class="number">26</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AIN1 = <span class="number">25</span>;</span><br></pre></td></tr></table></figure><p>로 바꿔준다.</p><br><br><h3 id="모터-2개-컨트롤하기"><a href="#모터-2개-컨트롤하기" class="headerlink" title="모터 2개 컨트롤하기"></a>모터 2개 컨트롤하기</h3><p><img src="/image/t/ESP32-RC-06.png"><br></p><h4 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h4><p>위의 ‘’모터 1개 컨트롤하기’’ 스케치와 동일함.</p><br><br><h3 id="스케치-최적화"><a href="#스케치-최적화" class="headerlink" title="스케치 최적화"></a>스케치 최적화</h3><p>move(), stop()을 만들어서 스케치 최적화</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TB6612FNG right side &amp; ESP32-WROOM-32D DEVKIT_C V4 left side pin order</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_PWMA = <span class="number">32</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_AIN1 = <span class="number">33</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_AIN2 = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_STBY = <span class="number">26</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_BIN1 = <span class="number">27</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_BIN2 = <span class="number">14</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_PWMB = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// TB6612FNG right side &amp; ESP32-WROOM-32 left side pin order</span></span><br><span class="line"><span class="comment">const int PIN_PWMA = 33;  </span></span><br><span class="line"><span class="comment">const int PIN_AIN1 = 25;</span></span><br><span class="line"><span class="comment">const int PIN_AIN2 = 26;</span></span><br><span class="line"><span class="comment">const int PIN_STBY = 27;</span></span><br><span class="line"><span class="comment">const int PIN_BIN1 = 14;</span></span><br><span class="line"><span class="comment">const int PIN_BIN2 = 12;</span></span><br><span class="line"><span class="comment">const int PIN_PWMB = 13;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PWM Channel setup</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> CH_PWMA = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> CH_PWMB = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// PWM frequency and bit resolution setup</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> pwmFrequency = <span class="number">10000</span>;  <span class="comment">// Hz</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> bitResolution = <span class="number">8</span>;     <span class="comment">// pwm value: 0~255</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PIN_LED = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_LED, OUTPUT);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// tb6612fng setting</span></span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_STBY,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_AIN1,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_AIN2,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_PWMA,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_BIN1,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_BIN2,OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(PIN_PWMB,OUTPUT);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// motor output(PWM) setting (channel, frequency, bit)</span></span><br><span class="line">  <span class="built_in">ledcSetup</span>(CH_PWMA, pwmFrequency, bitResolution);</span><br><span class="line">  <span class="built_in">ledcSetup</span>(CH_PWMB, pwmFrequency, bitResolution);</span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(PIN_PWMA, CH_PWMA);</span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(PIN_PWMB, CH_PWMB);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// channel setting (GPIO pin, channel)</span></span><br><span class="line">  <span class="comment">// if STBY(CH0) = LOW, Standby states.</span></span><br><span class="line">  <span class="comment">// if STBY(CH0) = HIGH, and INA1&amp;INA2 have different value</span></span><br><span class="line">  <span class="comment">// and PWMA has some value, CW or CCW rotation is made.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Channel      CW   CCW  Stanby Stop Brake1 Brake2 Brake3</span></span><br><span class="line">  <span class="comment">// PIN_STBY (0) HIGH HIGH LOW    HIGH  HIGH  HIGH   HIGH</span></span><br><span class="line">  <span class="comment">// PIN_INA1 (1) HIGH LOW  *      LOW   HIGH  LOW    HIGH</span></span><br><span class="line">  <span class="comment">// PIN_INA2 (2) LOW  HIGH *      LOW   HIGH  HIGH   LOW</span></span><br><span class="line">  <span class="comment">// CH_PWMA  (3) PWM  PWM  *      HIGH  *     LOW    LOW  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, <span class="number">128</span>, <span class="number">0</span>);               <span class="comment">// motor A(right wheels), half speed, moving forward</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">2</span>, <span class="number">255</span>, <span class="number">0</span>);               <span class="comment">// motor B(left wheels), full speed, moving forward</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">stop</span>(); <span class="comment">// Motor : Stand-by</span></span><br><span class="line">  <span class="comment">//delay(1000);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//LED Blink</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, LOW);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, HIGH);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, LOW);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, <span class="number">255</span>, <span class="number">1</span>);               <span class="comment">// motor A(right wheels), full speed, moving backward</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">2</span>, <span class="number">128</span>, <span class="number">1</span>);               <span class="comment">// motor B(left wheels), half speed, moving backward</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">stop</span>(); <span class="comment">// Motor : Stand-by</span></span><br><span class="line">  <span class="comment">//delay(1000);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//LED Blink</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, LOW);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">3500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, HIGH);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(ledPin, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> motor, <span class="keyword">int</span> speed, <span class="keyword">int</span> direction)</span> </span>&#123;   <span class="comment">//Move specific motor at speed and direction</span></span><br><span class="line"><span class="comment">//motor: A(Right) -&gt; 1, B(Left) -&gt; 2</span></span><br><span class="line"><span class="comment">//speed: 0 is off, and 255 is full speed</span></span><br><span class="line"><span class="comment">//direction: 0 clockwise, 1 counter-clockwise</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_STBY, HIGH);         <span class="comment">// move</span></span><br><span class="line"></span><br><span class="line">  boolean inPin1 = HIGH;            <span class="comment">// Defalut(direction=0) - Clockwise</span></span><br><span class="line">  boolean inPin2 = LOW;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(direction == <span class="number">1</span>) &#123;             <span class="comment">// Count-clockwise</span></span><br><span class="line">    inPin1 = LOW;</span><br><span class="line">    inPin2 = HIGH;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(motor == <span class="number">1</span>)&#123;                 <span class="comment">// if motor == 1, right wheel</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(PIN_AIN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(PIN_AIN2, inPin2);</span><br><span class="line">    <span class="built_in">ledcWrite</span>(CH_PWMA, speed);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;                         <span class="comment">// if motor is not 1, left wheel</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(PIN_BIN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(PIN_BIN2, inPin2);</span><br><span class="line">    <span class="built_in">ledcWrite</span>(CH_PWMB, speed);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(PIN_STBY, LOW);          <span class="comment">// stand-by = stop</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">ESP32</category>
      
      
      <category domain="http://stemwith.github.io/tags/rc/">rc</category>
      
      
      <comments>http://stemwith.github.io/2021/11/01/ESP32-DC%EB%AA%A8%ED%84%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32, nRF24L01 무선통신</title>
      <link>http://stemwith.github.io/2021/10/10/ESP32-nRF24L01/</link>
      <guid>http://stemwith.github.io/2021/10/10/ESP32-nRF24L01/</guid>
      <pubDate>Sun, 10 Oct 2021 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;nRF24L01&quot;&gt;&lt;a href=&quot;#nRF24L01&quot; class=&quot;headerlink&quot; title=&quot;nRF24L01&quot;&gt;&lt;/a&gt;nRF24L01&lt;/h3&gt;&lt;h4 id=&quot;library&quot;&gt;&lt;a href=&quot;#library&quot; class=&quot;header</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="nRF24L01"><a href="#nRF24L01" class="headerlink" title="nRF24L01"></a>nRF24L01</h3><h4 id="library"><a href="#library" class="headerlink" title="library"></a>library</h4><p><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong>&gt; <strong>nRF24L01</strong> 검색한 후, <strong>RF24 by TMRh20, Avamander</strong> 설치</p><p><img src="/image/n/ESP32-nRF24L01-02.png"></p><br><h4 id="schematic-nRF24L01-receiver-with-ESP32"><a href="#schematic-nRF24L01-receiver-with-ESP32" class="headerlink" title="schematic: nRF24L01 receiver with ESP32"></a>schematic: nRF24L01 receiver with ESP32</h4><p><img src="/image/n/ESP32-nRF24L01-01.png"></p><p>※ nRF24L01 모듈에 따라 10uF 캐페시터가 없으면 통신이 안되는 경우가 있음. 이런 경우에만 사용할 것.</p><br><h5 id="pinmap-안테나를-위로-향하게-두고-모듈을-위에서-내려다-볼때의-핀배열"><a href="#pinmap-안테나를-위로-향하게-두고-모듈을-위에서-내려다-볼때의-핀배열" class="headerlink" title="pinmap: (안테나를 위로 향하게 두고, 모듈을 위에서 내려다 볼때의 핀배열)"></a>pinmap: (안테나를 위로 향하게 두고, 모듈을 위에서 내려다 볼때의 핀배열)</h5><table><thead><tr><th>ESP32</th><th>3V3</th><th>IO5</th><th>IO23</th><th>None</th></tr></thead><tbody><tr><td></td><td>↑</td><td>↑</td><td>↑</td><td>↑</td></tr><tr><td>nRF24L01</td><td>VCC + 10uF</td><td>CSN</td><td>MOSI</td><td>IRQ</td></tr><tr><td>(위에서 보이는 핀배열)</td><td>GND + 10uF</td><td>CE</td><td>SCK</td><td>MISO</td></tr><tr><td></td><td>↓</td><td>↓</td><td>↓</td><td>↓</td></tr><tr><td><strong>ESP32</strong></td><td><strong>GND</strong></td><td><strong>IO4</strong></td><td><strong>IO18</strong></td><td><strong>IO19</strong></td></tr></tbody></table><br><h4 id="sketch-nRF24L01-receiver-DHT22-temperature-and-humidity-Sensor"><a href="#sketch-nRF24L01-receiver-DHT22-temperature-and-humidity-Sensor" class="headerlink" title="sketch: nRF24L01 receiver, DHT22 temperature and humidity Sensor"></a>sketch: nRF24L01 receiver, DHT22 temperature and humidity Sensor</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Libraries for NRF24L01+ module.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RF24.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//RF24 object with two pins defined with arguments. CE: 4, CSN: 5</span></span><br><span class="line"><span class="function">RF24 <span class="title">radio</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//Address of the pipe. 40 bit long, you can choose this freely.</span></span><br><span class="line"><span class="comment">//Remember to use different address in different projects.</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> address = <span class="number">0x1234ABCDEF</span>LL;</span><br><span class="line"><span class="comment">// float temphumi[2];</span></span><br><span class="line"><span class="keyword">uint16_t</span> temphumi[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// for temperature, humidity sensor</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DHT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTPIN    13         <span class="comment">// data pin</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTTYPE   DHT11      <span class="comment">// change to DHT11 if you&#x27;re using the DHT11</span></span></span><br><span class="line">                             <span class="comment">// AM2301(DHT21) -&gt; DHT21, AM2302(DHT22) -&gt; DHT22</span></span><br><span class="line"><span class="function">DHT <span class="title">dht</span><span class="params">(DHTPIN, DHTTYPE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//Start the radio</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  radio.begin();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Open reading pipe with given address and start listening for incoming data</span></span><br><span class="line">  radio.openReadingPipe(<span class="number">1</span>, address);</span><br><span class="line">  radio.startListening();</span><br><span class="line">    </span><br><span class="line">  dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//If data is available in radio&#x27;s buffer</span></span><br><span class="line">  <span class="keyword">if</span>(radio.available()) &#123;</span><br><span class="line">    <span class="comment">//While the data is available...</span></span><br><span class="line">    <span class="keyword">while</span> (radio.available()) &#123;</span><br><span class="line">      <span class="comment">//Update temperature -variable with data from the radio module</span></span><br><span class="line">      radio.read(&amp;temphumi, <span class="keyword">sizeof</span>(temphumi));</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.print(<span class="string">&quot;temperature: &quot;</span>); Serial.print(temphumi[<span class="number">0</span>]);</span><br><span class="line">    Serial.print(<span class="string">&quot;,  humidity: &quot;</span>); Serial.println(temphumi[<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h5 id="long-long-address-0x1234ABCDEFLL"><a href="#long-long-address-0x1234ABCDEFLL" class="headerlink" title="long long address = 0x1234ABCDEFLL;"></a>long long address = 0x1234ABCDEFLL;</h5><ul><li>receiver와 transmitter의 페어링을 위한 파이프(주소)를 지정함. (receiver와 transmitter의 파이프(주소)는 동일해야 함)</li><li>주변 여러 사람이 동시에 nRF24L01 모듈을 사용할 경우, <strong>서로 다른 고유의 파이프(주소)를 지정</strong>하여야 한다.</li></ul><br><h5 id="uint16-t-temphumi-2"><a href="#uint16-t-temphumi-2" class="headerlink" title="uint16_t temphumi[2];"></a>uint16_t temphumi[2];</h5><ul><li><p>8-bit 기반 Arduino와 32-bit 기반 ESP32를 receiver와 transmitter로 혼용하여 사용할 경우, 아래와 같이 <strong>int를 사용하여 변수(혹은 배열)를 선언하면 문제가 발생</strong>함.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> temphumi[<span class="number">2</span>];</span><br></pre></td></tr></table></figure><p>8비트 아키텍처에서 int는 16비트이지만, 32비트 아키텍처에서는 32비트로 정의되기 때문이며,</p></li><li><p>이로 인해 radio.write 또는 radio.read를 할때 일부 데이터가 송신(혹은 수신)되지 않을 수 있다.</p></li><li><p>그러므로, arduino와 ESP32를 함께 사용할때에는, 아래와 같은 형태로 변수(혹은 배열) 선언시 특정 비트의 변수로 제한하여 선언할 필요가 있다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">uint16_t</span> temphumi[<span class="number">2</span>];</span><br></pre></td></tr></table></figure></li><li><p>단, 송수신기로 Arduino만 사용하거나, 혹은 ESP32만 사용하는 경우에는 int를 사용해도 됨</p></li></ul><br><h5 id="radio-openReadingPipe-1-address"><a href="#radio-openReadingPipe-1-address" class="headerlink" title="radio.openReadingPipe(1, address);"></a>radio.openReadingPipe(1, address);</h5><p>페어링 파이프(주소)를 오픈</p><br><br><h4 id="sketch-nRF24L01-transmitter-with-ESP32-DHT22-temperature-and-humidity-Sensor"><a href="#sketch-nRF24L01-transmitter-with-ESP32-DHT22-temperature-and-humidity-Sensor" class="headerlink" title="sketch: nRF24L01 transmitter with ESP32, DHT22 temperature and humidity Sensor"></a>sketch: nRF24L01 transmitter with ESP32, DHT22 temperature and humidity Sensor</h4><h5 id="library-for-DHT11-or-DHT22-sensor"><a href="#library-for-DHT11-or-DHT22-sensor" class="headerlink" title="library for DHT11 or DHT22 sensor"></a>library for DHT11 or DHT22 sensor</h5><p>먼저 온습도 센서 데이터를 보내기 위해 온습도 센서 라이브러리를 설치 </p><p><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong>&gt; <strong>DHT</strong> 검색</p><ul><li><p>먼저 **DHT sensor library (by Adafruit)**를 검색하여 <strong>설치</strong>를 누르면,</p><p><img src="/image/dht22-03.png"></p></li></ul><ul><li><p><strong>Dependencies for library DHT sensor library</strong> 창이 나오면 <strong>Install all</strong>을 클릭하여 2개의 라이브러리를 동시에 설치</p><p><img src="/image/dht22-04.png"></p></li></ul><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Libraries for NRF24L01+ module.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RF24.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//RF24 object with two pins defined with arguments. CE: 4, CSN: 5</span></span><br><span class="line"><span class="function">RF24 <span class="title">radio</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//Address of the pipe. 40 bit long, you can choose this freely.</span></span><br><span class="line"><span class="comment">//Remember to use different address in different projects.</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> address = <span class="number">0x1234ABCDEF</span>LL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for temperature, humidity sensor</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DHT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTPIN    13         <span class="comment">// data pin</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTTYPE   DHT22      <span class="comment">// change to DHT11 if you&#x27;re using the DHT11</span></span></span><br><span class="line"><span class="comment">//float temphumi[2];         // AM2301(DHT21) -&gt; DHT21, AM2302(DHT22) -&gt; DHT22</span></span><br><span class="line"><span class="keyword">uint16_t</span> temphumi[<span class="number">2</span>];</span><br><span class="line"><span class="function">DHT <span class="title">dht</span><span class="params">(DHTPIN, DHTTYPE)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//Start the radio</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  radio.begin();</span><br><span class="line">  radio.openWritingPipe(address);</span><br><span class="line">  <span class="comment">//RF24_PA_MIN, RF24_PA_LOW, RF24_PA_HIGH and RF24_PA_MAX</span></span><br><span class="line">  <span class="comment">//NRF24L01: -18dBm, -12dBm,-6dBM, and 0dBm</span></span><br><span class="line">  radio.setPALevel(RF24_PA_LOW);</span><br><span class="line">  radio.stopListening();</span><br><span class="line">    </span><br><span class="line">  dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//Get temperature from the sensor</span></span><br><span class="line">  <span class="keyword">uint16_t</span> t = dht.readTemperature();</span><br><span class="line">  <span class="keyword">uint16_t</span> h = dht.readHumidity();</span><br><span class="line"></span><br><span class="line">  temphumi[<span class="number">0</span>] = t;</span><br><span class="line">  temphumi[<span class="number">1</span>] = h;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Send the temperature wirelessly, print error if failed</span></span><br><span class="line">  <span class="keyword">if</span> (!radio.write(&amp;temphumi, <span class="keyword">sizeof</span>(temphumi))) &#123;</span><br><span class="line">    Serial.println(F(<span class="string">&quot;Sending temperature failed&quot;</span>));</span><br><span class="line">      </span><br><span class="line">  <span class="comment">// Check if any reads failed and exit early (to try again).</span></span><br><span class="line">  <span class="keyword">if</span> (isnan(h) || isnan(t)) &#123;</span><br><span class="line">    Serial.println(F(<span class="string">&quot;Failed to read from DHT sensor!&quot;</span>));</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h5 id="long-long-address-0x1234ABCDEFLL-1"><a href="#long-long-address-0x1234ABCDEFLL-1" class="headerlink" title="long long address = 0x1234ABCDEFLL;"></a>long long address = 0x1234ABCDEFLL;</h5><ul><li>receiver와 transmitter의 페어링을 위한 파이프(주소)를 지정함. (receiver와 transmitter의 파이프(주소)는 동일해야 함)</li><li>주변 여러 사람이 동시에 nRF24L01 모듈을 사용할 경우, <strong>서로 다른 고유의 파이프(주소)를 지정</strong>하여야 한다.</li></ul><br><h5 id="radio-setPALevel-RF24-PA-LOW"><a href="#radio-setPALevel-RF24-PA-LOW" class="headerlink" title="radio.setPALevel(RF24_PA_LOW);"></a>radio.setPALevel(RF24_PA_LOW);</h5><p>송신 전파 강도를 설정한다.</p><ul><li>RF24_PA_MIN</li><li>RF24_PA_LOW</li><li>RF24_PA_HIGH</li><li>RF24_PA_MAX: 가장 강함 (전류소모도 큼) </li></ul><br><h4 id="schematic-nRF24L01-transmitter-with-ESP32"><a href="#schematic-nRF24L01-transmitter-with-ESP32" class="headerlink" title="schematic: nRF24L01 transmitter with ESP32"></a>schematic: nRF24L01 transmitter with ESP32</h4><p>스케치를 업로드하고, 컴퓨터와 연결한 USB선을 분리한 뒤, 독립하여 동작하도록 외부 전원을 연결한다.</p><p>※ nRF24L01 모듈에 따라 10uF 캐페시터가 없으면 통신이 안되는 경우가 있음. 이런 경우에만 사용할 것.</p><p><img src="/image/n/ESP32-nRF24L01-03.png"></p><br><ul><li>ESP32를 외부전원을 통해 동작시키려면, ESP32의 5V/GND 단자를 사용하여 5<del>12V의 전압(최적 전압은 6</del>7V)을 공급하여야 한다.</li><li>여기서는 DC-DC 5V 승압회로를 사용하여 ESP32에 5V를 공급한다. (배터리는 18650 1개 (3.7V) 사용)</li><li>(transmitter의 경우, 많은 전류를 사용하지 않으므로) 위 그림처럼 ESP32에 DC컨버터를 사용하여 전원을 공급하는 형태보다는, <strong>TTGO T-Energy</strong> 사용을 추천함</li></ul><br><h5 id="18650을-사용하여-5V-외부-전원-만들기"><a href="#18650을-사용하여-5V-외부-전원-만들기" class="headerlink" title="18650을 사용하여 5V 외부 전원 만들기"></a>18650을 사용하여 5V 외부 전원 만들기</h5><ul><li>18650 소켓에 F단자를 납땜하여 연결한다. (<strong>M단자는 서로 맞닿을 경우 과열 위험이 있으므로 사용금지!</strong>)</li></ul><p><img src="/image/n/ESP32-nRF24L01-04.png"></p><br><ul><li>DC-DC 5V 승압 모듈에 아래 그림과 같이 납땜하여 연결한다. (USB단자는 사용하지 않음)</li></ul><p><img src="/image/n/ESP32-nRF24L01-06.png"></p><br><p>※ USB단자가 있는 5V 승압 모듈을 사용하였지만, USB단자가 없는 승압모듈을 사용하면 더 깔끔하게 제작 가능하다.</p><p><img src="/image/n/ESP32-nRF24L01-05.png"></p><br><ul><li>위 사진과 같이 납땜한 승압 모듈을 18650배터리와 ESP32에 연결한다.</li></ul><table><thead><tr><th>승압 모듈</th><th>ESP32</th><th>18650배터리</th></tr></thead><tbody><tr><td>파란색 원 (GND)</td><td>GND</td><td></td></tr><tr><td>빨간색 원 (5V)</td><td>5V</td><td></td></tr><tr><td>노란색 원(IN+)</td><td></td><td>(+)극</td></tr><tr><td>초록색 원(IN-)</td><td></td><td>(-)극</td></tr></tbody></table><br><h4 id="result"><a href="#result" class="headerlink" title="result"></a>result</h4><p><img src="/image/n/ESP32-nRF24L01-07.png"></p><br><br><h3 id="nRF24L01-Dual-Joystick"><a href="#nRF24L01-Dual-Joystick" class="headerlink" title="nRF24L01 + Dual Joystick"></a>nRF24L01 + Dual Joystick</h3><p>2개의 조이스틱을 사용하여 x축, y축 좌표값을 받아보자.</p><br><h4 id="schematic-nRF24L01-transmitter-with-ESP32-Dual-Joystick"><a href="#schematic-nRF24L01-transmitter-with-ESP32-Dual-Joystick" class="headerlink" title="schematic: nRF24L01 transmitter with ESP32, Dual Joystick"></a>schematic: nRF24L01 transmitter with ESP32, Dual Joystick</h4><p>하나의 조이스틱으로도 일반적인 조정이 가능하지만 시판되는 조정기의 경우 dual joystick(혹은 dual channel)을 사용하는 형태가 많으므로, 여기서도 이와 같은 형태의 transmitter를 만들어 보자.</p><p><img src="/image/n/ESP32-nRF24L01-08.png"></p><ul><li><p>위 그림에서는 18650을 DC 컨버터를 사용하여 5V핀에 입력하고 있음.</p></li><li><p>(transmitter의 경우, 많은 전류를 사용하지 않으므로) 위 그림처럼 ESP32에 DC컨버터를 사용하여 전원을 공급하는 형태보다는, TTGO T-Energy 사용을 추천함</p><table><thead><tr><th>TTGO T-Energy</th><th></th></tr></thead><tbody><tr><td><img src="/image/n/TTGO-T-Energy03.png" style="zoom:67%;" /></td><td><img src="/image/n/TTGO-T-Energy04.png" style="zoom:67%;" /></td></tr></tbody></table></li></ul><br><h5 id="pinmap"><a href="#pinmap" class="headerlink" title="pinmap"></a>pinmap</h5><table><thead><tr><th>ESP32</th><th>Joystick1 (x축)</th><th>Joystick2 (y축)</th></tr></thead><tbody><tr><td>GND</td><td>GND</td><td>GND</td></tr><tr><td>5V</td><td>5V</td><td>5V</td></tr><tr><td>25</td><td>VRX</td><td></td></tr><tr><td>32</td><td></td><td>VRY</td></tr></tbody></table><br><h4 id="sketch-nRF24L01-transmitter-with-ESP32-Dual-Joystick"><a href="#sketch-nRF24L01-transmitter-with-ESP32-Dual-Joystick" class="headerlink" title="sketch: nRF24L01 transmitter with ESP32, Dual Joystick"></a>sketch: nRF24L01 transmitter with ESP32, Dual Joystick</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RF24.h&gt;</span></span></span><br><span class="line"><span class="function">RF24 <span class="title">radio</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> address = <span class="number">0x1234ABCDEF</span>LL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for no interference, two joysticks must be used with each other ADC!  </span></span><br><span class="line"><span class="comment">// one joystick use ADC1: GPIO 36,39,32,33,34,35</span></span><br><span class="line"><span class="comment">// the other must use ADC2: GPIO 4,0,2,15,13,12,14,27,25,26</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Jstick_x_pin = <span class="number">25</span>;           <span class="comment">// Left_Right GPIO25</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Jstick_y_pin = <span class="number">32</span>;           <span class="comment">// Forward_Back GPIO32</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Value</span>&#123;</span></span><br><span class="line">  <span class="keyword">uint16_t</span> value_x;</span><br><span class="line">  <span class="keyword">uint16_t</span> value_y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Value data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  </span><br><span class="line">  radio.begin();</span><br><span class="line">  radio.openWritingPipe(address);</span><br><span class="line">  radio.setPALevel(RF24_PA_MIN);</span><br><span class="line">  radio.stopListening();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  data.value_x = Jstick(Jstick_x_pin);</span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line">  data.value_y = Jstick(Jstick_y_pin);</span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line">  radio.write(&amp;data, <span class="keyword">sizeof</span>(Value));</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Serial.print(&quot;x: &quot;); Serial.print(data.value_x);</span></span><br><span class="line">  <span class="comment">//Serial.print(&quot;, y: &quot;); Serial.println(data.value_y);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint16_t</span> <span class="title">Jstick</span><span class="params">(<span class="keyword">int</span> Jstick_Pin)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> analogRead(Jstick_Pin);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h5 id="Joystick-GPIO의-선정"><a href="#Joystick-GPIO의-선정" class="headerlink" title="Joystick GPIO의 선정"></a>Joystick GPIO의 선정</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for no interference, two joysticks must be used with each other ADC! </span></span><br><span class="line"><span class="comment">// one joystick use ADC1: GPIO 36,39,32,33,34,35</span></span><br><span class="line"><span class="comment">// the other must use ADC2: GPIO 4,0,2,15,13,12,14,27,25,26</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Jstick_x_pin = <span class="number">25</span>;           <span class="comment">// Left_Right GPIO25</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Jstick_y_pin = <span class="number">32</span>;           <span class="comment">// Forward_Back GPIO32</span></span><br></pre></td></tr></table></figure><ul><li>2개의 joystick을 동시에 사용할때 동일한 ADC의 GPIO를 사용하면, <strong>한쪽 joystick을 움직여 값을 변화시킬 경우 다른 한쪽 joystick을 움직이지 않았음에도 동시에 값이 일부 (소폭) 변화하는 현상</strong>이 생긴다.</li><li>이 문제를 해결하기 위해 각각의 joystick을 서로 다른 ADC에 연결한다.<ul><li>ADC1: GPIO 36,39,32,33,34,35 중 1개 사용 (예제에서는 GPIO 32를 y축 joystick으로 사용)</li><li>ADC2:  GPIO 4,(0),(2),15,13,(12),14,27,25,26 중 1개 사용 (()안의 핀은 사용시 주의 필요) (예제에서는 GPIO 25를 x축 joystick으로 사용)</li></ul></li><li>단, ESP32의 wifi 기능을 이용하면 ADC1핀 중에서 wifi 기능에 공유되는 핀의 사용에 제한을 받게 되므로 주의가 필요하다.</li><li>그밖에도 사용하는 ADC의 noise를 제거하기 위해 다음과 같은 방법을 쓰는 것이 좋다.<ul><li>GPIO와 GND에 100nF 케패시터를 연결하여 사용</li><li>10여회 정도의 값을 받아 평균값으로 사용</li></ul></li></ul><br><h4 id="schematic-nRF24L01-receiver-with-ESP32-1"><a href="#schematic-nRF24L01-receiver-with-ESP32-1" class="headerlink" title="schematic: nRF24L01 receiver with ESP32"></a>schematic: nRF24L01 receiver with ESP32</h4><p><img src="/image/n/ESP32-nRF24L01-01.png"></p><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RF24.h&gt;</span></span></span><br><span class="line"><span class="function">RF24 <span class="title">radio</span><span class="params">(<span class="number">4</span> ,<span class="number">5</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> address = <span class="number">0x1234ABCDEF</span>LL;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Value</span>&#123;</span></span><br><span class="line">  <span class="keyword">uint16_t</span> value_x;</span><br><span class="line">  <span class="keyword">uint16_t</span> value_y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Value data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">  radio.<span class="built_in">begin</span>();</span><br><span class="line">  radio.<span class="built_in">openReadingPipe</span>(<span class="number">1</span>, address);</span><br><span class="line">  radio.<span class="built_in">setPALevel</span>(RF24_PA_LOW);</span><br><span class="line">  radio.<span class="built_in">startListening</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> lastRecvTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recvData</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>( radio.<span class="built_in">available</span>())&#123;</span><br><span class="line">    radio.<span class="built_in">read</span>(&amp;data, <span class="built_in"><span class="keyword">sizeof</span></span>(Value));</span><br><span class="line">    lastRecvTime = <span class="built_in">millis</span>();  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> now = <span class="built_in">millis</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>( now - lastRecvTime &gt; <span class="number">1000</span>)&#123;</span><br><span class="line"><span class="built_in">recvData</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;x: &quot;</span>); Serial.<span class="built_in">print</span>(data.value_x);</span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;, y: &quot;</span>); Serial.<span class="built_in">println</span>(data.value_y); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="result-1"><a href="#result-1" class="headerlink" title="result"></a>result</h4><p><img src="/image/n/ESP32-nRF24L01-09.png"></p><br><br><h3 id="nRF24L01-Dual-Joystick-Dual-Servomotors"><a href="#nRF24L01-Dual-Joystick-Dual-Servomotors" class="headerlink" title="nRF24L01 + Dual Joystick + Dual Servomotors"></a>nRF24L01 + Dual Joystick + Dual Servomotors</h3><h4 id="schematic-nRF24L01-receiver-with-ESP32-Dual-Joystick"><a href="#schematic-nRF24L01-receiver-with-ESP32-Dual-Joystick" class="headerlink" title="schematic: nRF24L01 receiver with ESP32, Dual Joystick"></a>schematic: nRF24L01 receiver with ESP32, Dual Joystick</h4><p><img src="/image/n/ESP32-nRF24L01-10.png"></p><ul><li>MG996R과 같이 전류 사용량이 큰 서보 모터를 2개 이상 사용하는 경우, ESP32의 5V pin에서 공급하는 전류량이 부족하여 서보모터 동작이 원활치 않을 수 있다. 이런 경우에는 아래와 같이 외부 전원을 사용하여야 한다.</li></ul><br><h5 id="pinmap-1"><a href="#pinmap-1" class="headerlink" title="pinmap"></a>pinmap</h5><table><thead><tr><th>ESP32</th><th>servo_x</th><th>servo_y</th></tr></thead><tbody><tr><td>GND</td><td>GND (갈)</td><td>GND (갈)</td></tr><tr><td>5V</td><td>5V (빨)</td><td>5V (빨)</td></tr><tr><td>25</td><td>VRX (주)</td><td></td></tr><tr><td>32</td><td></td><td>VRY (주)</td></tr></tbody></table><br><h4 id="schematic-nRF24L01-receiver-with-ESP32-Dual-Joystick-External-Power-standalone"><a href="#schematic-nRF24L01-receiver-with-ESP32-Dual-Joystick-External-Power-standalone" class="headerlink" title="schematic: nRF24L01 receiver with ESP32, Dual Joystick, External Power (standalone)"></a>schematic: nRF24L01 receiver with ESP32, Dual Joystick, External Power (standalone)</h4><p><img src="/image/n/esp32-nRF24L01-servo-02.png"></p><br><h5 id="외부-전원의-구성"><a href="#외부-전원의-구성" class="headerlink" title="외부 전원의 구성"></a>외부 전원의 구성</h5><ul><li><p>18650 리튬이온 전지 2개를 사용하여 7.4V를 공급 (혹은 18650 3개를 사용하여 11.1V로 구성)</p></li><li><p>XL4015E1칩을 사용한 HW-514 DC-DC regulator를 사용하여,  7.4V → 5V로 전압을 낮춘다. (유사한 형태의 모듈 사용 가능)</p><table><thead><tr><th>HW-514 HC v0.2</th><th>Specification</th></tr></thead><tbody><tr><td><img src="/image/n/esp32-nRF24L01-servo-03.png" style="zoom:50%;" /></td><td>Input voltage: 5-36V (6.5V 미만 입력시 디스플레이 동작안됨) <br/><br/>Output voltage: 1.25-32V continuously adjustable<br/>Output current: adjustable, up to 5A (4.5A 이내 권장)<br/>Output power: 75W max (50W 이내 권장)<br/> <br/>Conversion efficiency: up to 96%<br/> <br/>Working frequency: 180KHz<br/>Short circuit protection: yes<br/>Over-temperature protection<br/>Input reverse polarity protection: None,<br/>(필요시 고전류 다이오드를 입력단에 사용)<br/> <br/>Module Size: 68.2 * 38.8 * 15 (mm)</td></tr></tbody></table><ul><li><p>왼쪽 가변저항으로 출력 전압을 5V 조정 (오른쪽 가변저항은 출력 전류를 조정)</p></li><li><p>2P 출력단자는 모터에 직접 연결</p></li><li><p>USB포트는 USB-A to microUSB 케이블을 사용하여 ESP32에 연결 (이런 이유로 USB단자가 있는 모듈을 사용하는 것이 편함)</p></li></ul></li><li><p>아래와 같은 mini360, mini560 등의 소형 컨버터를 사용하면,</p><table><thead><tr><th align="center"><img src="/image/n/regulator-mini560.png" style="zoom:67%;" /></th><th align="center"><img src="/image/n/regulator-mini360.png" style="zoom:47%;" /></th></tr></thead></table><ul><li>SG90 서보모터는 정상적으로 동작</li><li>MG996R 서보모터를 연결한 경우에는 컨버터 자체가 불안정하여 모터 동작이 멈춤</li></ul></li></ul><br><h5 id="※-외부-전원-구성시-주의할-점"><a href="#※-외부-전원-구성시-주의할-점" class="headerlink" title="※ 외부 전원 구성시 주의할 점!"></a>※ 외부 전원 구성시 주의할 점!</h5><ul><li>외부 전원을 ESP32의 5V or 3.3V 핀에 직접 연결하지 않도록 한다.</li><li><strong>외부 전원을 DC 컨버터를 사용하여 5V or 3.3V로 만든 경우에도 5V or 3.3V 핀에 직접 연결하면 안된다.</strong></li><li>ESP32의 스펙상 5V or 3.3V 핀을 사용하여 외부 전원을 구성해도 된다고 나와 있지만, 실제로는 모터 등의 모듈이 작동하지 않거나, 심할 경우 ESP32 보드가 망가질 수 있으므로 이와 같은 구성은 지양한다.</li><li>(경험상) ESP32의 microUSB포트를 통해 전원을 공급하는 것이 가장 안정적으로 동작하였음!</li></ul><br><h4 id="sketch-nRF24L01-receiver-with-ESP32-Dual-Joystick-External-Power-standalone"><a href="#sketch-nRF24L01-receiver-with-ESP32-Dual-Joystick-External-Power-standalone" class="headerlink" title="sketch: nRF24L01 receiver with ESP32, Dual Joystick , External Power (standalone)"></a>sketch: nRF24L01 receiver with ESP32, Dual Joystick , External Power (standalone)</h4><h5 id="library-for-ESP32"><a href="#library-for-ESP32" class="headerlink" title="library for ESP32"></a>library for ESP32</h5><p><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong> 에서 “<strong>esp32servo</strong>“ 검색 </p><p><img src="/image/n/esp32-nRF24L01-servo-01.png"></p><br><h5 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RF24.h&gt;</span></span></span><br><span class="line"><span class="function">RF24 <span class="title">radio</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> address = <span class="number">0x1234ABCDEF</span>LL;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Value</span>&#123;</span></span><br><span class="line">  <span class="keyword">uint16_t</span> value_x;</span><br><span class="line">  <span class="keyword">uint16_t</span> value_y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Value data;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Servo motor library for ESP32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP32Servo.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Servo servo_x;  <span class="comment">// create servo object to control a servo</span></span><br><span class="line">Servo servo_y;  <span class="comment">// 16 servo objects can be created on the ESP32</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> angle_x, angle_y;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Recommended PWM GPIO pins on the ESP32 include 2,4,12-19,21-23,25-27,32-33 </span></span><br><span class="line"><span class="keyword">int</span> servo_xPin = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> servo_yPin = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RecvTime</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> lastRecvTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recvData</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>( radio.available())&#123;</span><br><span class="line">    radio.read(&amp;data, <span class="keyword">sizeof</span>(Value));</span><br><span class="line">    lastRecvTime = millis();  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  </span><br><span class="line">  radio.begin();</span><br><span class="line">  radio.openReadingPipe(<span class="number">1</span>, address);</span><br><span class="line">  radio.setPALevel(RF24_PA_LOW);</span><br><span class="line">  radio.startListening();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Allow allocation of all timers</span></span><br><span class="line">  ESP32PWM::allocateTimer(<span class="number">0</span>);</span><br><span class="line">  ESP32PWM::allocateTimer(<span class="number">1</span>);</span><br><span class="line">  ESP32PWM::allocateTimer(<span class="number">2</span>);</span><br><span class="line">  ESP32PWM::allocateTimer(<span class="number">3</span>);</span><br><span class="line">  servo_x.setPeriodHertz(<span class="number">50</span>);    <span class="comment">// standard 50 hz servo</span></span><br><span class="line">  servo_y.setPeriodHertz(<span class="number">50</span>);</span><br><span class="line">  servo_x.attach(servo_xPin, <span class="number">500</span>, <span class="number">2500</span>); <span class="comment">// attaches the servo on pin 25 &amp; 32 to the servo object</span></span><br><span class="line">  servo_y.attach(servo_yPin, <span class="number">500</span>, <span class="number">2500</span>);</span><br><span class="line">  <span class="comment">// using default min/max of 1000us and 2000us</span></span><br><span class="line">  <span class="comment">// different servos may require different min/max settings</span></span><br><span class="line">  <span class="comment">// for an accurate 0 to 180 sweep</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  recvData();</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> now = millis();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>( now - lastRecvTime &gt; <span class="number">1000</span>)&#123;</span><br><span class="line">    <span class="comment">//ResetData();</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  rotate_xy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate_xy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;x: &quot;</span>); Serial.print(data.value_x);</span><br><span class="line">  Serial.print(<span class="string">&quot;, y: &quot;</span>); Serial.println(data.value_y);</span><br><span class="line">  angle_x = <span class="built_in">map</span>(data.value_x, <span class="number">0</span>, <span class="number">4095</span>, <span class="number">0</span>, <span class="number">180</span>);</span><br><span class="line">  angle_y = <span class="built_in">map</span>(data.value_y, <span class="number">0</span>, <span class="number">4095</span>, <span class="number">0</span>, <span class="number">180</span>);</span><br><span class="line">  servo_x.write(angle_x);</span><br><span class="line">  servo_y.write(angle_y);  </span><br><span class="line">  delay(<span class="number">10</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h4 id="조이스틱-중립-조정"><a href="#조이스틱-중립-조정" class="headerlink" title="조이스틱 중립 조정"></a>조이스틱 중립 조정</h4><ul><li><p>2개의 조이스틱을 중립에 두고, 시리얼 모니터를 통해 센서값을 확인했을때, x축 서보모터는 2700정도, y축 서보모터는 2800 정도의 값을 나타내었다. </p></li><li><p>이를 기준으로 조이스틱의 값에 따른 대략적인 형태를 생각해보면 (아래의 원 그림에 2개의 조이스틱 값을 모두 나타냄)</p><p><img src="/image/s/ESP32-2servo-02.png"></p></li><li><p>x축 조이스틱 값이</p><ul><li>1350~3400 일때: 중립 (서보모터는 90도 위치로 이동)</li><li>0~1350 일때: 서보모터 1도씩 감소 (0도 위치가 될때까지)<ul><li>단, 자동차 조향 시스템에 적용할 경우 <strong>55~90도</strong> 사이에서만 움직이도록 조정</li></ul></li><li>3400~4095 일때: 서보모터 1도씩 증가 (180도 위치가 될때까지) <ul><li>단, 자동차 조향 시스템에 적용할 경우 <strong>90~125도</strong> 사이에서만 움직이도록 조정</li></ul></li></ul></li><li><p>y축 조이스틱 값이</p><ul><li>1400~3350 일때: 중립 (서보모터는 90도 위치로 이동)</li><li>0~1400 일때: 서보모터 1도씩 감소 (0도 위치가 될때까지) (자동차에 적용시 브레이크 역할)</li><li>3350~4095 일때: 서보모터 1도씩 증가 (180도 위치가 될때까지) (자동차에 적용시 액셀레이터 역할)</li></ul></li><li><p>위 그림에 나타낸 값은 모든 조이스틱에 적용되는 절대적인 값이 아니며, 조이스틱마다 중립을 나타내는 센서값이 다르므로, 초기값을 100번 읽은 후 평균값을 만들어 사용한다.</p></li></ul><br><h5 id="sketch-2"><a href="#sketch-2" class="headerlink" title="sketch"></a>sketch</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RF24.h&gt;</span></span></span><br><span class="line"><span class="function">RF24 <span class="title">radio</span><span class="params">(<span class="number">4</span> ,<span class="number">5</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> address = <span class="number">0x1234ABCDEF</span>LL;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Value</span>&#123;</span></span><br><span class="line">  <span class="keyword">uint16_t</span> value_x;</span><br><span class="line">  <span class="keyword">uint16_t</span> value_y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Value data;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Servo motor library for ESP32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP32Servo.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Servo servo_x;  <span class="comment">// create servo object to control a servo</span></span><br><span class="line">Servo servo_y;  <span class="comment">// 16 servo objects can be created on the ESP32</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> angle_x = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">int</span> angle_y = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> center_x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> center_y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ref_xl, ref_xr, ref_ya, ref_yb;    <span class="comment">// Servo rotation reference value </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for no interference, each joysticks must be used with other ADC! (* not recommended)</span></span><br><span class="line"><span class="comment">// one joystick use ADC1: GPIO 36,39,32,33,34,35</span></span><br><span class="line"><span class="comment">// the other must use ADC2: GPIO 4,0*,2,15,13,12,14,27,25,26</span></span><br><span class="line"><span class="keyword">int</span> servo_xPin = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> servo_yPin = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RecvTime</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> lastRecvTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">centerData</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(i &lt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(radio.<span class="built_in">available</span>())&#123;</span><br><span class="line">      radio.<span class="built_in">read</span>(&amp;data, <span class="built_in"><span class="keyword">sizeof</span></span>(Value));</span><br><span class="line">      center_x = center_x + data.value_x;</span><br><span class="line">      center_y = center_y + data.value_y;</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  center_x = center_x / <span class="number">100</span>;         <span class="comment">// x축 조이스틱 센터값</span></span><br><span class="line">  center_y = center_y / <span class="number">100</span>;         <span class="comment">// y축 조이스틱 센터값</span></span><br><span class="line"></span><br><span class="line">  ref_xl = center_x / <span class="number">2</span>;             <span class="comment">// 좌회전 동작 기준값</span></span><br><span class="line">  ref_xr = (<span class="number">4095</span> + center_x) / <span class="number">2</span>;    <span class="comment">// 우회전 동작 기준값</span></span><br><span class="line">  ref_ya = (<span class="number">4095</span> + center_y) / <span class="number">2</span>;    <span class="comment">// accelator 동작 기준값</span></span><br><span class="line">  ref_yb = center_y / <span class="number">2</span>;             <span class="comment">// brake 동작 기준값</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recvData</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(radio.<span class="built_in">available</span>())&#123;</span><br><span class="line">    radio.<span class="built_in">read</span>(&amp;data, <span class="built_in"><span class="keyword">sizeof</span></span>(Value));</span><br><span class="line">    lastRecvTime = <span class="built_in">millis</span>();  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">  </span><br><span class="line">  radio.<span class="built_in">begin</span>();</span><br><span class="line">  radio.<span class="built_in">openReadingPipe</span>(<span class="number">1</span>, address);</span><br><span class="line">  radio.<span class="built_in">setPALevel</span>(RF24_PA_LOW);</span><br><span class="line">  radio.<span class="built_in">startListening</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Allow allocation of all timers</span></span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">0</span>);</span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">1</span>);</span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">2</span>);</span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">3</span>);</span><br><span class="line">  servo_x.<span class="built_in">setPeriodHertz</span>(<span class="number">50</span>);    <span class="comment">// standard 50 hz servo</span></span><br><span class="line">  servo_y.<span class="built_in">setPeriodHertz</span>(<span class="number">50</span>);</span><br><span class="line">  servo_x.<span class="built_in">attach</span>(servo_xPin, <span class="number">500</span>, <span class="number">2500</span>); <span class="comment">// attaches the servo on pin 25 &amp; 32 to the servo object</span></span><br><span class="line">  servo_y.<span class="built_in">attach</span>(servo_yPin, <span class="number">500</span>, <span class="number">2500</span>);</span><br><span class="line">  <span class="comment">// using default min/max of 1000us and 2000us</span></span><br><span class="line">  <span class="comment">// different servos may require different min/max settings</span></span><br><span class="line">  <span class="comment">// for an accurate 0 to 180 sweep</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// center value</span></span><br><span class="line">  <span class="built_in">centerData</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> now = <span class="built_in">millis</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>( now - lastRecvTime &gt; <span class="number">5</span>)&#123;    <span class="comment">// 5ms 마다 서보출력</span></span><br><span class="line">    <span class="built_in">recvData</span>();</span><br><span class="line">    <span class="built_in">rotate_xy</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate_xy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//Serial.print(&quot;x: &quot;); Serial.print(data.value_x);</span></span><br><span class="line">  <span class="comment">//Serial.print(&quot;, y: &quot;); Serial.println(data.value_y);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//x축 서보 구동 조건 설정</span></span><br><span class="line">  <span class="keyword">if</span>(data.value_x &lt; ref_xl) &#123;</span><br><span class="line">    <span class="keyword">if</span>(angle_x &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      angle_x--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      angle_x = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(data.value_x &gt; ref_xr) &#123;</span><br><span class="line">    <span class="keyword">if</span>(angle_x &lt; <span class="number">180</span>) &#123;</span><br><span class="line">      angle_x++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      angle_x = <span class="number">180</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(angle_x &lt; <span class="number">90</span>) &#123;</span><br><span class="line">      angle_x++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(angle_x &gt; <span class="number">90</span>) &#123;</span><br><span class="line">      angle_x--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      angle_x = <span class="number">90</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//y축 서보 구동 조건 설정</span></span><br><span class="line"> <span class="keyword">if</span>(data.value_y &lt; ref_yb) &#123;</span><br><span class="line">    <span class="keyword">if</span>(angle_y &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      angle_y--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      angle_y = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(data.value_y &gt; ref_ya) &#123;</span><br><span class="line">    <span class="keyword">if</span>(angle_y &lt; <span class="number">180</span>) &#123;</span><br><span class="line">      angle_y++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      angle_y = <span class="number">180</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(angle_y &lt; <span class="number">90</span>) &#123;</span><br><span class="line">      angle_y++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(angle_y &gt; <span class="number">90</span>) &#123;</span><br><span class="line">      angle_y--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      angle_y = <span class="number">90</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  servo_x.<span class="built_in">write</span>(angle_x);</span><br><span class="line">  servo_y.<span class="built_in">write</span>(angle_y);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5</span>);                    <span class="comment">// delay를 더 줄이면 서보 모터 기어에 무리가 감</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">ESP32</category>
      
      
      
      <comments>http://stemwith.github.io/2021/10/10/ESP32-nRF24L01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32, OLED (한글 출력 하기)</title>
      <link>http://stemwith.github.io/2021/09/26/ESP32-OLED/</link>
      <guid>http://stemwith.github.io/2021/09/26/ESP32-OLED/</guid>
      <pubDate>Sun, 26 Sep 2021 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;OLED&quot;&gt;&lt;a href=&quot;#OLED&quot; class=&quot;headerlink&quot; title=&quot;OLED&quot;&gt;&lt;/a&gt;OLED&lt;/h2&gt;&lt;h3 id=&quot;종류&quot;&gt;&lt;a href=&quot;#종류&quot; class=&quot;headerlink&quot; title=&quot;종류&quot;&gt;&lt;/a&gt;종류&lt;/h</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="OLED"><a href="#OLED" class="headerlink" title="OLED"></a>OLED</h2><h3 id="종류"><a href="#종류" class="headerlink" title="종류"></a>종류</h3><p>ESP32나 Arduino에서 사용할 수 있는  oled의 종류는 매우 많지만, 주로 128*64 픽셀을 가진 0.96인치, 1.3인치의 SSD1306, SH1106 컨트롤러를 사용한 oled가 판매되고 있으며, 통신 프로토콜은 I2C나 SPI를 사용한다. oled 모듈 구입시 픽셀수, 컨트롤러 및 통신프로토콜을 잘 알아두어야 스케치 작성시 참고할 수 있음에 유의한다. I2C 방식은 GPIO를 2개만 사용하여 구성이 쉽다는 장점이 있고, SPI방식은 4~5개의 GPIO를 사용하지만 속도가 빠르다는 장점이 있다. 겉모습만으로는 컨트롤러를 확인하기는 어렵다.</p><table><thead><tr><th>I2C</th><th>SPI</th></tr></thead><tbody><tr><td><img src="/image/u/u8g2-oled-i2c-01.png"></td><td><img src="/image/u/u8g2-oled-spi-01.png"></td></tr><tr><td><img src="/image/u/u8g2-oled-i2c-02.png"></td><td><img src="/image/u/u8g2-oled-spi-02.png"></td></tr></tbody></table><p>이밖에도 U8g2 라이브러리에서 사용가능한 다양한 oled의 종류를 아래 링크에서 확인할 수 있다.</p><p><a href="https://github.com/olikraus/u8g2/wiki/u8g2setupcpp#constructor-reference">Constructor Reference for U8g2 library</a></p> <br><br><h3 id="SPI"><a href="#SPI" class="headerlink" title="SPI"></a>SPI</h3><h4 id="pinmap"><a href="#pinmap" class="headerlink" title="pinmap"></a>pinmap</h4><table><thead><tr><th>OLED</th><th>ESP32 (HW_SPI로 사용시) (VSPI)</th><th></th><th>(I2C겸용보드인 경우)</th></tr></thead><tbody><tr><td>GND</td><td>GND</td><td></td><td></td></tr><tr><td>VDD</td><td>3.3V</td><td></td><td></td></tr><tr><td>D0</td><td><strong>18</strong> (HW_SPI 사용시 GPIO_18로 고정)</td><td>SCK/CLK/CLOCK</td><td>SCL</td></tr><tr><td>D1</td><td><strong>23</strong> (HW_SPI 사용시 GPIO_23으로 고정)</td><td>DATA/DIN/MOSI</td><td>SDA</td></tr><tr><td>RES</td><td>15</td><td>RST/RESET</td><td></td></tr><tr><td>DC</td><td>14</td><td>Data Command</td><td></td></tr><tr><td>CS</td><td>5</td><td>Chip Select</td><td></td></tr></tbody></table><p>※ HW_SPI로 사용하는 경우에는 D0, D1의 핀번호를 바꿀 수 없으며, SW_SPI로 사용하는 경우에는 사용되는 모든 핀의 번호를 임의로 지정하여 사용할 수 있다.</p><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><ul><li>SW_SPI 연결시에는 스케치에서 지정하는 GPIO핀에 연결한다.</li><li>HW_SPI로 연결할 때의 회로도는 아래 그림과 같다.</li></ul><p><img src="/image/u/u8g2-oled-spi-03.png"></p><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><p>oled를 SPI로 연결하는 경우, 다음을 추가해야 한다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br></pre></td></tr></table></figure><br><h5 id="sketch-SH1106-HW-SPI"><a href="#sketch-SH1106-HW-SPI" class="headerlink" title="sketch: SH1106, HW_SPI"></a>sketch: SH1106, HW_SPI</h5><p>HW_SPI를 사용하는 경우에는 D0(CLK), D1(MOSI)을 ESP32에 지정된 핀으로 사용하기 때문에, 나머지 3개의 핀만 sketch에서 지정해주면 된다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for HW_SPI (VSPI)</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_4W_HW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br></pre></td></tr></table></figure><br><h5 id="sketch-SH1106-SW-SPI"><a href="#sketch-SH1106-SW-SPI" class="headerlink" title="sketch: SH1106, SW_SPI"></a>sketch: SH1106, SW_SPI</h5><p>SW_SPI를 사용하는 경우, 4~5개의 핀을 sketch에 지정해주어야 한다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for SW_SPI</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* clock=*/</span> <span class="number">26</span>, <span class="comment">/* data=*/</span> <span class="number">25</span>, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br></pre></td></tr></table></figure><br><h5 id="sketch-SSD1306-HW-SPI"><a href="#sketch-SSD1306-HW-SPI" class="headerlink" title="sketch: SSD1306, HW_SPI"></a>sketch: SSD1306, HW_SPI</h5><p>SSD1306을 사용하는 oled의 경우 <strong>U8G2_SH1106_</strong>~ 부분을 <strong>U8G2_SSD1306_</strong>~ 으로 수정하여 사용한다. 자세한 옵션은 <a href="https://github.com/olikraus/u8g2/wiki/u8g2setupcpp#constructor-reference">Constructor Reference for U8g2 library</a>에서 확인할 수 있다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// for HW_SPI (VSPI)</span><br><span class="line">U8G2_SSD1306_128X64_NONAME_F_4W_HW_SPI u8g2(U8G2_R0, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span><br></pre></td></tr></table></figure><br><h5 id="sketch-SSD1306-SW-SPI"><a href="#sketch-SSD1306-SW-SPI" class="headerlink" title="sketch: SSD1306, SW_SPI"></a>sketch: SSD1306, SW_SPI</h5><p>SW_SPI를 사용하는 경우, 4~5개의 핀을 sketch에 지정해주어야 한다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for SW_SPI</span></span><br><span class="line"><span class="function">U8G2_SSD1306_128X64_NONAME_F_4W_SW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* clock=*/</span> <span class="number">26</span>, <span class="comment">/* data=*/</span> <span class="number">25</span>, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br></pre></td></tr></table></figure><br><br><h3 id="I2C"><a href="#I2C" class="headerlink" title="I2C"></a>I2C</h3><h4 id="pinmap-1"><a href="#pinmap-1" class="headerlink" title="pinmap"></a>pinmap</h4><table><thead><tr><th>OLED</th><th>ESP32</th></tr></thead><tbody><tr><td>GND</td><td>GND</td></tr><tr><td>VDD</td><td>3.3V</td></tr><tr><td>SDA</td><td><strong>21</strong> (HW_I2C 사용시 GPIO_21로 고정)</td></tr><tr><td>SCL</td><td><strong>22</strong> (HW_I2C 사용시 GPIO_22으로 고정)</td></tr></tbody></table><br><h4 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/u/u8g2-oled-i2c-03.png"></p><br><h4 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h4><h5 id="sketch-SH1106-HW-I2C"><a href="#sketch-SH1106-HW-I2C" class="headerlink" title="sketch: SH1106, HW_I2C"></a>sketch: SH1106, HW_I2C</h5><p>HW_I2C를 사용하는 경우에는 SDA, SCL을 ESP32에 지정된 핀으로 사용하기 때문에, 구동 드라이버만 지정해주면 된다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for SH1106,  I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_HW_I2C <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* reset=*/</span> U8X8_PIN_NONE)</span></span>;</span><br></pre></td></tr></table></figure><br><h5 id="sketch-SSD1306-HW-I2C"><a href="#sketch-SSD1306-HW-I2C" class="headerlink" title="sketch: SSD1306, HW_I2C"></a>sketch: SSD1306, HW_I2C</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for SSD1306, I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="function">U8G2_SSD1306_128X64_NONAME_F_HW_I2C <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* reset=*/</span> U8X8_PIN_NONE)</span></span>;</span><br></pre></td></tr></table></figure><br><br><h2 id="U8g2-라이브러리"><a href="#U8g2-라이브러리" class="headerlink" title="U8g2 라이브러리"></a>U8g2 라이브러리</h2><p>ESP32나 Arduino에서 OLED를 사용을 위한 대표적인 라이브러리는 3~4가지 정도이다.</p><ul><li>U8glib</li><li><strong>U8g2</strong></li><li>Adafruit SSD1306</li><li>UTF8_HanDraw</li></ul><p>이들 중에서도 특히 U8glib와 Adafruit SSD1306 라이브러리가 가장 많이 사용되고 있다. 그렇지만 한글 출력이 쉽지 않다는 단점이 있으며, U8glib는 현재 개발이 중단된 상태이기도 하다. U8g2는 U8glib를 이어 새롭게 개발되는 라이브러리이며, U8glib의 기능을 모두 포함하고 있으므로 접근이 용이하다. 그러므로 여기서는 U8g2 라이브러리를 중심으로 ESP32에서 OLED를 사용하는 방법을 알아보고, 이에 더하여 한글 출력이 용이한 UTF8_HanDraw를 사용해보도록 한다.</p><br><h3 id="사용-방법"><a href="#사용-방법" class="headerlink" title="사용 방법"></a>사용 방법</h3><h4 id="라이브러리-설치"><a href="#라이브러리-설치" class="headerlink" title="라이브러리 설치"></a>라이브러리 설치</h4><ul><li><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong>&gt; <strong>u8g2</strong> 검색 후 <strong>설치</strong> 클릭</li></ul><p><img src="/image/u/u8g2-01.png"></p><br><h4 id="U8g2-reference"><a href="#U8g2-reference" class="headerlink" title="U8g2 reference"></a>U8g2 reference</h4><p>U8g2 라이브러리 사용에 필요한 명령어들은 <a href="https://github.com/olikraus/u8g2/wiki/u8g2reference">u8g2reference · olikraus/u8g2 Wiki · GitHub</a> 를 참고한다.</p><br><h4 id="sketch-2"><a href="#sketch-2" class="headerlink" title="sketch"></a>sketch</h4><ul><li><p>SH1106 드라이버를 사용하여 HW_SPI로 OLED 출력을 수행할 경우, 아래와 같은 예제를 사용해볼 수 있다.</p></li><li><p>실제 사용하는 OLED 드라이버와 통신 프로토콜에 따라 sketch를 수정해서 사용해야 한다.</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;U8g2lib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for SPI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for using Korean NanumGothicCoding font</span></span><br><span class="line"><span class="comment">//#include &quot;u8g2_font_unifont_t_korean_NanumGothicCoding_16.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Please UNCOMMENT one of the contructor lines below</span></span><br><span class="line"><span class="comment">// U8g2 Contructor List (Frame Buffer)</span></span><br><span class="line"><span class="comment">// The complete list is available here: https://github.com/olikraus/u8g2/wiki/u8g2setupcpp</span></span><br><span class="line"><span class="comment">// Please update the pin numbers according to your setup. Use U8X8_PIN_NONE if the reset pin is not connected</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for HW_SPI (VSPI)</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_4W_HW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br><span class="line"><span class="comment">// for SW_SPI</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 26, /* data=*/ 25, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span></span><br><span class="line"><span class="comment">// for SSD1306, I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"><span class="comment">// for SH1106,  I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  u8g2.begin();</span><br><span class="line">  u8g2.enableUTF8Print();   <span class="comment">// enable UTF8 support for the Arduino print() function</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    u8g2.setFont(u8g2_font_ncenB14_tr);</span><br><span class="line">    u8g2.drawStr(<span class="number">0</span>,<span class="number">15</span>, <span class="string">&quot;SKS STEAM!&quot;</span>);</span><br><span class="line">    u8g2.drawTriangle(<span class="number">27</span>,<span class="number">50</span>, <span class="number">64</span>,<span class="number">32</span>, <span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">  &#125; <span class="keyword">while</span> ( u8g2.nextPage() );</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h5 id="기본-사용-선언"><a href="#기본-사용-선언" class="headerlink" title="기본 사용 선언"></a>기본 사용 선언</h5><p>void setup() 내에 U8g2 라이브러리를 사용하여 oled를 사용하는 것을 선언 한다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2.begin();</span><br></pre></td></tr></table></figure><br><h5 id="폰트"><a href="#폰트" class="headerlink" title="폰트"></a>폰트</h5><ul><li>폰트는 <strong>u8g2_font_ncenB14_tr</strong>를 사용하고 있는데, <a href="https://github.com/olikraus/u8g2/wiki/fntlist8#u8g2-font-list">fntlist8 · olikraus/u8g2 Wiki · GitHub</a>에서 글자 크기별로 사용 가능한 폰트 목록을 확인할 수 있다.</li><li>폰트명에 ncenB14가 포함되어 있으므로 <strong>폰트(세로) 픽셀수가 14</strong> 라는 것을 알 수 있다.</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2.setFont(u8g2_font_ncenB14_tr);</span><br></pre></td></tr></table></figure><br><h5 id="drawing-sheet-사용하여-그림-그려보기"><a href="#drawing-sheet-사용하여-그림-그려보기" class="headerlink" title="drawing sheet 사용하여, 그림 그려보기"></a>drawing sheet 사용하여, 그림 그려보기</h5><p>128X64 픽셀을 표시한 Drawing Sheet를 사용하여, 원하는 그림을 그려보자.</p><p><a href="/attach/OLED_128X64_drawing_sheet.xlsx">Drawing Sheet</a></p><br><h5 id="drawStr"><a href="#drawStr" class="headerlink" title="drawStr"></a>drawStr</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2.drawStr(0,15, &quot;SKS STEAM!&quot;)</span><br></pre></td></tr></table></figure><ul><li>drawStr를 통해 문자를 프린트할 수 있다.</li><li>예제에서 사용한 <strong>0,15</strong>는 프린트할 문자열 “<strong>SKS STEAM!</strong>“ 중 맨 앞글자인 “<strong>S</strong>“의 왼쪽 아래 시작 픽셀을 의미한다. </li><li>폰트사이즈가 14이므로 <strong>0,15</strong> 픽셀에서 시작하며, <strong>0,1</strong> 픽셀까지 출력에 사용한다.</li><li>만약 시작 픽셀을 <strong>0,14</strong>로 바꾸면, <strong>0,0</strong> 픽셀까지 출력하므로, 문자를 올바르게 출력할 수 있다.</li><li>만약 시작 픽셀을 <strong>0,13</strong>으로 2픽셀 위로 올리게되면 <strong>0,-1</strong> 픽셀까지 출력되므로, 글자의 맨 윗부분 1행 전체가 삭제된 상태로 출력된다.</li><li>음수(-)를 허용하므로, 이를 적절히 이용하면 가로방향 또는 세로방향 스크롤로 사용할 수 있다.</li></ul><br><h5 id="drawTriangle"><a href="#drawTriangle" class="headerlink" title="drawTriangle"></a>drawTriangle</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2.drawTriangle(27,50, 64,32, 100,50);</span><br></pre></td></tr></table></figure><ul><li>U8g2 라이브러리에서 삼각형을 그릴때 사용하는 명령어이다.</li><li>지정된 픽셀(128x64)내에 3쌍의 순서쌍으로 3개의 꼭지점을 지정하면 이에 맞춰 삼각형을 그린다. 여기서는 (27,50), (64,32), (100,50)이 꼭지점이다.</li></ul><br><p>※ 그밖의 도형을 그리거나 글자 모양을 바꾸려면, <a href="https://github.com/olikraus/u8g2/wiki/u8g2reference">u8g2reference · olikraus/u8g2 Wiki · GitHub</a> 를 참고한다.</p><br><h4 id="한글-사용하기"><a href="#한글-사용하기" class="headerlink" title="한글 사용하기"></a>한글 사용하기</h4><p>U8g2 라이브러리에서 한글을 사용하려면, 한글 폰트를 사용하여야 한다. 기본적으로 제공되는 한글 폰트는 2가지가 있다.</p><ul><li><p>u8g2_font_unifont_t_korean1 : 사용가능한 글자가 제한되며, 용량이 17kB 정도</p></li><li><p>u8g2_font_unifont_t_korean2 : korean1폰트보다 사용가능한 글자수가 많으나, 용량이 70kB 정도</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2.setFont(u8g2_font_unifont_t_korean2);</span><br></pre></td></tr></table></figure></li><li><p>한글 사용을 위해 void setup()에 아래의 코드를 추가하여야 한다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2.enableUTF8Print();   <span class="comment">// enable UTF8 support for the Arduino print() function</span></span><br></pre></td></tr></table></figure></li></ul><br><h5 id="sketch-한글-사용하기"><a href="#sketch-한글-사용하기" class="headerlink" title="sketch: 한글 사용하기"></a>sketch: 한글 사용하기</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;U8g2lib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for SPI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Please UNCOMMENT one of the contructor lines below</span></span><br><span class="line"><span class="comment">// U8g2 Contructor List (Frame Buffer)</span></span><br><span class="line"><span class="comment">// The complete list is available here: https://github.com/olikraus/u8g2/wiki/u8g2setupcpp</span></span><br><span class="line"><span class="comment">// Please update the pin numbers according to your setup. Use U8X8_PIN_NONE if the reset pin is not connected</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for HW_SPI (VSPI)</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_4W_HW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br><span class="line"><span class="comment">// for SW_SPI</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 26, /* data=*/ 25, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span></span><br><span class="line"><span class="comment">// for SSD1306, I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"><span class="comment">// for SH1106,  I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8g2.begin();</span><br><span class="line">  u8g2.enableUTF8Print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    u8g2.setFont(u8g2_font_ncenB14_tr);</span><br><span class="line">    u8g2.drawStr(<span class="number">0</span>, <span class="number">15</span>, <span class="string">&quot;SKS STEAM!&quot;</span>);</span><br><span class="line">    u8g2.drawTriangle(<span class="number">27</span>,<span class="number">50</span>, <span class="number">64</span>,<span class="number">32</span>, <span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">  &#125; <span class="keyword">while</span> ( u8g2.nextPage() );</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">//u8g2.setFont(u8g2_font_unifont_t_korean1);</span></span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_t_korean2);</span><br><span class="line">    u8g2.setFontDirection(<span class="number">0</span>);</span><br><span class="line">    u8g2.clearBuffer();</span><br><span class="line">    u8g2.setCursor(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">    u8g2.print(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">    u8g2.setCursor(<span class="number">0</span>, <span class="number">40</span>);</span><br><span class="line">    u8g2.print(<span class="string">&quot;안녕하세요.&quot;</span>);  </span><br><span class="line">    u8g2.sendBuffer();</span><br><span class="line">  &#125; <span class="keyword">while</span> ( u8g2.nextPage() );</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="나눔고딕폰트-사용하기"><a href="#나눔고딕폰트-사용하기" class="headerlink" title="나눔고딕폰트 사용하기"></a>나눔고딕폰트 사용하기</h4><ul><li><p>(한글의 모든 글자를 사용해야 할 경우) U8g2 라이브러리에서 사용할 나눔고딕 폰트를 다운로드 (created by xyz37) 한다.</p><p><a href="https://github.com/xyz37/U8G2_Korean_Font/blob/master/Samples/U8g2_PrintUTF8/u8g2_font_unifont_t_korean_NanumGothicCoding_16.h">u8g2_font_unifont_t_korean_NanumGothicCoding_16.h</a></p><p>※ <strong>주의!</strong> 폰트 크기가 1.09MB이므로 메모리가 작은 <strong>아두이노에서는 위 폰트를 사용하기 어렵지만, ESP32에서 사용할 수 있다.</strong> U8g2에서 제공하는 폰트인 korean1이 17k, korean2는 70k이므로 아두이노를 사용해야하는 경우는, (모든 한글 글자를 표현할 수 없더라도) korean1이나 korean2 폰트를 사용해야 한다.</p></li></ul><br><ul><li><p>다운로드 받은 나눔고딕 폰트 파일을 **”u8g2 라이브러리 폴더”**에 넣는다.</p><p><img src="/image/u/u8g2-02.png"></p></li></ul><br><ul><li><p>u8g2 라이브러리 폴더의 위치를 모를 경우,</p><p>아래 그림과 같이 아두이노 IDE에서 <strong>파일</strong>&gt; <strong>환경설정</strong> 에서 <strong>스케치북 위치</strong>를 확인한 후,</p></li></ul><p><img src="/image/u/u8g2-03.png"></p><p>​        <strong>(스케치북 위치)/libraries/U8g2/src/</strong> 폴더를 찾아, 폰트 파일을 넣는다.</p><br><ul><li><p>위 폰트를 사용하려면 스케치에 다음을 포함해야 한다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;u8g2_font_unifont_t_korean_NanumGothicCoding_16.h&quot;</span></span></span><br></pre></td></tr></table></figure> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  u8g2.setFont(u8g2_font_unifont_t_korean_NanumGothicCoding_16);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><br><h5 id="sketch-3"><a href="#sketch-3" class="headerlink" title="sketch"></a>sketch</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Arduino.h&gt;</span><br><span class="line">#include &lt;U8g2lib.h&gt;</span><br><span class="line"></span><br><span class="line">// for SPI</span><br><span class="line">#include &lt;SPI.h&gt;</span><br><span class="line"></span><br><span class="line">// for using Korean NanumGothicCoding font</span><br><span class="line">#include &quot;u8g2_font_unifont_t_korean_NanumGothicCoding_16.h&quot;</span><br><span class="line"></span><br><span class="line">// Please UNCOMMENT one of the contructor lines below</span><br><span class="line">// U8g2 Contructor List (Frame Buffer)</span><br><span class="line">// The complete list is available here: https://github.com/olikraus/u8g2/wiki/u8g2setupcpp</span><br><span class="line">// Please update the pin numbers according to your setup. Use U8X8_PIN_NONE if the reset pin is not connected</span><br><span class="line"></span><br><span class="line">// for HW_SPI (VSPI)</span><br><span class="line">U8G2_SH1106_128X64_NONAME_F_4W_HW_SPI u8g2(U8G2_R0, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span><br><span class="line">// for SW_SPI</span><br><span class="line">//U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 26, /* data=*/ 25, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span><br><span class="line">// for SSD1306, I2C, (ESP32: SDA 21, SCL 22)</span><br><span class="line">//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span><br><span class="line">// for SH1106,  I2C, (ESP32: SDA 21, SCL 22)</span><br><span class="line">//U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span><br><span class="line"></span><br><span class="line">void setup(void) </span><br><span class="line">&#123;</span><br><span class="line">  u8g2.begin();</span><br><span class="line">  u8g2.enableUTF8Print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop(void) </span><br><span class="line">&#123;</span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  do &#123;</span><br><span class="line">    u8g2.setFont(u8g2_font_ncenB14_tr);</span><br><span class="line">    u8g2.drawStr(0, 15, &quot;SKS STEAM!&quot;);</span><br><span class="line">    u8g2.drawTriangle(27,50, 64,32, 100,50);</span><br><span class="line">  &#125; while ( u8g2.nextPage() );</span><br><span class="line">  delay(1000);</span><br><span class="line"></span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  do &#123;</span><br><span class="line">    //u8g2.setFont(u8g2_font_unifont_t_korean1);</span><br><span class="line">    //u8g2.setFont(u8g2_font_unifont_t_korean2);</span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_t_korean_NanumGothicCoding_16);</span><br><span class="line">    u8g2.setFontDirection(0);</span><br><span class="line">    u8g2.clearBuffer();</span><br><span class="line">    u8g2.setCursor(0, 16);</span><br><span class="line">    u8g2.print(&quot;Hello!&quot;);</span><br><span class="line">    u8g2.setCursor(0, 40);</span><br><span class="line">    u8g2.print(&quot;안녕하세요.&quot;);  </span><br><span class="line">    u8g2.sendBuffer();</span><br><span class="line">  &#125; while ( u8g2.nextPage() );</span><br><span class="line">  delay(1000);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="비트맵-그림-사진-출력하기"><a href="#비트맵-그림-사진-출력하기" class="headerlink" title="비트맵 그림/사진 출력하기"></a>비트맵 그림/사진 출력하기</h2><p>OLED의 해상도(128×64)에 맞추어 그림이나 로고를 출력해보자. 윈도우 기준으로 설명하며, Mac의 경우 GIMP에서 비슷한 작업을 수행할 수 있다.</p><br><h3 id="사진-or-로고-그림파일-준비"><a href="#사진-or-로고-그림파일-준비" class="headerlink" title="사진 or 로고 그림파일 준비"></a>사진 or 로고 그림파일 준비</h3><h4 id="사진-픽셀수-조정"><a href="#사진-픽셀수-조정" class="headerlink" title="사진 픽셀수 조정"></a>사진 픽셀수 조정</h4><p>우선 oled에 출력하려는 작은 사진이나 로고 파일(.jpg or .png 등)을 준비한 뒤, 사용하는 oled의 해상도(예를들어 128×64) 고려하여 사진의 픽셀 수를 줄여야 한다. (※주의할 점: 화면상에 보이는 크기를 축소하는 것이 아니라 실제 픽셀수를 조정해야 함!)</p><br><ul><li><p>윈도우에서 <strong>그림판</strong>을 연다. (그림판3D 아님!) : <strong>시작</strong>&gt; <strong>Windows 보조프로그램</strong>&gt; <strong>그림판</strong></p><p><img src="/image/u/u8g2-bitmap-01.png"></p></li></ul><br><ul><li><p>그림판 하단에 불러온 그림의 실제 픽셀수가 나타납니다. (픽셀수 오른쪽의 % 수치는 화면상에서 보이는 확대/축소 비율이므로, 여기서는 신경쓰지 않는다.)</p><p><img src="/image/u/u8g2-bitmap-02.png"></p></li></ul><br><ul><li><p><strong>Ctrl-A를 눌러 전체 그림을 선택</strong>하면 그림 겉테두리에 점선이 표시되는데, 이때 (파란색 동그라미 표시된) <strong>사진 오른쪽 상단 모서리</strong>의 포인트를 마우스로 클릭하여 픽셀사이즈를 <strong>원본 그림의 비율에 맞추어</strong> 128x64 이하로 조정한다. 예시에서는 1000x1000px, 즉 1:1의 비율 그림이므로 64x64로 조정하였다. 캔버스 크기를 나타내는 1000x1000px 왼쪽에, 축소되는 그림의 픽셀수가 나타나므로, 이를 확인하면서 픽셀수를 64x64로 조정하면 된다.</p><p><img src="/image/u/u8g2-bitmap-03.png"></p></li></ul><br><ul><li>64x64px이 표시되어는 부분은, 마우스로 크기를 조정한 뒤에 클릭하고 있는 마우스 버튼에서 손을 떼는 순간 사라진다. (신경쓰지 않아도 됨) </li></ul><br><ul><li><strong>중요!</strong> 위 그림처럼 <strong>축소된 작은 그림</strong>(전체 캔버스가 아님!)의 테두리에 점선이 남아 있는 상태에서 <strong>Ctrl-c</strong>를 눌러, 축소된 그림만 클립보드에 복사한다. </li></ul><br><ul><li><p>메뉴에서 <strong>파일</strong>&gt; <strong>새로 만들기</strong>&gt;를 클릭한다.</p><p>이때, <strong>변경내용을 저장하시겠습니까?</strong> 팝업이 뜨면 <strong>저장 안 함</strong> 클릭 (저장을 해도 관계없으나, 원본파일이 사라짐)</p></li></ul><br><ul><li><p>메뉴에서 <strong>파일</strong>&gt; <strong>속성</strong>&gt; 을 클릭한 뒤</p><p><img src="/image/u/u8g2-bitmap-04.png"></p></li></ul><br><ul><li><p>이미지 속성에서 단위를 픽셀로 지정하고, 너비와 높이를 oled의 전체 픽셀 사이즈(128x64)로 조정한다. </p><p><img src="/image/u/u8g2-bitmap-05.png"></p></li></ul><br><ul><li><p>그림판에 128x64 크기의 캔버스가 나타난다. (화면상에 나타나는 크기가 너무 작아 확대/축소 비율을 100%로 조정함)</p><p><img src="/image/u/u8g2-bitmap-06.png"></p></li></ul><br><ul><li><p>위 상태에서 <strong>Ctrl-v</strong>를 클릭하여, 클립보드에 복사한 그림을 붙여넣기 한다.</p><p><img src="/image/u/u8g2-bitmap-07.png"></p></li></ul><br><ul><li><p>붙여넣은 그림을 마우스로 클릭하여 위치를 조정한다. 추가로 그림판의 텍스트 기능을 사용하여 글씨를 넣어보았다.</p><p><img src="/image/u/u8g2-bitmap-08.png"></p></li></ul><br><h4 id="단색-1-bit-비트맵-bmp-파일로-저장하기"><a href="#단색-1-bit-비트맵-bmp-파일로-저장하기" class="headerlink" title="단색 1-bit 비트맵 bmp 파일로 저장하기"></a>단색 1-bit 비트맵 bmp 파일로 저장하기</h4><ul><li><p>이제 작업한 파일을 1-bit 비트맵 bmp 파일로 저장한다. <strong>파일</strong>&gt; <strong>다른 이름으로 저장</strong>&gt; <strong>BMP 그림</strong> 을 클릭한 뒤,</p><p><img src="/image/u/u8g2-bitmap-09.png">)</p></li></ul><br><ul><li><p>저장할 경로와 파일이름을 지정한 뒤, 파일 형식을 *<em>단색 비트맵(</em>.bmp; *dlb)**으로 지정하여 저장한다. (사진 품질 저하에 대한 경고를 확인하면 최종 저장 된다.)</p><p><img src="/image/u/u8g2-bitmap-10.png"></p></li></ul><br><ul><li><p>최종 결과물은 다음과 같다. (<a href="/attach/apeach.bmp">어피치 로고 bmp 파일 다운로드</a>)</p><p><img src="/image/u/u8g2-bitmap-11.png"></p></li></ul><br><p>※ Mac에서는 GIMP를 이용하여 단색 비트맵 파일로 저장할 수 있다.</p><p>​    <a href="https://community.silabs.com/s/article/creating-monochrome-bitmap-files-for-lcd-glib-using-gimp?language=en_US">링크 참고 - Creating monochrome bitmap files for LCD / GLIB using GIMP</a>)</p><br><h3 id="단색-bmp-파일을-hex파일로-변경하기"><a href="#단색-bmp-파일을-hex파일로-변경하기" class="headerlink" title="단색 bmp 파일을 hex파일로 변경하기"></a>단색 bmp 파일을 hex파일로 변경하기</h3><h4 id="프로그램-설치"><a href="#프로그램-설치" class="headerlink" title="프로그램 설치"></a>프로그램 설치</h4><p>이제 아래와 같은 bitmap converter 프로그램을 사용하여, 단색 bmp 파일을 hex 파일로 변경한다. (여기서는 윈도우 기준으로 설명)</p><ul><li>윈도우: <a href="/attach/LCDAssistant.zip">LCD Assistant</a></li><li>Mac: <a href="/attach/BitmapToC.app.zip">BitmapToC</a></li></ul><br><h4 id="bmp-→-hex"><a href="#bmp-→-hex" class="headerlink" title="bmp → hex"></a>bmp → hex</h4><ul><li><p>LCD Assistant를 실행한 후,</p><p><strong>File</strong>&gt; <strong>Load image</strong>&gt; 를 클릭하여 위에서 제작한 단색 bmp 파일을 연다.</p><p><img src="/image/u/u8g2-bitmap-12.png"></p></li></ul><br><ul><li>Byte orientation을 <strong>Horizontal</strong>로 변경한다. Size, Pixel/byte, Table name은 자동으로 지정되나, 만일 자동으로 설정되지 않는 경우, 아래와 같이 변경한다.<ul><li>Size: OLED 픽셀수</li><li>Pixel/byte: 8</li><li>Table name: 스케치내에서 사용할 이름 </li></ul></li></ul><br><ul><li><p><strong>File</strong>&gt; <strong>Save output</strong>&gt; 를 클릭하여 파일을 저장한다. 이때 파일 형식을 별도로 지정하지 않으며, 사용할 파일이름에 <strong>.h</strong> 또는 <strong>.txt</strong> 를 덧붙여 구분하여도 된다. 예시에서는 <a href="../attach/apeach.h">apeach.h</a> 로 지정하였다.</p><p><img src="/image/u/u8g2-bitmap-13.png"></p></li></ul><br><ul><li>메모장이나 텍스트 에디터 등을 사용하여 apeach.h 파일을 열어보면, 단색 bmp 파일의 hex 코드를 볼 수 있다. 이제 이를 sketch에 반영하면 된다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> apeach [] = &#123;</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x8C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0xF0</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0xC6</span>, <span class="number">0x01</span>, <span class="number">0x8C</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x22</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x61</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x00</span>, <span class="number">0x84</span>, <span class="number">0x01</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x00</span>, <span class="number">0x85</span>, <span class="number">0xF9</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x43</span>, <span class="number">0xFF</span>, <span class="number">0x86</span>, <span class="number">0x06</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x55</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0xD6</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x61</span>, <span class="number">0xFF</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x48</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF0</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x18</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xC4</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4C</span>, <span class="number">0x36</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x03</span>, <span class="number">0xD9</span>, <span class="number">0x9C</span>, <span class="number">0x0E</span>, <span class="number">0x07</span>, <span class="number">0xB0</span>, <span class="number">0xF3</span>, <span class="number">0x38</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xD8</span>, <span class="number">0x1A</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x07</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0x1F</span>, <span class="number">0x8F</span>, <span class="number">0xF1</span>, <span class="number">0xF3</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x93</span>, <span class="number">0xCB</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x28</span>, <span class="number">0x0E</span>, <span class="number">0x39</span>, <span class="number">0xC7</span>, <span class="number">0x31</span>, <span class="number">0x9C</span>, <span class="number">0x73</span>, <span class="number">0x83</span>, <span class="number">0x8C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA6</span>, <span class="number">0x25</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x28</span>, <span class="number">0x0C</span>, <span class="number">0x19</span>, <span class="number">0x83</span>, <span class="number">0x21</span>, <span class="number">0x98</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA4</span>, <span class="number">0x35</span>, <span class="number">0xD0</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x0C</span>, <span class="number">0x19</span>, <span class="number">0x83</span>, <span class="number">0x7F</span>, <span class="number">0x98</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA4</span>, <span class="number">0x96</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x0C</span>, <span class="number">0x19</span>, <span class="number">0x83</span>, <span class="number">0x3E</span>, <span class="number">0x18</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x97</span>, <span class="number">0x94</span>, <span class="number">0x10</span>, <span class="number">0xFC</span>, <span class="number">0x20</span>, <span class="number">0x0E</span>, <span class="number">0x39</span>, <span class="number">0xC7</span>, <span class="number">0x30</span>, <span class="number">0x9C</span>, <span class="number">0x73</span>, <span class="number">0x83</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x90</span>, <span class="number">0x34</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x20</span>, <span class="number">0x07</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0x3F</span>, <span class="number">0x8F</span>, <span class="number">0xF1</span>, <span class="number">0xF3</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x48</span>, <span class="number">0x24</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x20</span>, <span class="number">0x03</span>, <span class="number">0xD9</span>, <span class="number">0xBC</span>, <span class="number">0x0F</span>, <span class="number">0x07</span>, <span class="number">0xB0</span>, <span class="number">0xF3</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x47</span>, <span class="number">0xCC</span>, <span class="number">0x11</span>, <span class="number">0x04</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x18</span>, <span class="number">0x09</span>, <span class="number">0x02</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x30</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><h3 id="스케치에-이미지-hex-코드-넣기"><a href="#스케치에-이미지-hex-코드-넣기" class="headerlink" title="스케치에 이미지 hex 코드 넣기"></a>스케치에 이미지 hex 코드 넣기</h3><h4 id="sketch-4"><a href="#sketch-4" class="headerlink" title="sketch"></a>sketch</h4><p>위에서 만든 어피치로고와 함께 학교로고를 추가로 만들고, 2개의 이미지를 OLED에 3초씩 출력하는 코드이다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;U8g2lib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span>                                                   <span class="comment">// for SPI</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// #include &quot;u8g2_font_unifont_t_korean_NanumGothicCoding_16.h&quot;       // for using Korean NanumGothicCoding font</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Please UNCOMMENT one of the contructor lines below</span></span><br><span class="line"><span class="comment">// U8g2 Contructor List (Frame Buffer)</span></span><br><span class="line"><span class="comment">// The complete list is available here: https://github.com/olikraus/u8g2/wiki/u8g2setupcpp</span></span><br><span class="line"><span class="comment">// Please update the pin numbers according to your setup. Use U8X8_PIN_NONE if the reset pin is not connected</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for HW_SPI (VSPI)</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_4W_HW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br><span class="line"><span class="comment">// for SW_SPI</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 26, /* data=*/ 25, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span></span><br><span class="line"><span class="comment">// for SSD1306, I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"><span class="comment">// for SH1106,  I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> apeach [] = &#123;</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x8C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0xF0</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0xC6</span>, <span class="number">0x01</span>, <span class="number">0x8C</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x22</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x61</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x00</span>, <span class="number">0x84</span>, <span class="number">0x01</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x00</span>, <span class="number">0x85</span>, <span class="number">0xF9</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x43</span>, <span class="number">0xFF</span>, <span class="number">0x86</span>, <span class="number">0x06</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x55</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0xD6</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x61</span>, <span class="number">0xFF</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x48</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF0</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x18</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xC4</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4C</span>, <span class="number">0x36</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x03</span>, <span class="number">0xD9</span>, <span class="number">0x9C</span>, <span class="number">0x0E</span>, <span class="number">0x07</span>, <span class="number">0xB0</span>, <span class="number">0xF3</span>, <span class="number">0x38</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xD8</span>, <span class="number">0x1A</span>, <span class="number">0x90</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x07</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0x1F</span>, <span class="number">0x8F</span>, <span class="number">0xF1</span>, <span class="number">0xF3</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x93</span>, <span class="number">0xCB</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x28</span>, <span class="number">0x0E</span>, <span class="number">0x39</span>, <span class="number">0xC7</span>, <span class="number">0x31</span>, <span class="number">0x9C</span>, <span class="number">0x73</span>, <span class="number">0x83</span>, <span class="number">0x8C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA6</span>, <span class="number">0x25</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x28</span>, <span class="number">0x0C</span>, <span class="number">0x19</span>, <span class="number">0x83</span>, <span class="number">0x21</span>, <span class="number">0x98</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA4</span>, <span class="number">0x35</span>, <span class="number">0xD0</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x0C</span>, <span class="number">0x19</span>, <span class="number">0x83</span>, <span class="number">0x7F</span>, <span class="number">0x98</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA4</span>, <span class="number">0x96</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x0C</span>, <span class="number">0x19</span>, <span class="number">0x83</span>, <span class="number">0x3E</span>, <span class="number">0x18</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x97</span>, <span class="number">0x94</span>, <span class="number">0x10</span>, <span class="number">0xFC</span>, <span class="number">0x20</span>, <span class="number">0x0E</span>, <span class="number">0x39</span>, <span class="number">0xC7</span>, <span class="number">0x30</span>, <span class="number">0x9C</span>, <span class="number">0x73</span>, <span class="number">0x83</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x90</span>, <span class="number">0x34</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x20</span>, <span class="number">0x07</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0x3F</span>, <span class="number">0x8F</span>, <span class="number">0xF1</span>, <span class="number">0xF3</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x48</span>, <span class="number">0x24</span>, <span class="number">0x10</span>, <span class="number">0x84</span>, <span class="number">0x20</span>, <span class="number">0x03</span>, <span class="number">0xD9</span>, <span class="number">0xBC</span>, <span class="number">0x0F</span>, <span class="number">0x07</span>, <span class="number">0xB0</span>, <span class="number">0xF3</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x47</span>, <span class="number">0xCC</span>, <span class="number">0x11</span>, <span class="number">0x04</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x18</span>, <span class="number">0x09</span>, <span class="number">0x02</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x30</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> skslogo_1bit_128x64 [] = &#123;</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2E</span>, <span class="number">0x66</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC9</span>, <span class="number">0x64</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x49</span>, <span class="number">0x66</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x76</span>, <span class="number">0x28</span>, <span class="number">0x64</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x40</span>, <span class="number">0x06</span>, <span class="number">0xE5</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x64</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x78</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x16</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0xA0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x28</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x6E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xB8</span>, <span class="number">0x3C</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xE0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x3C</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xF8</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFC</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0xFC</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xF0</span>, <span class="number">0x01</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xE0</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0xFF</span>, <span class="number">0xF0</span>, <span class="number">0x0F</span>, <span class="number">0xC0</span>, <span class="number">0x03</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xF8</span>, <span class="number">0x3F</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xC1</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xC0</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x8D</span>, <span class="number">0xB1</span>, <span class="number">0xF8</span>, <span class="number">0x01</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xC1</span>, <span class="number">0xFF</span>, <span class="number">0xB5</span>, <span class="number">0x26</span>, <span class="number">0xFC</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0x9C</span>, <span class="number">0x73</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xC3</span>, <span class="number">0xFF</span>, <span class="number">0xC4</span>, <span class="number">0x78</span>, <span class="number">0xFE</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x41</span>, <span class="number">0xFF</span>, <span class="number">0x35</span>, <span class="number">0x26</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x85</span>, <span class="number">0x90</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x82</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xF0</span>, <span class="number">0x7F</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x03</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xF0</span>, <span class="number">0x7F</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0xF8</span>, <span class="number">0x3F</span>, <span class="number">0xFF</span>, <span class="number">0x3F</span>, <span class="number">0xFE</span>, <span class="number">0x07</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0xF8</span>, <span class="number">0x0F</span>, <span class="number">0xFE</span>, <span class="number">0x3F</span>, <span class="number">0xFC</span>, <span class="number">0x0F</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xE6</span>, <span class="number">0x7C</span>, <span class="number">0x03</span>, <span class="number">0xF8</span>, <span class="number">0xFF</span>, <span class="number">0xF8</span>, <span class="number">0x0F</span>, <span class="number">0x1F</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0xF0</span>, <span class="number">0x1F</span>, <span class="number">0xA1</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF3</span>, <span class="number">0xFE</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xE0</span>, <span class="number">0x3F</span>, <span class="number">0x37</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7B</span>, <span class="number">0xDF</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x7F</span>, <span class="number">0x97</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7B</span>, <span class="number">0x67</span>, <span class="number">0x80</span>, <span class="number">0x3F</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0xFA</span>, <span class="number">0xD7</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0xE7</span>, <span class="number">0xC0</span>, <span class="number">0x07</span>, <span class="number">0xF0</span>, <span class="number">0x01</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x0F</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xF8</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x5C</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xFB</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x38</span>, <span class="number">0x7E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0xB6</span>, <span class="number">0xBC</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF0</span>, <span class="number">0x7F</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0x87</span>, <span class="number">0xB8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xE0</span>, <span class="number">0xCF</span>, <span class="number">0xF8</span>, <span class="number">0x07</span>, <span class="number">0xFB</span>, <span class="number">0x8F</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xED</span>, <span class="number">0xD3</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xE3</span>, <span class="number">0x27</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFA</span>, <span class="number">0xAB</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x38</span>, <span class="number">0x73</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF7</span>, <span class="number">0xCE</span>, <span class="number">0x3F</span>, <span class="number">0xFE</span>, <span class="number">0xB9</span>, <span class="number">0xE7</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x15</span>, <span class="number">0x30</span>, <span class="number">0xFE</span>, <span class="number">0x37</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x0E</span>, <span class="number">0x31</span>, <span class="number">0xFE</span>, <span class="number">0xDE</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0xCD</span>, <span class="number">0x30</span>, <span class="number">0xEF</span>, <span class="number">0xDC</span>, <span class="number">0xFC</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xFB</span>, <span class="number">0xB0</span>, <span class="number">0xEF</span>, <span class="number">0x9F</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xFE</span>, <span class="number">0xE1</span>, <span class="number">0xD7</span>, <span class="number">0x6F</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xF9</span>, <span class="number">0xDA</span>, <span class="number">0x7F</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0xFF</span>, <span class="number">0xBB</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8g2.begin();</span><br><span class="line">  u8g2.enableUTF8Print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    u8g2.drawBitmap( <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">64</span>, apeach);</span><br><span class="line">  &#125; <span class="keyword">while</span>(u8g2.nextPage());</span><br><span class="line">  delay(<span class="number">3000</span>);</span><br><span class="line">  </span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    u8g2.drawBitmap( <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">64</span>, skslogo_1bit_128x64);</span><br><span class="line">  &#125; <span class="keyword">while</span>(u8g2.nextPage());</span><br><span class="line">  delay(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="센서값-출력하기"><a href="#센서값-출력하기" class="headerlink" title="센서값 출력하기"></a>센서값 출력하기</h2><h3 id="DS18b20-온도센서"><a href="#DS18b20-온도센서" class="headerlink" title="DS18b20 온도센서"></a>DS18b20 온도센서</h3><h4 id="pinmap-2"><a href="#pinmap-2" class="headerlink" title="pinmap"></a>pinmap</h4><table><thead><tr><th>OLED</th><th>ESP32 (HW_SPI로 사용시) (VSPI)</th><th></th><th>DS18b20</th><th>4.7kΩ</th></tr></thead><tbody><tr><td>GND</td><td>GND</td><td></td><td></td><td></td></tr><tr><td>VDD</td><td>3.3V</td><td></td><td></td><td></td></tr><tr><td>D0</td><td><strong>18</strong> (HW_SPI 사용시 GPIO_18로 고정)</td><td>SCK/CLK/CLOCK</td><td></td><td></td></tr><tr><td>D1</td><td><strong>23</strong> (HW_SPI 사용시 GPIO_23으로 고정)</td><td>DATA/DIN/MOSI</td><td></td><td></td></tr><tr><td>RES</td><td>15</td><td>RST/RESET</td><td></td><td></td></tr><tr><td>DC</td><td>14</td><td>Data Command</td><td></td><td></td></tr><tr><td>CS</td><td>5</td><td>Chip Select</td><td></td><td></td></tr><tr><td></td><td>GND</td><td></td><td>GND (Black)</td><td></td></tr><tr><td></td><td>5V</td><td></td><td>VCC (Red)</td><td>O</td></tr><tr><td></td><td>13</td><td></td><td>Signal (Yellow)</td><td>O</td></tr></tbody></table><br><h4 id="schematic-2"><a href="#schematic-2" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/u/u8g2-DS18b20-01.png"></p><br><h4 id="library"><a href="#library" class="headerlink" title="library"></a>library</h4><p><strong>Sketch</strong>&gt; <strong>Include Library</strong>&gt; <strong>Manage Libraries</strong>&gt;</p><ul><li>  OneWire (by Jim Studt etc.)</li><li>  DallasTemperature (by Miles Burton)</li></ul><br><h4 id="sketch-5"><a href="#sketch-5" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;U8g2lib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for SPI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for using Korean NanumGothicCoding font</span></span><br><span class="line"><span class="comment">// #include &quot;u8g2_font_unifont_t_korean_NanumGothicCoding_16.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Please UNCOMMENT one of the contructor lines below</span></span><br><span class="line"><span class="comment">// U8g2 Contructor List (Frame Buffer)</span></span><br><span class="line"><span class="comment">// The complete list is available here: https://github.com/olikraus/u8g2/wiki/u8g2setupcpp</span></span><br><span class="line"><span class="comment">// Please update the pin numbers according to your setup. Use U8X8_PIN_NONE if the reset pin is not connected</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for HW_SPI (VSPI)</span></span><br><span class="line"><span class="function">U8G2_SH1106_128X64_NONAME_F_4W_HW_SPI <span class="title">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* cs=*/</span> <span class="number">5</span>, <span class="comment">/* dc=*/</span> <span class="number">14</span>, <span class="comment">/* reset=*/</span> <span class="number">15</span>)</span></span>;</span><br><span class="line"><span class="comment">// for SW_SPI</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 26, /* data=*/ 25, /* cs=*/ 5, /* dc=*/ 14, /* reset=*/ 15);</span></span><br><span class="line"><span class="comment">// for SSD1306, I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"><span class="comment">// for SH1106,  I2C, (ESP32: SDA 21, SCL 22)</span></span><br><span class="line"><span class="comment">//U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;OneWire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;DallasTemperature.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEMP_PIN 13</span></span><br><span class="line"></span><br><span class="line"><span class="function">OneWire <span class="title">oneWire</span><span class="params">(TEMP_PIN)</span></span>;</span><br><span class="line"><span class="function">DallasTemperature <span class="title">sensors</span><span class="params">(&amp;oneWire)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> startTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> skslogo_1bit_128x64 [] = &#123;</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2E</span>, <span class="number">0x66</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC9</span>, <span class="number">0x64</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x49</span>, <span class="number">0x66</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x76</span>, <span class="number">0x28</span>, <span class="number">0x64</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x40</span>, <span class="number">0x06</span>, <span class="number">0xE5</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x64</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x78</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x16</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0xA0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x28</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x6E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xB8</span>, <span class="number">0x3C</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xE0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x3C</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xF8</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFC</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0xFC</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xF0</span>, <span class="number">0x01</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xE0</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0xFF</span>, <span class="number">0xF0</span>, <span class="number">0x0F</span>, <span class="number">0xC0</span>, <span class="number">0x03</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xF8</span>, <span class="number">0x3F</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xC1</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xC0</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x8D</span>, <span class="number">0xB1</span>, <span class="number">0xF8</span>, <span class="number">0x01</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xC1</span>, <span class="number">0xFF</span>, <span class="number">0xB5</span>, <span class="number">0x26</span>, <span class="number">0xFC</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0x9C</span>, <span class="number">0x73</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xC3</span>, <span class="number">0xFF</span>, <span class="number">0xC4</span>, <span class="number">0x78</span>, <span class="number">0xFE</span>, <span class="number">0x01</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x41</span>, <span class="number">0xFF</span>, <span class="number">0x35</span>, <span class="number">0x26</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x85</span>, <span class="number">0x90</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x82</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xF0</span>, <span class="number">0x7F</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x03</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xF0</span>, <span class="number">0x7F</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0xF8</span>, <span class="number">0x3F</span>, <span class="number">0xFF</span>, <span class="number">0x3F</span>, <span class="number">0xFE</span>, <span class="number">0x07</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0xF8</span>, <span class="number">0x0F</span>, <span class="number">0xFE</span>, <span class="number">0x3F</span>, <span class="number">0xFC</span>, <span class="number">0x0F</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xE6</span>, <span class="number">0x7C</span>, <span class="number">0x03</span>, <span class="number">0xF8</span>, <span class="number">0xFF</span>, <span class="number">0xF8</span>, <span class="number">0x0F</span>, <span class="number">0x1F</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0xF0</span>, <span class="number">0x1F</span>, <span class="number">0xA1</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF3</span>, <span class="number">0xFE</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xE0</span>, <span class="number">0x3F</span>, <span class="number">0x37</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7B</span>, <span class="number">0xDF</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="number">0x7F</span>, <span class="number">0x97</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7B</span>, <span class="number">0x67</span>, <span class="number">0x80</span>, <span class="number">0x3F</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0xFA</span>, <span class="number">0xD7</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0xE7</span>, <span class="number">0xC0</span>, <span class="number">0x07</span>, <span class="number">0xF0</span>, <span class="number">0x01</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x0F</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xF8</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x5C</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xFB</span>, <span class="number">0x7C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x38</span>, <span class="number">0x7E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0xB6</span>, <span class="number">0xBC</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xF0</span>, <span class="number">0x7F</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0x87</span>, <span class="number">0xB8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xE0</span>, <span class="number">0xCF</span>, <span class="number">0xF8</span>, <span class="number">0x07</span>, <span class="number">0xFB</span>, <span class="number">0x8F</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xED</span>, <span class="number">0xD3</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xE3</span>, <span class="number">0x27</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0xFA</span>, <span class="number">0xAB</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x38</span>, <span class="number">0x73</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF7</span>, <span class="number">0xCE</span>, <span class="number">0x3F</span>, <span class="number">0xFE</span>, <span class="number">0xB9</span>, <span class="number">0xE7</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x15</span>, <span class="number">0x30</span>, <span class="number">0xFE</span>, <span class="number">0x37</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x0E</span>, <span class="number">0x31</span>, <span class="number">0xFE</span>, <span class="number">0xDE</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0xCD</span>, <span class="number">0x30</span>, <span class="number">0xEF</span>, <span class="number">0xDC</span>, <span class="number">0xFC</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xFB</span>, <span class="number">0xB0</span>, <span class="number">0xEF</span>, <span class="number">0x9F</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0xFE</span>, <span class="number">0xE1</span>, <span class="number">0xD7</span>, <span class="number">0x6F</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xF9</span>, <span class="number">0xDA</span>, <span class="number">0x7F</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0xFF</span>, <span class="number">0xBB</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8g2.begin();</span><br><span class="line">  u8g2.enableUTF8Print();</span><br><span class="line"></span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    u8g2.drawBitmap( <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">64</span>, skslogo_1bit_128x64);</span><br><span class="line">  &#125; <span class="keyword">while</span>(u8g2.nextPage());</span><br><span class="line">  delay(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    u8g2.setFont(u8g2_font_ncenB14_tr);</span><br><span class="line">    u8g2.drawStr(<span class="number">0</span>, <span class="number">15</span>, <span class="string">&quot;SKS STEAM!&quot;</span>);</span><br><span class="line">    u8g2.drawTriangle(<span class="number">27</span>,<span class="number">50</span>, <span class="number">64</span>,<span class="number">32</span>, <span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">  &#125; <span class="keyword">while</span> ( u8g2.nextPage() );</span><br><span class="line">  delay(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  startTime = millis();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Start up the DS18b20 library</span></span><br><span class="line">  sensors.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> ttime = millis();</span><br><span class="line"></span><br><span class="line">  sensors.requestTemperatures();</span><br><span class="line">  <span class="keyword">float</span> temperatureC = sensors.getTempCByIndex(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">float</span> temperatureF = sensors.getTempFByIndex(<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  u8g2.firstPage();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">//u8g2.setFont(u8g2_font_unifont_t_korean1);</span></span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_t_korean2);</span><br><span class="line">    <span class="comment">//u8g2.setFont(u8g2_font_unifont_t_korean_NanumGothicCoding_16);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Title</span></span><br><span class="line">    u8g2.setCursor(<span class="number">8</span>, <span class="number">14</span>);</span><br><span class="line">    u8g2.print(<span class="string">&quot;[[ 온도측정 ]]&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// actual time measured. (1초 마다 출력되지는 않음)</span></span><br><span class="line">    u8g2.setCursor(<span class="number">0</span>, <span class="number">31</span>);</span><br><span class="line">    u8g2.print(<span class="string">&quot;시간: &quot;</span>);</span><br><span class="line">    u8g2.setCursor(<span class="number">63</span>, <span class="number">31</span>);</span><br><span class="line">    u8g2.print(getTime(ttime));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Celcius temperature</span></span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_t_korean2);</span><br><span class="line">    u8g2.setCursor(<span class="number">0</span>, <span class="number">47</span>);</span><br><span class="line">    u8g2.print(<span class="string">&quot;섭씨: &quot;</span>);</span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_tf);</span><br><span class="line">    <span class="keyword">if</span>(temperatureC&lt;<span class="number">100</span>) &#123;</span><br><span class="line">      u8g2.setCursor(<span class="number">71</span>, <span class="number">47</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      u8g2.setCursor(<span class="number">63</span>, <span class="number">47</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    u8g2.print(temperatureC, <span class="number">2</span>);</span><br><span class="line">    u8g2.drawGlyph(<span class="number">111</span>, <span class="number">47</span>, <span class="number">0x00b0</span>); <span class="comment">// degree</span></span><br><span class="line">    u8g2.drawStr(<span class="number">119</span>, <span class="number">47</span>, <span class="string">&quot;C&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Fahrenheit temperature</span></span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_t_korean2);</span><br><span class="line">    u8g2.setCursor(<span class="number">0</span>, <span class="number">63</span>);</span><br><span class="line">    u8g2.print(<span class="string">&quot;화씨: &quot;</span>);</span><br><span class="line">    u8g2.setFont(u8g2_font_unifont_tf);</span><br><span class="line">    <span class="keyword">if</span>(temperatureF&lt;<span class="number">100</span>) &#123;</span><br><span class="line">      u8g2.setCursor(<span class="number">71</span>, <span class="number">63</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      u8g2.setCursor(<span class="number">63</span>, <span class="number">63</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">    u8g2.print(temperatureF, <span class="number">2</span>);</span><br><span class="line">    u8g2.drawGlyph(<span class="number">111</span>, <span class="number">63</span>, <span class="number">0x00b0</span>); <span class="comment">// degree</span></span><br><span class="line">    u8g2.drawStr(<span class="number">119</span>, <span class="number">63</span>, <span class="string">&quot;F&quot;</span>);</span><br><span class="line">    </span><br><span class="line">  &#125; <span class="keyword">while</span> ( u8g2.nextPage() );</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">getTime</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> ttime)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> sec = ttime / <span class="number">1000</span>; <span class="keyword">int</span> min = sec / <span class="number">60</span>; <span class="keyword">int</span> hr = min / <span class="number">60</span>;</span><br><span class="line">  String ts = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 시간</span></span><br><span class="line">  <span class="keyword">if</span> (hr &lt; <span class="number">10</span>) ts += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  ts += hr;</span><br><span class="line">  ts += <span class="string">&quot;:&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 분</span></span><br><span class="line">  <span class="keyword">if</span> ((min % <span class="number">60</span>) &lt; <span class="number">10</span>) ts += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  ts += min % <span class="number">60</span>;</span><br><span class="line">  ts += <span class="string">&quot;:&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 초</span></span><br><span class="line">  <span class="keyword">if</span> ((sec % <span class="number">60</span>) &lt; <span class="number">10</span>) ts += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  ts += sec % <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (ts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="result"><a href="#result" class="headerlink" title="result"></a>result</h4><p><img src="/image/u/u8g2-bitmap-14.png"></p><br><br><h2 id="UTF8-HanDraw-라이브러리-한글-출력하기"><a href="#UTF8-HanDraw-라이브러리-한글-출력하기" class="headerlink" title="UTF8_HanDraw 라이브러리 한글 출력하기"></a>UTF8_HanDraw 라이브러리 한글 출력하기</h2><h4 id="ESP32-SPIFFS-영역에-폰트-업로드"><a href="#ESP32-SPIFFS-영역에-폰트-업로드" class="headerlink" title="ESP32 SPIFFS 영역에 폰트 업로드"></a>ESP32 SPIFFS 영역에 폰트 업로드</h4><ul><li><p>SPIFFS란?</p><ul><li>**SPIFFS(Serial Peripheral Interface Flash File System)**는 ESP32와 ESP8266의 모듈에 내부 탑재 되어 있는 메모리를 저장공간으로 사용하기 위한 파일 시스템이다.</li><li>ESP8266과 ESP32에는 보통 <strong>4MByte의 메모리</strong>가 탑재되어 있으며 이 메모리의 일부를 플래쉬 메모리로 사용하고 나머지를 파일 저장공간으로 사용할 수가 있다.</li><li><strong>작은 용량의 SD카드가 내장</strong>이 되었다고 생각하면 이해하기 쉽다.</li></ul></li><li><p>아두이노에서의 SPIFFS의 이용</p><ul><li><p>아두이노 IDE에는 이 메모리의 분리를 설정할 수 있는 메뉴가 있다. 아두이노IDE에서 아래의 항목을 설정하는 것 만으로 스케치를 업로드하면 영역이 분할되어 스케치가 업로드 된다. </p><p><strong>툴</strong>&gt; <strong>Partition Scheme</strong>&gt; <strong>Default 4MB with spiffs (1.2MB APPS / 1.5MB SPIFFS)</strong></p></li><li><p>기본설정은 위와 같지만 SPIFFS 용량이 부족하다면, **위 메뉴에서 **</p><p>**No OTA(1MB APP/3MB SPIFFS)**와 같은 다른 설정을 선택하여, 코딩이 들어가는 플래쉬 메모리를 1MByte를 사용하고, 나머지 3MByte의 SPIFFS영역에는 코딩에서 필요한 자료(예를 들면 그림파일이나 텍스트 파일등)을 업로드 하고 코딩에서 그 파일을 사용하면 됩니다.</p></li><li><p>아두이노 우노의 플래쉬메모리가 32KByte인 것을 고려하면 ESP32에 플래쉬 메모리를 1MByte만 할당 하는 것도 적지 않은 할당이지만, ESP32의 고급기능(WIFI, 블루투스)등을 사용하면 이 메모리도 모자라게 되는 경우도 있다.</p></li></ul></li></ul><br><ul><li><p>아두이노 IDE에 SPIFFS 설정하기</p><ul><li><p>아두이노 IDE에서 ESP32의 SPIFFS영역에 파일을 올리기 위해서는 별도의 툴을 설치하여야 한다. 아래의 링크를 클릭하여 ESP32FS-1.0.zip 파일을 다운로드 받은 뒤, </p><p><a href="https://github.com/me-no-dev/arduino-esp32fs-plugin/releases/"><strong>https://github.com/me-no-dev/arduino-esp32fs-plugin/releases/</strong></a></p></li><li><p>압축을 풀어 나오는 ESP32FS폴더를 아두이노 설치 폴더 내의 tools폴더 아래에 복사한다.</p><p>예를들면, c:\Program Files (x86)\Arduino\tools\ESP32FS\tool\esp32fs.jar</p><p>같은 형태로 파일 경로가 만들어져야 한다.</p></li><li><p>아두이노IDE를 종료하였다가 다시 실행시키면</p><p><strong>툴</strong>&gt; <strong>ESP32 Sketch Data Upload</strong> 항목이 만들어진다.</p><p><img src="/image/ESP32-OLED-02.png"></p></li></ul></li></ul><br><ul><li>SPIFFS에 (폰트) 파일 업로드하기<ul><li>기본적으로 ESP32의 SPIFFS에 파일을 업로드 하기 위해서는, <strong>업로드하려는 스케치(.ino) 파일이 위치한 폴더에 data폴더를 생성</strong>한 뒤, <strong>업로드하려는 파일을 복사</strong>해 넣으면 된다.</li><li>그러므로 이번 과정에서 SPIFFS에 (폰트)파일을 업로드하려면, (폰트) 파일을 업로드하려는 스케치(UTF8_HanDraw.ino)가 저장되어 있는 폴더 안에, (UTF8_HanDraw.zip 파일의 압축을 풀었을때 만들어진) data폴더를 복사해 넣으면 된다.</li><li>아두이노 IDE에 스케치를 열고, 메뉴에 추가된 <strong>ESP32 Sketch Data Upload</strong>를 클릭하면, 스케치 파일은 컴파일 후 APP영역에 저장되고, Data폴더안의 (폰트) 파일은 SPIFFS영역에 분리되어 저장된다.</li></ul></li></ul><br><h4 id="schematic-3"><a href="#schematic-3" class="headerlink" title="schematic"></a>schematic</h4><table><thead><tr><th>OLED (I2C)</th><th>ESP32</th><th>if, Arduino UNO</th></tr></thead><tbody><tr><td>GND</td><td>GND</td><td>GND</td></tr><tr><td>VCC</td><td>3V3</td><td>3V3</td></tr><tr><td>SCL</td><td>22</td><td>A5</td></tr><tr><td>SDA</td><td>21</td><td>A4</td></tr></tbody></table><p><img src="/image/ESP32-OLED-03.png"></p><br><h4 id="sketch-6"><a href="#sketch-6" class="headerlink" title="sketch"></a>sketch</h4><p>출처: [OLED에 한글을 출력하자 by Andy Kim (andy-power.blogspot.com)](<a href="http://andy-power.blogspot.com/2018/08/oled.html">Andy Kim: OLED에 한글을 출력하자. (andy-power.blogspot.com)</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Arduino.h&gt;</span><br><span class="line">#include &quot;Display_SSD1306.h&quot;</span><br><span class="line">#include &quot;HanDraw.h&quot;</span><br><span class="line"></span><br><span class="line">#define OLED_RESET -1             // for S/W 리셋</span><br><span class="line">Display_SSD1306 Oled(OLED_RESET);</span><br><span class="line"></span><br><span class="line">/************************* Global variables *********************************/</span><br><span class="line">unsigned long startTime = 0;</span><br><span class="line">uint32_t loopcnt = 0;</span><br><span class="line">char fpsbuf[128] = &quot;FPS:&quot;;</span><br><span class="line">bool invert = true;  // 화면을 역상으로 표시</span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">  Serial.begin(115200);</span><br><span class="line">  delay(50);</span><br><span class="line"></span><br><span class="line">  // Oled를 I2C 방식으로 연결하고, 그 주소는 0x3c</span><br><span class="line">  Oled.begin(SSD1306_SWITCHCAPVCC, 0x3C, false);</span><br><span class="line">  </span><br><span class="line">  // Callback 함수를 설정해 주면 필요시 호출 하여 사용함.</span><br><span class="line">  HanDraw.begin(12, </span><br><span class="line">    // 화면 지우는 콜백함수 </span><br><span class="line">    [](void) &#123;  Oled.clearDisplay(); &#125;,</span><br><span class="line">    // 1개 픽셀을 그리는 콜백 함수</span><br><span class="line">    [](int16_t x, int16_t y, uint16_t color) &#123; Oled.drawPixel(x, y, color); &#125;,</span><br><span class="line">    // 메모리에서 Display 표시 버퍼까지 보내는 함수</span><br><span class="line">    [](void) &#123; Oled.display(); &#125;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  HanDraw.display(); // 사실상 Oled.display() 와 동일....</span><br><span class="line">  delay(2000);</span><br><span class="line"></span><br><span class="line">  HanDraw.clear();</span><br><span class="line">  HanDraw.setFontSize(12);</span><br><span class="line">  // 특수한 문자 몇개는... 아래와 같이 주면 출력된다. (통용되는 코드가 아니라 변칙 코드임)</span><br><span class="line">  // 12px:한글 21℃℉‰μ°   라고 출력</span><br><span class="line">  HanDraw.drawString(1, 0, &quot;12px:한글 21\x10\x0f\x11\x12\x13&quot;); </span><br><span class="line">  HanDraw.setFontSize(14);</span><br><span class="line">  // 14:아래첨자 A₁₂₃₄   라고 출력</span><br><span class="line">  HanDraw.drawString(1, 13, &quot;14:아래첨자 A\x0b\x0c\x0d\x0e&quot;);</span><br><span class="line">  HanDraw.setFontSize(16);</span><br><span class="line">  // 16:위첨자 M¹²³⁴   라고 출력</span><br><span class="line">  HanDraw.drawString(1, 28, &quot;16:위첨자 M\x15\x16\x17\x18&quot;);</span><br><span class="line">  HanDraw.display();</span><br><span class="line">  delay(3000);</span><br><span class="line"></span><br><span class="line">  HanDraw.setFontSize(12);</span><br><span class="line">  startTime = millis();</span><br><span class="line">  delay(1);</span><br><span class="line">  Serial.println(&quot;Setup All done&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String getTime(unsigned long  ttime) &#123;</span><br><span class="line">  int sec = ttime / 1000; int min = sec / 60; int hr = min / 60;</span><br><span class="line">  String ts = &quot;&quot;; </span><br><span class="line">  if (hr &lt; 10) ts += &quot;0&quot;;</span><br><span class="line">  ts += hr;   ts += &quot;:&quot;;</span><br><span class="line">  if ((min % 60) &lt; 10) ts += &quot;0&quot;;</span><br><span class="line">  ts += min % 60;   ts += &quot;:&quot;;</span><br><span class="line">  if ((sec % 60) &lt; 10) ts += &quot;0&quot;;</span><br><span class="line">  ts += sec % 60;</span><br><span class="line">  return (ts);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop() &#123;</span><br><span class="line">  unsigned long  ttime = millis();</span><br><span class="line">  dtostrf(loopcnt * 1000.0 / (ttime - startTime), 5, 2,   fpsbuf + 4);</span><br><span class="line"></span><br><span class="line">  HanDraw.clear();</span><br><span class="line">  HanDraw.drawString(15, 2, &quot;[[ 화면 정보 ]]&quot;);</span><br><span class="line">  HanDraw.drawString(2, 14, &quot;--------------------&quot;);</span><br><span class="line">  HanDraw.drawString(2, 24, &quot;한글 출력 테스트&quot;);</span><br><span class="line">  HanDraw.drawString(2, 38, fpsbuf);</span><br><span class="line">  HanDraw.drawString(2, 51, getTime(ttime));</span><br><span class="line">  HanDraw.display();</span><br><span class="line"></span><br><span class="line">  loopcnt++;</span><br><span class="line">  if (loopcnt % 100 == 0) &#123;</span><br><span class="line">    Oled.invertDisplay(invert);</span><br><span class="line">    invert = !invert;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="OLED에-DS18b20-온도-출력하기"><a href="#OLED에-DS18b20-온도-출력하기" class="headerlink" title="OLED에 DS18b20 온도 출력하기"></a>OLED에 DS18b20 온도 출력하기</h3><br><h4 id="schematic-4"><a href="#schematic-4" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/ESP32-OLED-04.png"></p><table><thead><tr><th>OLED (I2C)</th><th>ESP32</th><th>DS18b20</th><th>4.7kΩ</th></tr></thead><tbody><tr><td>GND</td><td>GND</td><td>BLK</td><td></td></tr><tr><td>VCC</td><td>3V3</td><td></td><td></td></tr><tr><td>SCL</td><td>33</td><td></td><td></td></tr><tr><td>SDA</td><td>32</td><td></td><td></td></tr><tr><td></td><td>5V</td><td>RED</td><td>O</td></tr><tr><td></td><td>GPIO13</td><td>YELLOW</td><td>O</td></tr></tbody></table><br><h4 id="library-1"><a href="#library-1" class="headerlink" title="library"></a>library</h4><p><strong>Sketch</strong>&gt; <strong>Include Library</strong>&gt; <strong>Manage Libraries</strong>&gt;</p><ul><li>  OneWire (by Jim Studt etc.)</li><li>  DallasTemperature (by Miles Burton)</li></ul><br><h4 id="sketch-7"><a href="#sketch-7" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Arduino.h&gt;</span><br><span class="line"></span><br><span class="line">#include &lt;OneWire.h&gt;</span><br><span class="line">#include &lt;DallasTemperature.h&gt;</span><br><span class="line"></span><br><span class="line">#define TEMP_PIN 13</span><br><span class="line"></span><br><span class="line">OneWire oneWire(TEMP_PIN);</span><br><span class="line">DallasTemperature sensors(&amp;oneWire);</span><br><span class="line"></span><br><span class="line">#include &quot;Display_SSD1306.h&quot;</span><br><span class="line">#include &quot;HanDraw.h&quot;</span><br><span class="line"></span><br><span class="line">#define OLED_RESET -1              // for  S/W 리셋</span><br><span class="line">Display_SSD1306 Oled(OLED_RESET);</span><br><span class="line"></span><br><span class="line">/************************* Global variables *********************************/</span><br><span class="line">unsigned long startTime = 0;</span><br><span class="line">uint32_t loopcnt = 0;</span><br><span class="line">char fpsbuf[128] = &quot;FPS:&quot;;</span><br><span class="line">char tC[128];</span><br><span class="line">char tF[128];</span><br><span class="line">bool invert = true;  // 화면을 역상으로 표시</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">  Serial.begin(115200);</span><br><span class="line">  delay(50);</span><br><span class="line"></span><br><span class="line">  // Oled를 I2C 방식으로 연결하고, 그 주소는 0x3c</span><br><span class="line">  Oled.begin(SSD1306_SWITCHCAPVCC, 0x3C, false);</span><br><span class="line">  </span><br><span class="line">  // Callback 함수를 설정해 주면 필요시 호출 하여 사용함.</span><br><span class="line">  HanDraw.begin(12, </span><br><span class="line">    // 화면 지우는 콜백함수 </span><br><span class="line">    [](void) &#123;  Oled.clearDisplay(); &#125;,</span><br><span class="line">    // 1개 픽셀을 그리는 콜백 함수</span><br><span class="line">    [](int16_t x, int16_t y, uint16_t color) &#123; Oled.drawPixel(x, y, color); &#125;,</span><br><span class="line">    // 메모리에서 Display 표시 버퍼까지 보내는 함수</span><br><span class="line">    [](void) &#123; Oled.display(); &#125;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  startTime = millis();</span><br><span class="line">  delay(1);</span><br><span class="line">  </span><br><span class="line">  // Start up the DS18b20 library</span><br><span class="line">  sensors.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop() &#123;</span><br><span class="line">  unsigned long  ttime = millis();</span><br><span class="line">  dtostrf(loopcnt * 1000.0 / (ttime - startTime), 5, 2, fpsbuf + 4);</span><br><span class="line"></span><br><span class="line">  sensors.requestTemperatures();</span><br><span class="line">  float temperatureC = sensors.getTempCByIndex(0);</span><br><span class="line">  float temperatureF = sensors.getTempFByIndex(0);</span><br><span class="line">  dtostrf(temperatureC, 6, 2, tC);</span><br><span class="line">  String tempC = &quot;섭씨온도 * &quot; + (String)tC + &quot;\x10&quot;;</span><br><span class="line">  dtostrf(temperatureF, 6, 2, tF);</span><br><span class="line">  String tempF = &quot;화씨온도 * &quot; + (String)tF + &quot;\x0f&quot;;</span><br><span class="line"></span><br><span class="line">  HanDraw.display();</span><br><span class="line"></span><br><span class="line">  HanDraw.clear();</span><br><span class="line">  HanDraw.setFontSize(12);</span><br><span class="line">  HanDraw.drawString(15, 2, &quot;[[ 온도 측정 ]]&quot;);</span><br><span class="line">  HanDraw.drawString(2, 14, &quot;--------------------&quot;);</span><br><span class="line">  HanDraw.drawString(2, 24, getTime(ttime));</span><br><span class="line">  HanDraw.drawString(2, 38, tempC);</span><br><span class="line">  HanDraw.drawString(2, 51, tempF);</span><br><span class="line">  HanDraw.display();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String getTime(unsigned long ttime) &#123;</span><br><span class="line">  int sec = ttime / 1000; int min = sec / 60; int hr = min / 60;</span><br><span class="line">  //String ts = &quot;&quot;;</span><br><span class="line">  String ts = &quot;측정시간 * &quot;;</span><br><span class="line">  if (hr &lt; 10) ts += &quot;0&quot;;</span><br><span class="line">  ts += hr;   ts += &quot;:&quot;;</span><br><span class="line">  if ((min % 60) &lt; 10) ts += &quot;0&quot;;</span><br><span class="line">  ts += min % 60;   ts += &quot;:&quot;;</span><br><span class="line">  if ((sec % 60) &lt; 10) ts += &quot;0&quot;;</span><br><span class="line">  ts += sec % 60;</span><br><span class="line">  return (ts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">ESP32</category>
      
      
      
      <comments>http://stemwith.github.io/2021/09/26/ESP32-OLED/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32, 스텝모터</title>
      <link>http://stemwith.github.io/2021/09/25/ESP32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</link>
      <guid>http://stemwith.github.io/2021/09/25/ESP32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</guid>
      <pubDate>Sat, 25 Sep 2021 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;스텝-모터-28BYJ-48&quot;&gt;&lt;a href=&quot;#스텝-모터-28BYJ-48&quot; class=&quot;headerlink&quot; title=&quot;스텝 모터, 28BYJ-48&quot;&gt;&lt;/a&gt;스텝 모터, 28BYJ-48&lt;/h3&gt;&lt;h4 id=&quot;Specification&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="스텝-모터-28BYJ-48"><a href="#스텝-모터-28BYJ-48" class="headerlink" title="스텝 모터, 28BYJ-48"></a>스텝 모터, 28BYJ-48</h3><h4 id="Specification"><a href="#Specification" class="headerlink" title="Specification"></a>Specification</h4><img src="/image/s/Step-Motor-02.png" style="zoom: 80%;" /><ul><li><p>정격전압: 5VDC</p></li><li><p>기어비: 1/64<br>$$<br>\frac {32}{9} \times \frac {22}{11} \times \frac {26}{9} \times \frac {31}{10} = 63.68395 \fallingdotseq 64<br>$$</p></li></ul><img src="/image/s/Step-Motor-01.png" style="zoom: 50%;" /><ul><li>스트라이드 각도<ul><li><strong>스펙상 5.625º / 64</strong> = 0.087890625<ul><li>그러므로,  360º / 0.087890625 = 4096 스텝</li></ul></li><li><strong>실제로는 11.25º / 64</strong> = 0.17578125<ul><li>그러므로,  360º / 0.17578125 = <strong>2048 스텝으로 1회전</strong></li></ul></li></ul></li><li>Frequency: 100Hz</li><li>토크: 34.3mN,m</li></ul><br><h3 id="모터드라이브-ULN2003"><a href="#모터드라이브-ULN2003" class="headerlink" title="모터드라이브 ULN2003"></a>모터드라이브 ULN2003</h3><img src="/image/s/Step-Motor-03.png" style="zoom:67%;" /><br><br><h3 id="스텝-모터의-구동"><a href="#스텝-모터의-구동" class="headerlink" title="스텝 모터의 구동"></a>스텝 모터의 구동</h3><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/s/Step-Motor-04.png"></p><br><h4 id="Pin-Map"><a href="#Pin-Map" class="headerlink" title="Pin Map"></a>Pin Map</h4><table><thead><tr><th>외부전원</th><th>모터드라이브</th><th>ESP32</th></tr></thead><tbody><tr><td></td><td>INT1</td><td>19</td></tr><tr><td></td><td>INT2</td><td>18</td></tr><tr><td></td><td>INT3</td><td>5</td></tr><tr><td></td><td>INT4</td><td>17</td></tr><tr><td>(+) 5V</td><td>GND</td><td></td></tr><tr><td>(-)</td><td>VCC</td><td></td></tr></tbody></table><p>※ 모터드라이브에 연결하는 전원(VCC)는 <strong>외부전원 5V를 사용</strong>한다. (ESP32의 5V는, 전류가 부족하여 ESP32와 연결한 노트북에 영향을 줄 수 있으므로, 사용하지 않는 것이 좋다.)</p><br><h4 id="스텝업-모듈"><a href="#스텝업-모듈" class="headerlink" title="스텝업 모듈"></a>스텝업 모듈</h4><img src="/image/s/Stepup-Module-01.png" style="zoom:67%;" /><ul><li>입력전압: 0.9~5V</li><li>출력전압: 5V</li><li>출력전류: 500~600mA</li><li>최대효율: 96%</li></ul><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Stepper.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> stepsPerRevolution = <span class="number">2048</span>;  <span class="comment">// change this to fit the number of steps per revolution</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ULN2003 Motor Driver Pins</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IN1 19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IN2 18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IN3 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IN4 17</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// initialize the stepper library</span></span><br><span class="line"><span class="function">Stepper <span class="title">myStepper</span><span class="params">(stepsPerRevolution, IN1, IN3, IN2, IN4)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// set the speed at 5 rpm</span></span><br><span class="line">  myStepper.<span class="built_in">setSpeed</span>(<span class="number">5</span>);</span><br><span class="line">  <span class="comment">// initialize the serial port</span></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// step one revolution in one direction:</span></span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;clockwise&quot;</span>);</span><br><span class="line">  myStepper.<span class="built_in">step</span>(stepsPerRevolution);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// step one revolution in the other direction:</span></span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;counterclockwise&quot;</span>);</span><br><span class="line">  myStepper.<span class="built_in">step</span>(-stepsPerRevolution);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>setSpeed(5);</p><ul><li><p>외부 전원의 전력에 따라 최대값이 달라짐. </p></li><li><p>5V 전원 사용시 16이 최대값인 경우가 있었고. 그 이상은 안정적으로 회전이 안되며, 17을 넣으면 한바퀴 돌고 정지. 18을 넣으면 돌지 않음.</p></li><li><p>7.4V 전원 사용시 22가 최대값인 경우가 있었고, 그 이상은 안정적으로 회전이 안됨. (23을 넣으면 시계방향 회전 후, 반시계방향 회전이 안됨. 24를 넣으면 돌지 않음)</p></li><li><p>전압에 따라 수치가 고정된 것은 아닌 듯 하며, 외부 전원의 상태에 따라 달라질 수 있으므로 테스트가 필요함.</p></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">ESP32</category>
      
      
      
      <comments>http://stemwith.github.io/2021/09/25/ESP32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32, 온도측정(DS18b20), PLX_DAQ</title>
      <link>http://stemwith.github.io/2021/09/16/ESP32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-DS18b20/</link>
      <guid>http://stemwith.github.io/2021/09/16/ESP32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-DS18b20/</guid>
      <pubDate>Thu, 16 Sep 2021 15:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;DS18b20-온도센서&quot;&gt;&lt;a href=&quot;#DS18b20-온도센서&quot; class=&quot;headerlink&quot; title=&quot;DS18b20 온도센서&quot;&gt;&lt;/a&gt;DS18b20 온도센서&lt;/h3&gt;&lt;p&gt;DS18b20 온도 센서를 이용하여 온도를 측정한다. </description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="DS18b20-온도센서"><a href="#DS18b20-온도센서" class="headerlink" title="DS18b20 온도센서"></a>DS18b20 온도센서</h3><p>DS18b20 온도 센서를 이용하여 온도를 측정한다. </p><ul><li>one-wire 버스 통신</li><li>공급전압: 3.0V ~ 5.5V</li><li>작동온도: -55ºC ~ +125ºC</li><li>오차: +/-0.5 ºC (-10ºC ~ 85ºC 범위에서)</li></ul><br><h4 id="Pinout"><a href="#Pinout" class="headerlink" title="Pinout"></a>Pinout</h4><p><img src="/image/DS18b20.png"></p><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><p>DS18b20 센서는 두 가지 연결방법을 제공하는데, 하나는 VCC를 5V에 연결하는 Normal Mode이고 다른 하나는 VCC를 GND에 연결하는 Parasite Mode이다. 두가지 방법 모두 지원되지만 (경험상) Normal를 추천하며 (원인은 잘 모르겠지만) Parasite Mode에서는 온도센서가 작동이 되지 않는 경우도 가끔 있었다. 회로 구성을 위해 <strong>4.7㏀ 저항 1개</strong>가 필요하며 Normal Mode 구성을 위해 다음 그림과 같이 연결한다.</p><ul><li>3가닥의 선에 브레드보드에 연결할 수 있는 핀을 납땜하고, 노란색선과 빨간색선의 연결부위에 4.7㏀ 저항을 추가로 납땜하여 연결한다.</li></ul><p><img src="/image/ESP32-DS18b20-R01.png"></p><ul><li>수축튜브를 사용하여 연결부위를 절연한 뒤,</li></ul><p><img src="/image/ESP32-DS18b20-R02.png"></p><ul><li>구경이 조금 더 큰 수축튜브를 사용하여 3가닥을 하나로 감싸 마무리한다.</li></ul><p><img src="/image/ESP32-DS18b20-R03.png"></p><br><h5 id="Normal-Mode"><a href="#Normal-Mode" class="headerlink" title="Normal Mode"></a>Normal Mode</h5><p><img src="/image/ESP32-DS18b20-temperature.png"></p><br><br><h3 id="라이브러리-준비하기"><a href="#라이브러리-준비하기" class="headerlink" title="라이브러리 준비하기"></a>라이브러리 준비하기</h3><p><strong>Sketch</strong>&gt; <strong>Include Library</strong>&gt; <strong>Manage Libraries</strong>&gt;</p><ul><li>  OneWire (by Jim Studt etc.)</li><li>  DallasTemperature (by Miles Burton)</li></ul><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;OneWire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;DallasTemperature.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEMP_PIN 4</span></span><br><span class="line"></span><br><span class="line"><span class="function">OneWire <span class="title">oneWire</span><span class="params">(TEMP_PIN)</span></span>;</span><br><span class="line"><span class="function">DallasTemperature <span class="title">sensors</span><span class="params">(&amp;oneWire)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);  </span><br><span class="line">  Serial.println(<span class="string">&quot;DallasTemperature IC Control&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Start up the library</span></span><br><span class="line">  sensors.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  sensors.requestTemperatures();</span><br><span class="line">  <span class="keyword">float</span> temperatureC = sensors.getTempCByIndex(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">float</span> temperatureF = sensors.getTempFByIndex(<span class="number">0</span>);</span><br><span class="line">  Serial.print(temperatureC);</span><br><span class="line">  Serial.println(<span class="string">&quot;ºC&quot;</span>);</span><br><span class="line">  Serial.print(temperatureF);</span><br><span class="line">  Serial.println(<span class="string">&quot;ºF&quot;</span>);</span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="PLX-DAQ"><a href="#PLX-DAQ" class="headerlink" title="PLX-DAQ"></a>PLX-DAQ</h3><p>ESP32를 사용하여 센서데이터를 Excel로 보내고 실시간 그래프를 그려주는 Excel 매크로 파일이다. Parallax에서 만든 것이지만, 현재 공식적인 업데이트는 중지되어 있다. 이런 이유로 Parallax 홈페이지에서 다운로드 받을 수 있는 PLX-DAQ는 최신 버전의 Excel에서 활용이 불가능하며, ESP32에서의 활용도 불가능하다. 현재는 아두이노 포럼 등에서 최신 버전의 Excel과 ESP32 등에서 활용 가능하도록 업데이트를 진행하고 있으므로 Parallax 홈페이지가 아닌, 아두이노 포럼에서 다운로드 받도록 한다.</p><br><h4 id="download"><a href="#download" class="headerlink" title="download"></a>download</h4><p><a href="https://forum.arduino.cc/t/plx-daq-version-2-now-with-64-bit-support-and-further-new-features/420628/72#msg3251256">PLX-DAQ version 2 - now with 64 bit support! (and further new features) - Using Arduino / Interfacing w/ Software on the Computer - Arduino Forum</a>)</p><br><h4 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h4><ul><li><p><strong>void setup()</strong></p><ul><li>Excel Sheet Clear</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serial.println(&quot;CLEARDATA&quot;);</span><br></pre></td></tr></table></figure><ul><li>Label 만들기 (콤마(,)로 구분)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serial.println(&quot;LABEL,Date,Time,Millis,SensorValue&quot;);</span><br></pre></td></tr></table></figure></li><li><p><strong>void loop()</strong></p><ul><li>Data 출력</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Serial.println( (String) &quot;DATA,DATE,TIME,&quot; + millis() + &quot;,&quot; + SensorValue );</span><br><span class="line">  delay(200);</span><br></pre></td></tr></table></figure><p>(혹은, 아래와 같이 라인을 구분하는 것도 좋은 방법이다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Serial.print(&quot;DATA,DATE,TIME,&quot;);</span><br><span class="line">Serial.print(millis());</span><br><span class="line">Serial.print(&quot;,&quot;);</span><br><span class="line">Serial.print(i);</span><br><span class="line">Serial.print(&quot;,&quot;);</span><br><span class="line">Serial.println(SensorValue);</span><br></pre></td></tr></table></figure><ul><li>DATA 출력시작은 Serial.print(“DATA,”); 로 하며, DATA 출력종료는 println을 통해 개행한다.</li><li>delay를 500이상 주어야 안정적으로 데이터를 수신한다. </li></ul></li><li><p><strong>전체 sketch</strong></p><p>GPIO4 데이터를 엑셀 파일에 기록한다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">int i = 0;</span><br><span class="line">const int SensorPin = 4;</span><br><span class="line">float SensorValue;</span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">  Serial.begin(115200);</span><br><span class="line">  Serial.println(&quot;CLEARDATA&quot;);</span><br><span class="line">  Serial.println(&quot;LABEL,Date,Time,Millis,Times,SensorValue&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop() &#123;</span><br><span class="line">  SensorValue = analogRead(SensorPin)/100.00;</span><br><span class="line">  Serial.print(&quot;DATA,DATE,TIME,&quot;);</span><br><span class="line">  Serial.print(millis());</span><br><span class="line">  Serial.print(&quot;,&quot;);</span><br><span class="line">  Serial.print(i);</span><br><span class="line">  Serial.print(&quot;,&quot;);</span><br><span class="line">  Serial.println(SensorValue);</span><br><span class="line">  i++;</span><br><span class="line">  delay(5000);  // 5초마다 1번씩 측정</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><br><br><h3 id="온도센서의-온도값-기록하기"><a href="#온도센서의-온도값-기록하기" class="headerlink" title="온도센서의 온도값 기록하기"></a>온도센서의 온도값 기록하기</h3><h4 id="sketch-2"><a href="#sketch-2" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;OneWire.h&gt;</span><br><span class="line">#include &lt;DallasTemperature.h&gt;</span><br><span class="line"></span><br><span class="line">int i = 0;</span><br><span class="line">const int SensorPin = 4;</span><br><span class="line">float temperatureC;</span><br><span class="line">//float temperatureF;</span><br><span class="line"></span><br><span class="line">OneWire oneWire(SensorPin);</span><br><span class="line">DallasTemperature sensors(&amp;oneWire);</span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">  Serial.begin(115200);  </span><br><span class="line">  Serial.println(&quot;DallasTemperature IC Control&quot;);</span><br><span class="line"></span><br><span class="line">  // Start up the library</span><br><span class="line">  sensors.begin();</span><br><span class="line">  Serial.println(&quot;CLEARDATA&quot;);</span><br><span class="line">  Serial.println(&quot;LABEL,Date,Time,Millis,Times,SensorValue&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop() &#123;</span><br><span class="line">  sensors.requestTemperatures();</span><br><span class="line">  temperatureC = sensors.getTempCByIndex(0);</span><br><span class="line">  // temperatureF = sensors.getTempFByIndex(0);</span><br><span class="line"></span><br><span class="line">  Serial.print(&quot;DATA,DATE,TIME,&quot;);</span><br><span class="line">  Serial.print(millis());</span><br><span class="line">  Serial.print(&quot;,&quot;);</span><br><span class="line">  Serial.print(i);</span><br><span class="line">  Serial.print(&quot;,&quot;);</span><br><span class="line">  Serial.println(temperatureC);</span><br><span class="line">  i++;</span><br><span class="line">  delay(5000);  // 5초마다 1번씩 측정</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="PLX-DAQ-엑셀파일-실행"><a href="#PLX-DAQ-엑셀파일-실행" class="headerlink" title="PLX-DAQ 엑셀파일 실행"></a>PLX-DAQ 엑셀파일 실행</h4><ul><li><p>다운로드 받은 <a href="/attach/ESP32-PLX-DAQ-AutoGrapher-SensorValue.xlsm">PLX-DAQ 엑셀 매크로 파일</a>을 더블 클릭하여 불러들인다.</p><p><img src="/image/PLX-DAQ-01.png"></p></li><li><p>Settings에서 ESP32가 연결된 Com port와 Baud rate 설정</p><ul><li>Port: 6 (<strong>장치 관리자</strong>&gt; <strong>포트</strong>&gt; 에서 확인)</li><li>Baud: 115200 (ESP32의 경우 115200, 아두이노는 9600으로 셋팅)</li></ul></li><li><p>스케치를 업로드 한 뒤, Connect를 누르면 실시간으로 데이터를 받아서 기록함</p></li><li><p>기본적으로 셋팅되어 있는 차트가 실시간으로 그려진다. 단, 차트가 그려지지 않거나 잘못된 형태로 표현되는 경우, 엑셀 차트의 데이터 범위를 재설정하여야 한다.</p></li></ul><p><img src="/image/PLX-DAQ-02.png"></p><br><br><h3 id="Microsoft-Data-Streamer"><a href="#Microsoft-Data-Streamer" class="headerlink" title="Microsoft Data Streamer"></a>Microsoft Data Streamer</h3><p>PLX-DAQ와 비슷한 역할을 하는 Microsoft Data Streamer가 있으나, 현재 아두이노만 지원하며 ESP32에서는 데이터를 전송받지 못하는 문제가 있음.</p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">ESP32</category>
      
      
      
      <comments>http://stemwith.github.io/2021/09/16/ESP32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-DS18b20/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STEM, Solar Tracker</title>
      <link>http://stemwith.github.io/2020/11/22/STEM-Solar-Tracker/</link>
      <guid>http://stemwith.github.io/2020/11/22/STEM-Solar-Tracker/</guid>
      <pubDate>Sat, 21 Nov 2020 16:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;STEM-Solar-Tracker&quot;&gt;&lt;a href=&quot;#STEM-Solar-Tracker&quot; class=&quot;headerlink&quot; title=&quot;STEM, Solar Tracker&quot;&gt;&lt;/a&gt;STEM, Solar Tracker&lt;/h2&gt;&lt;p&gt;팬(도리</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="STEM-Solar-Tracker"><a href="#STEM-Solar-Tracker" class="headerlink" title="STEM, Solar Tracker"></a>STEM, Solar Tracker</h2><p>팬(도리도리) &amp; 틸트(끄덕끄덕)가 가능한 2축 서보모터 거치대와 2개의 서보모터를 사용하여 Solar Tracker를 만들어 보자.</p><br><h4 id="단계1-Solar-Tracker-Frame-3D-Printing"><a href="#단계1-Solar-Tracker-Frame-3D-Printing" class="headerlink" title="단계1: Solar Tracker Frame 3D Printing"></a>단계1: Solar Tracker Frame 3D Printing</h4><p><img src="/image/SolarTracker01.png"></p><p><a href="/attach/Sun_Tracker_Gnomon_B.stl">.stl 파일</a>  <a href="/attach/Sun_Tracker_Gnomon_B.gcode">.gcode 파일</a></p><p>3D 프린팅 후, 조도센서를 설치할 4곳에 1mm 드릴을 이용하여 각각 2개씩 구멍을 뚫는다 (총 8개). </p><br><br><h4 id="단계2-조도센서-조립하기"><a href="#단계2-조도센서-조립하기" class="headerlink" title="단계2: 조도센서 조립하기"></a>단계2: 조도센서 조립하기</h4><h5 id="조도센서-삽입"><a href="#조도센서-삽입" class="headerlink" title="조도센서 삽입"></a>조도센서 삽입</h5><p><img src="/image/SolarTracker02.png"></p><p>조도센서의 다리를 위에서 뚫은 구멍을 통해 넣은 뒤, </p><p><img src="/image/SolarTracker03.png"></p><p>뒤쪽에 글루건을 쏘아 고정시킨다. (조도센서는 극성을 구분할 필요가 없으므로, 서로 선이 맞닿지만 않으면 된다.)</p><p>4개의 조도 센서를 위와 같은 방식으로 고정한다.</p><br><h5 id="10kΩ-저항-연결"><a href="#10kΩ-저항-연결" class="headerlink" title="10kΩ 저항 연결"></a>10kΩ 저항 연결</h5><p>아래 그림과 같이 연결한다.</p><p><img src="/image/SolarTracker04.png"></p><ul><li>각 조도센서에 연결된 2개의 선 중 하나를 골라 10k 저항을 연결하고 한 뒤, 저항의 다른 쪽 끝을 모두 맞붙여서 GND에 연결한다.</li><li>조도센서의 다른 한쪽 끝을 모두 맞붙여서 ESP32의 3.3V에 연결한다.</li></ul><p><img src="/image/SolarTracker05.png"></p><ul><li><p>GND와 3.3로 연결되는 선들이 서로 붙지 않도록 절연테이프를 붙여준다.</p><p><img src="/image/SolarTracker06.png"></p></li><li><p>각 조도센서와 10k 저항의 사이에 ESP32에 연결할 GPIO선을 하나씩 납땜하여 연결한다.</p></li></ul><p><img src="/image/SolarTracker07.png"></p><ul><li><p>ESP32의 3.3V와 GND에 연결할 선도 함께 납땜하여 연결한다.</p><p><img src="/image/SolarTracker08.png"></p></li><li><p>선 모양을 잡아 정리한다. (위 사진에는 하트 모양처럼 양 옆으로 선이 나와 있지만, 추후 거치대 장착을 위해서는 아래 사진처럼 모두 오무려주어야 한다.)</p><p><img src="/image/SolarTracker09.png"></p></li></ul><br><br><h4 id="단계3-2축-서보모터-거치대에-장착하기"><a href="#단계3-2축-서보모터-거치대에-장착하기" class="headerlink" title="단계3: 2축 서보모터 거치대에 장착하기"></a>단계3: 2축 서보모터 거치대에 장착하기</h4><p><img src="/image/SolarTracker10.png"></p><br><h5 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h5><p><img src="/image/SolarTracker11.png"></p><br><h5 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/************ ESP32 SKETCH FOR SOLAR TRACKER ***************************************</span></span><br><span class="line"><span class="comment">   Author: K. Jun, Lee</span></span><br><span class="line"><span class="comment">   Blog: https://stemwith.github.io         2020-12-04</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">// Use 3.3V for LDR sensor VCC</span></span><br><span class="line"><span class="comment">// Edit your sensor sensitivity: tolh, tolv</span></span><br><span class="line"><span class="comment">// Edit your sensor GPIO pin: ldr_lt, ldr_rt, ldr_ld, ldr_rd</span></span><br><span class="line"><span class="comment">// Edit initial sensor calibration value: avlt_cali, avrt_cali, avld_cali, avrd_cali </span></span><br><span class="line"><span class="comment">***********************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for horizontal Servo PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin_hori = <span class="number">19</span>;       <span class="comment">// corresponds to GPIO 19</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel_hori = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq_hori = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution_hori = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for vertical Servo PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin_vert = <span class="number">18</span>;       <span class="comment">// corresponds to GPIO 18</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel_vert = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq_vert = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution_vert = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> deg_hori = <span class="number">90</span>; <span class="comment">// default horizon</span></span><br><span class="line"><span class="keyword">int</span> deg_vert = <span class="number">45</span>; <span class="comment">// default vertical</span></span><br><span class="line"><span class="keyword">int</span> duty;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LDR sensor pin</span></span><br><span class="line"><span class="keyword">int</span> ldr_lt = <span class="number">32</span>; <span class="comment">// Left_Top LDR pin</span></span><br><span class="line"><span class="keyword">int</span> ldr_rt = <span class="number">33</span>; <span class="comment">// Right_Top LDR pin</span></span><br><span class="line"><span class="keyword">int</span> ldr_ld = <span class="number">34</span>; <span class="comment">// Left_Down LDR pin</span></span><br><span class="line"><span class="keyword">int</span> ldr_rd = <span class="number">35</span>; <span class="comment">// Right_Down LDR pin</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// LDR sensor value</span></span><br><span class="line"><span class="keyword">int</span> lt[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> rt[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> ld[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> rd[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Sensitivity (tolerance)</span></span><br><span class="line"><span class="keyword">int</span> tolh = <span class="number">150</span>;              <span class="comment">// horizon tolerance</span></span><br><span class="line"><span class="keyword">int</span> tolv = <span class="number">150</span>;              <span class="comment">// vertical tolerance</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// initial sensor correction value </span></span><br><span class="line"><span class="keyword">int</span> avlt_cali = <span class="number">0</span>;       <span class="comment">// 초기값 보정</span></span><br><span class="line"><span class="keyword">int</span> avrt_cali = <span class="number">350</span>;     <span class="comment">// (센서에 밝은 빛을 직접 가하여 최대값을 측정한 뒤 편차를 사용)</span></span><br><span class="line"><span class="keyword">int</span> avld_cali = <span class="number">330</span>;</span><br><span class="line"><span class="keyword">int</span> avrd_cali = <span class="number">430</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Servo PWM Setup</span></span><br><span class="line">  ledcSetup(ledChannel_hori, freq_hori, resolution_hori);  <span class="comment">// PWM CH1, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  ledcAttachPin(ledPin_hori, ledChannel_hori);             <span class="comment">// PWM CH1을 GPIO 19번으로 출력</span></span><br><span class="line">  ledcSetup(ledChannel_vert, freq_vert, resolution_vert);  <span class="comment">// PWM CH0, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  ledcAttachPin(ledPin_vert, ledChannel_vert);             <span class="comment">// PWM CH0을 GPIO 19번으로 출력</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> avlt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> avrt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> avld = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> avrd = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">    lt[i] = analogRead(ldr_lt); <span class="comment">// Left Top</span></span><br><span class="line">    avlt = avlt + lt[i] - avlt_cali;  </span><br><span class="line">    rt[i] = analogRead(ldr_rt); <span class="comment">// Right Top</span></span><br><span class="line">    avrt = avrt + rt[i] - avrt_cali;</span><br><span class="line">    ld[i] = analogRead(ldr_ld); <span class="comment">// Left Down</span></span><br><span class="line">    avld = avld + ld[i] - avld_cali;</span><br><span class="line">    rd[i] = analogRead(ldr_rd); <span class="comment">// Right Down</span></span><br><span class="line">    avrd = avrd + rd[i] - avrd_cali;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  avlt = avlt / <span class="number">10</span>;</span><br><span class="line">  avrt = avrt / <span class="number">10</span>;</span><br><span class="line">  avld = avld / <span class="number">10</span>;</span><br><span class="line">  avrd = avrd / <span class="number">10</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> avt = (avlt + avrt) / <span class="number">2</span>;    <span class="comment">// Average of Top value</span></span><br><span class="line">  <span class="keyword">int</span> avd = (avld + avrd) / <span class="number">2</span>;    <span class="comment">// Average of Down value</span></span><br><span class="line">  <span class="keyword">int</span> avl = (avlt + avld) / <span class="number">2</span>;    <span class="comment">// Average of Left value</span></span><br><span class="line">  <span class="keyword">int</span> avr = (avrt + avrd) / <span class="number">2</span>;    <span class="comment">// Average of Right value.</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> dvert = avt - avd;      <span class="comment">// Difference Top, Down</span></span><br><span class="line">  <span class="keyword">int</span> dhoriz = avl - avr;     <span class="comment">// Difference Left, Right</span></span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;LT\tRT\tLD\tRD\tav.T\tav.D\tav.L\tav.R\td.ver\td.hor&quot;</span>);</span><br><span class="line">  Serial.print(avlt);Serial.print(<span class="string">&quot;\t&quot;</span>);Serial.print(avrt);Serial.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  Serial.print(avld);Serial.print(<span class="string">&quot;\t&quot;</span>);Serial.print(avrd);Serial.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  Serial.print(avt);Serial.print(<span class="string">&quot;\t&quot;</span>);Serial.print(avd);Serial.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  Serial.print(avl);Serial.print(<span class="string">&quot;\t&quot;</span>);Serial.print(avr);Serial.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  Serial.print(dvert);Serial.print(<span class="string">&quot;\t&quot;</span>);Serial.print(dhoriz);Serial.println(<span class="string">&quot;\t\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">abs</span>(dvert) &gt; tolv) &#123;      <span class="comment">// sensitivity</span></span><br><span class="line">    <span class="keyword">if</span> (avt &lt; avd) &#123;            <span class="comment">// 아래쪽 센서가 더 밝으면</span></span><br><span class="line">      deg_vert = ++deg_vert;</span><br><span class="line">      <span class="keyword">if</span> (deg_vert &gt; <span class="number">90</span>) &#123;</span><br><span class="line">        deg_vert = <span class="number">90</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (avt &gt; avd) &#123;       <span class="comment">// 윗쪽 센서가 더 밝으면,</span></span><br><span class="line">      deg_vert = --deg_vert;</span><br><span class="line">      <span class="keyword">if</span> (deg_vert &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        deg_vert = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    servoWrite(ledChannel_vert, deg_vert);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">abs</span>(dhoriz) &gt; tolh) &#123;     <span class="comment">// sensitivity</span></span><br><span class="line">    <span class="keyword">if</span> (avl &gt; avr) &#123;            <span class="comment">// 왼쪽 센서가 더 밝으면</span></span><br><span class="line">      deg_hori = --deg_hori;</span><br><span class="line">      <span class="keyword">if</span> (deg_hori &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        deg_hori = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (avl &lt; avr) &#123;       <span class="comment">// 오른쪽 센서가 더 밝으면</span></span><br><span class="line">      deg_hori = ++deg_hori;</span><br><span class="line">      <span class="keyword">if</span> (deg_hori &gt; <span class="number">180</span>) &#123;</span><br><span class="line">        deg_hori = <span class="number">180</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (avl == avr) &#123;</span><br><span class="line">      <span class="comment">// nothing</span></span><br><span class="line">    &#125;</span><br><span class="line">    servoWrite(ledChannel_hori, deg_hori);</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// deg는 0~180도 까지</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">servoWrite</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> deg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    duty = <span class="built_in">map</span>(deg, <span class="number">0</span>, <span class="number">180</span>, <span class="number">1638</span>, <span class="number">8192</span>);</span><br><span class="line">    ledcWrite(ch, duty);</span><br><span class="line">    delay(<span class="number">50</span>);                  <span class="comment">// delay를 줄이면 180도가 완전히 돌지 않음 (최소값 15)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="태양광-패널의-전압-측정하기"><a href="#태양광-패널의-전압-측정하기" class="headerlink" title="태양광 패널의 전압 측정하기"></a>태양광 패널의 전압 측정하기</h3><p>MPPT모듈을 만들기 전, 태양광패널에서 만들어지는 전기의 전압을 측정해본다. ESP32의 경우 내부전압 3.3V, 12bit ADC이므로</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ESP32 3.3V -&gt; 3.21 , Arduino 5.0V -&gt; 4.89</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> referenceVolts = <span class="number">3.21</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ESP32 12bit_ADC (4095.0), Arduino 10bit_ADC (1023.0)</span></span><br><span class="line"><span class="keyword">float</span> volts = (referenceVolts/<span class="number">4095.0</span>)*val*<span class="number">1000</span>;</span><br></pre></td></tr></table></figure><p>를 사용한다.</p><br><h4 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/SolarMPPT01.png"></p><br><h4 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ESP32 3.3V -&gt; 3.21 , Arduino 5.0V -&gt; 4.89</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> referenceVolts = <span class="number">3.21</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">float</span> volts_sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> val = analogRead(<span class="number">32</span>);</span><br><span class="line">      </span><br><span class="line">    <span class="comment">// ESP32 12bit_ADC (4095.0), Arduino 10bit_ADC (1023.0)</span></span><br><span class="line">    <span class="keyword">float</span> volts = (referenceVolts/<span class="number">4095.0</span>)*val*<span class="number">1000</span>; </span><br><span class="line">    volts_sum = volts_sum + volts;</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  volts_sum = volts_sum / <span class="number">10</span>;</span><br><span class="line">  Serial.print(<span class="string">&quot;V = &quot;</span>);</span><br><span class="line">  Serial.print(volts_sum);</span><br><span class="line">  Serial.println(<span class="string">&quot; mV&quot;</span>);</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/science/">science</category>
      
      
      
      <comments>http://stemwith.github.io/2020/11/22/STEM-Solar-Tracker/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>esp32 서보모터 PWM제어</title>
      <link>http://stemwith.github.io/2020/10/19/ESP32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</link>
      <guid>http://stemwith.github.io/2020/10/19/ESP32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</guid>
      <pubDate>Mon, 19 Oct 2020 14:41:02 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;SG90-MG90S-MG966R-서보모터&quot;&gt;&lt;a href=&quot;#SG90-MG90S-MG966R-서보모터&quot; class=&quot;headerlink&quot; title=&quot;SG90, MG90S,  MG966R 서보모터&quot;&gt;&lt;/a&gt;SG90, MG90S,  MG9</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="SG90-MG90S-MG966R-서보모터"><a href="#SG90-MG90S-MG966R-서보모터" class="headerlink" title="SG90, MG90S,  MG966R 서보모터"></a>SG90, MG90S,  MG966R 서보모터</h3><h4 id="datasheet"><a href="#datasheet" class="headerlink" title="datasheet"></a>datasheet</h4><p><img src="/image/SG90_Datasheet.jpg"></p><br><h4 id="사용법"><a href="#사용법" class="headerlink" title="사용법"></a>사용법</h4><ol><li><p>ESP32는 16개의 PWM채널이 있으므로, 최대 16개의 서보모터를 동시에 제어할 수 있다.</p></li><li><p>서보모터 데이터 시트의 스펙상으로는…</p><ul><li><p>대부분의 서보모터(<strong>SG90, MG90S, MG966R</strong> 등 포함)는 위의 그림처럼 20ms가 1주기가 되므로, PWM frequency를 50Hz로 설정한다.</p></li><li><p>20ms가 1주기이고, HIGH 펄스가 2ms 지속될 때 180º 회전을 한다.</p></li><li><p>그러므로, 전체 펄스 폭의 1/10만큼 HIGH 펄스가 주어지면 180º 회전을 한다.</p></li><li><p>Resolution이 16비트라면 65535의 1/10에 해당하는 <del>6554</del>의 값이 duty값으로 주어지면 서보모터는 180º 회전을 한다.</p></li><li><p><del>데이터 시트에 나온 스펙에 따라서, 16비트 해상도에서 duty값에 따른 회전 각도</del></p><ul><li><p><del>PWM 5% : 3277 → 0º</del></p></li><li><p><del>PWM 7.5% : 4915 → 90º</del></p></li><li><p><del>PWM 10% : 6554 → 180º</del></p><p>라고 생각했으나, 실제로는 이와 달랐다.</p></li></ul></li></ul></li><li><p><strong>MG90S</strong></p><ul><li><p>16비트 해상도(0~65535)에서 duty값에 따른 회전 각도는</p><ul><li>PWM 2.5% : 1639 → 0º</li><li>PWM 7.5% : 4915 → 90º</li><li>PWM 12.5% : 8191 → 180º</li></ul></li><li><p>즉, 각도에 따른 PWM값은 다음과 같이 지정한다.<br>$$<br>PWM = 2^{16} \times 0.1 \times \frac{angle}{180} + 2^{16} \times 0.025 = 2^{16} \times 0.1 \times (\frac{angle}{180} + 0.25)<br>$$</p></li><li><p>그리고, 이 서보모터 스펙상 180도 회전을 하지만 PWM 값을 조절하면 최대 190도 정도까지는 회전한다. </p></li><li><p>그러므로, map 함수를 사용하여 다음과 같이 각도를 조절한다.</p><p>duty = map(deg, 0, 180, 1638, 8191);</p></li><li><p>이에 따라, 12비트 해상도(0~4095)에서 duty값에 따른 회전 각도는</p><ul><li>PWM 2.5% : 103 → 0º</li><li>PWM 7.5%  : 307 → 90º</li><li>PWM 12.5% : 511 → 180º</li></ul></li></ul></li><li><p>MG996R</p><p>duty = map(deg, 0, 180, 2720, 8191);</p><p>가 가장 적당한 값을 나타내었다. (4.15% ~ 12.5%) (이유는 잘 모르겠음)</p></li><li><p>이런 내용을 종합해 볼때, <strong>기기 데이터시트의 스펙과는 관계없이, 테스트를 통해 경험적으로 값을 찾아야 하는 듯…</strong></p></li><li><p>delay( );</p><ul><li><p>서보 회전 속도를 조절하며, 숫자가 작을 수록 빠르게 회전한다.</p></li><li><p>이동하는 각도만큼 돌아갈 수 있는 충분한 시간을 주어야한다.</p></li><li><p>(전류가 약하면) delay( ) 값이 너무 작을 경우 원하는 각도의 회전을 완성하지 못할 수도 있다.</p></li><li><p>전류가 충분하면 delay값을 줄여도 됨.</p></li></ul></li></ol><br><br><h3 id="Servo-라이브러리를-이용하지-않는-경우"><a href="#Servo-라이브러리를-이용하지-않는-경우" class="headerlink" title="Servo 라이브러리를 이용하지 않는 경우"></a>Servo 라이브러리를 이용하지 않는 경우</h3><p>일반적으로 아두이노에서 서보모터를 사용하는 경우 아두이노 IDE에 기본적으로 포함되어 있는 &lt;Servo.h&gt; 라이브러리를 사용하면 되지만 이 라이브러리는 ESP32에서 사용할 수 없다. 그러므로 ESP32에 맞는 별도의 Servo.h 라이브러리를 다운로드 받아 사용해야하는 불편함이 있다. 또한 ESP32servo와 같은 ESP32용 라이브러리를 사용할 경우, 라이브러리에 따라 ledcWrite를 사용할 수 없는 경우도 있다.</p><p>그러므로, 여기서는 라이브러리를 사용하지 않고 PWM을 사용하여 ESP32로 MG90 서보모터를 제어해보고자 한다. </p><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/SG90.png"></p><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin = <span class="number">15</span>;  <span class="comment">// corresponds to GPIO 15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// setting PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> deg, duty;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// PWM Setup</span></span><br><span class="line">  ledcSetup(ledChannel, freq, resolution);  <span class="comment">// PWM CH0, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  ledcAttachPin(ledPin, ledChannel);        <span class="comment">// PWM CH0을 GPIO 15번으로 출력</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (deg = <span class="number">0</span>;deg &lt;= <span class="number">180</span>; deg++) &#123;</span><br><span class="line">  servoWrite(ledChannel, deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (deg = <span class="number">180</span>;deg &gt;= <span class="number">0</span>; deg--) &#123;</span><br><span class="line">  servoWrite(ledChannel, deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// deg는 0~180도 까지</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">servoWrite</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> deg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    duty = <span class="built_in">map</span>(deg, <span class="number">0</span>, <span class="number">180</span>, <span class="number">1638</span>, <span class="number">8192</span>);</span><br><span class="line">    ledcWrite(ch, duty);</span><br><span class="line">    delay(<span class="number">15</span>);                             <span class="comment">// delay를 줄이면 180도가 완전히 돌지 않음</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="sketch-시리얼-모니터에-입력한-문자로-서보모터-회전시키기"><a href="#sketch-시리얼-모니터에-입력한-문자로-서보모터-회전시키기" class="headerlink" title="sketch: 시리얼 모니터에 입력한 문자로 서보모터 회전시키기"></a>sketch: 시리얼 모니터에 입력한 문자로 서보모터 회전시키기</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin = <span class="number">15</span>;  <span class="comment">// corresponds to GPIO 15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// setting PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> deg = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">int</span> duty;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// PWM Setup</span></span><br><span class="line">  ledcSetup(ledChannel, freq, resolution);  <span class="comment">// PWM CH0, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  ledcAttachPin(ledPin, ledChannel);        <span class="comment">// PWM CH0을 GPIO 15번으로 출력</span></span><br><span class="line"></span><br><span class="line">  servoWrite(ledChannel, deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(Serial.available() &gt; <span class="number">0</span>) </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">char</span> flag=Serial.read();</span><br><span class="line">    delay(<span class="number">2</span>);</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="string">&#x27;l&#x27;</span>) &#123;</span><br><span class="line">        deg = deg - <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">if</span>(deg &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            deg = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="string">&#x27;r&#x27;</span>) &#123;</span><br><span class="line">        deg = deg + <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">if</span>(deg &gt; <span class="number">180</span>) &#123;</span><br><span class="line">            deg = <span class="number">180</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;      </span><br><span class="line">  servoWrite(ledChannel, deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// deg는 0~180도 까지</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">servoWrite</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> deg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    duty = <span class="built_in">map</span>(deg, <span class="number">0</span>, <span class="number">180</span>, <span class="number">1638</span>, <span class="number">8192</span>);</span><br><span class="line">    ledcWrite(ch, duty);</span><br><span class="line">    delay(<span class="number">15</span>);                             <span class="comment">// delay를 줄이면 180도가 완전히 돌지 않음</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="2축-서보모터-거치대-조립-및-테스트"><a href="#2축-서보모터-거치대-조립-및-테스트" class="headerlink" title="2축 서보모터 거치대 조립 및 테스트"></a>2축 서보모터 거치대 조립 및 테스트</h3><h4 id="거치대-조립"><a href="#거치대-조립" class="headerlink" title="거치대 조립"></a>거치대 조립</h4><p>첫번째 단계로 서보모터 거치대를 조립하고 서보모터 2개를 장착한다.</p><p>SG90 서보 2개를 준비하고</p><img src="/image/servo-01.png" style="zoom:50%;" /><p>니퍼로 아래 빨간 동그라미로 표시한 부분의 크기에 맞추어, <strong>서보모터 날개를 잘라낸 뒤</strong></p><p><img src="/image/servo-04.png"></p><p>아래 형태대로 조립한다.</p><p><img src="/image/servo-02.png"></p><p><img src="/image/servo-03.png"></p><p>날개를 나사로 조인 부분에 순간접착제를 살짝 뿌려, 완전히 고정시킨다. (단, 서보모터의 회전축 부분에는 접착제가 뭍지 않도록 주의한다.)</p><br><h4 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/servo-05.png"></p><br><h4 id="sketch-두개의-서보모터를-180도-회전시키기"><a href="#sketch-두개의-서보모터를-180도-회전시키기" class="headerlink" title="sketch: 두개의 서보모터를 180도 회전시키기"></a>sketch: 두개의 서보모터를 180도 회전시키기</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for horizontal Servo PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin_hori = <span class="number">15</span>;  <span class="comment">// corresponds to GPIO 15</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel_hori = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq_hori = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution_hori = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for vertical Servo PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin_vert = <span class="number">2</span>;  <span class="comment">// corresponds to GPIO 2</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel_vert = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq_vert = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution_vert = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> deg_hori, deg_vert, duty;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// PWM Setup</span></span><br><span class="line">  <span class="built_in">ledcSetup</span>(ledChannel_hori, freq_hori, resolution_hori);  <span class="comment">// PWM CH1, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(ledPin_hori, ledChannel_hori);             <span class="comment">// PWM CH1을 GPIO 19번으로 출력</span></span><br><span class="line">  <span class="built_in">ledcSetup</span>(ledChannel_vert, freq_vert, resolution_vert);  <span class="comment">// PWM CH0, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(ledPin_vert, ledChannel_vert);             <span class="comment">// PWM CH0을 GPIO 18번으로 출력</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (deg_hori = <span class="number">0</span>;deg_hori &lt;= <span class="number">180</span>; deg_hori++) &#123;</span><br><span class="line">  <span class="built_in">servoWrite</span>(ledChannel_hori, deg_hori);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (deg_vert = <span class="number">0</span>;deg_vert &lt;= <span class="number">180</span>; deg_vert++) &#123;</span><br><span class="line">  <span class="built_in">servoWrite</span>(ledChannel_vert, deg_vert);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (deg_hori = <span class="number">180</span>;deg_hori &gt;= <span class="number">0</span>; deg_hori--) &#123;</span><br><span class="line">  <span class="built_in">servoWrite</span>(ledChannel_hori, deg_hori);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (deg_vert = <span class="number">180</span>;deg_vert &gt;= <span class="number">0</span>; deg_vert--) &#123;</span><br><span class="line">  <span class="built_in">servoWrite</span>(ledChannel_vert, deg_vert);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// deg는 0~180도 까지</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">servoWrite</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> deg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    duty = <span class="built_in">map</span>(deg, <span class="number">0</span>, <span class="number">180</span>, <span class="number">1638</span>, <span class="number">8192</span>);</span><br><span class="line">    <span class="built_in">ledcWrite</span>(ch, duty);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">15</span>);                             <span class="comment">// delay를 줄이면 180도가 완전히 돌지 않음</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="Joystick-1개를-사용하여-2개의-서보모터-제어하기"><a href="#Joystick-1개를-사용하여-2개의-서보모터-제어하기" class="headerlink" title="Joystick 1개를 사용하여 2개의 서보모터 제어하기"></a>Joystick 1개를 사용하여 2개의 서보모터 제어하기</h3><h4 id="schematic-2"><a href="#schematic-2" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/ESP32_Joystick_2Servo.png"></p><nr><h4 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for horizontal Servo PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin_hori = <span class="number">15</span>;       <span class="comment">// corresponds to GPIO 15</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel_hori = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq_hori = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution_hori = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for vertical Servo PWM properties</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledPin_vert = <span class="number">2</span>;       <span class="comment">// corresponds to GPIO 2</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ledChannel_vert = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> freq_vert = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> resolution_vert = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Jstick_LR_pin = <span class="number">25</span>;           <span class="comment">// Left_Right GPIO25</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Jstick_FB_pin = <span class="number">32</span>;           <span class="comment">// Forward_Backward GPIO32</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Jstick_LR, Jstick_FB, deg_hori, deg_vert, duty;          </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Servo PWM Setup</span></span><br><span class="line">  <span class="built_in">ledcSetup</span>(ledChannel_hori, freq_hori, resolution_hori);  <span class="comment">// PWM CH1, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(ledPin_hori, ledChannel_hori);             <span class="comment">// PWM CH1을 GPIO 19번으로 출력</span></span><br><span class="line">  <span class="built_in">ledcSetup</span>(ledChannel_vert, freq_vert, resolution_vert);  <span class="comment">// PWM CH0, Frequncy 50 Hz, 16bit resolution</span></span><br><span class="line">  <span class="built_in">ledcAttachPin</span>(ledPin_vert, ledChannel_vert);             <span class="comment">// PWM CH0을 GPIO 18번으로 출력</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">PrintValue</span>();</span><br><span class="line">    </span><br><span class="line">    Jstick_LR = <span class="built_in">analogRead</span>(Jstick_LR_pin);          </span><br><span class="line">    deg_hori = <span class="built_in">map</span>(Jstick_LR, <span class="number">0</span>, <span class="number">4095</span>, <span class="number">0</span>, <span class="number">180</span>);     </span><br><span class="line">    <span class="built_in">servoWrite</span>(ledChannel_hori, deg_hori);</span><br><span class="line">                             </span><br><span class="line">    Jstick_UD = <span class="built_in">analogRead</span>(Jstick_UD_pin);           </span><br><span class="line">    deg_vert = <span class="built_in">map</span>(Jstick_FB, <span class="number">0</span>, <span class="number">4095</span>, <span class="number">0</span>, <span class="number">180</span>);     </span><br><span class="line">    <span class="built_in">servoWrite</span>(ledChannel_vert, deg_vert); </span><br><span class="line">                              </span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">15</span>);                                  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// deg는 0~180도 까지</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">servoWrite</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> deg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    duty = <span class="built_in">map</span>(deg, <span class="number">0</span>, <span class="number">180</span>, <span class="number">1638</span>, <span class="number">8192</span>);</span><br><span class="line">    <span class="built_in">ledcWrite</span>(ch, duty);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">15</span>);                             <span class="comment">// delay를 줄이면 180도가 완전히 돌지 않음 (최소값 15)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintValue</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="built_in">analogRead</span>(Jstick_LR));</span><br><span class="line">    Serial.<span class="built_in">print</span> (<span class="string">&quot; - &quot;</span>); </span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="built_in">analogRead</span>(Jstick_FB));</span><br><span class="line">    Serial.<span class="built_in">println</span> (<span class="string">&quot; Joystick Value&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="ESP32Servo-라이브러리-사용시"><a href="#ESP32Servo-라이브러리-사용시" class="headerlink" title="ESP32Servo 라이브러리 사용시"></a>ESP32Servo 라이브러리 사용시</h3><h4 id="library-for-ESP32"><a href="#library-for-ESP32" class="headerlink" title="library for ESP32"></a>library for ESP32</h4><p><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong> 에서 “<strong>esp32servo</strong>“ (by Kevin Harrington) 검색 후 설치</p><p><img src="/image/esp32-nRF24L01-servo-01.png"></p><br><h4 id="schematic-3"><a href="#schematic-3" class="headerlink" title="schematic"></a>schematic</h4><p><img src="/image/servo-05.png"></p><br><h4 id="sketch-2"><a href="#sketch-2" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP32Servo.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Servo servo_x;  <span class="comment">// create servo object to control a servo</span></span><br><span class="line">Servo servo_y;  <span class="comment">// 16 servo objects can be created on the ESP32</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;    <span class="comment">// variable to store the servo position</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Recommended PWM GPIO pins on the ESP32 include 2,4,12-19,21-23,25-27,32-33 </span></span><br><span class="line"><span class="keyword">int</span> servo_xPin = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> servo_yPin = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Allow allocation of all timers</span></span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">0</span>);</span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">1</span>);</span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">2</span>);</span><br><span class="line">  ESP32PWM::<span class="built_in">allocateTimer</span>(<span class="number">3</span>);</span><br><span class="line">  servo_x.<span class="built_in">setPeriodHertz</span>(<span class="number">50</span>);    <span class="comment">// standard 50 hz servo</span></span><br><span class="line">  servo_y.<span class="built_in">setPeriodHertz</span>(<span class="number">50</span>);</span><br><span class="line">  servo_x.<span class="built_in">attach</span>(servo_xPin, <span class="number">500</span>, <span class="number">2500</span>); <span class="comment">// attaches the servo on pin 25 &amp; 32 to the servo object</span></span><br><span class="line">  servo_y.<span class="built_in">attach</span>(servo_yPin, <span class="number">500</span>, <span class="number">2500</span>);</span><br><span class="line">  <span class="comment">// using default min/max of 1000us and 2000us</span></span><br><span class="line">  <span class="comment">// different servos may require different min/max settings</span></span><br><span class="line">  <span class="comment">// for an accurate 0 to 180 sweep</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (pos = <span class="number">0</span>; pos &lt;= <span class="number">180</span>; pos += <span class="number">1</span>) &#123; <span class="comment">// goes from 0 degrees to 180 degrees</span></span><br><span class="line">    <span class="comment">// in steps of 1 degree</span></span><br><span class="line">    servo_x.<span class="built_in">write</span>(pos);    <span class="comment">// tell servo to go to position in variable &#x27;pos&#x27;</span></span><br><span class="line">    servo_y.<span class="built_in">write</span>(<span class="number">180</span>-pos);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">5</span>);             <span class="comment">// waits 5ms for the servo to reach the position</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (pos = <span class="number">180</span>; pos &gt;= <span class="number">0</span>; pos -= <span class="number">1</span>) &#123; <span class="comment">// goes from 180 degrees to 0 degrees</span></span><br><span class="line">    servo_x.<span class="built_in">write</span>(pos);    <span class="comment">// tell servo to go to position in variable &#x27;pos&#x27;</span></span><br><span class="line">    servo_y.<span class="built_in">write</span>(<span class="number">180</span>-pos);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">5</span>);             <span class="comment">// waits 5ms for the servo to reach the position</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">esp32</category>
      
      
      
      <comments>http://stemwith.github.io/2020/10/19/ESP32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32, 중력 가속도 측정</title>
      <link>http://stemwith.github.io/2020/10/06/STEM-%EC%A4%91%EB%A0%A5-%EA%B0%80%EC%86%8D%EB%8F%84-%EC%B8%A1%EC%A0%95/</link>
      <guid>http://stemwith.github.io/2020/10/06/STEM-%EC%A4%91%EB%A0%A5-%EA%B0%80%EC%86%8D%EB%8F%84-%EC%B8%A1%EC%A0%95/</guid>
      <pubDate>Tue, 06 Oct 2020 08:57:00 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;중력-Gravitational-Force&quot;&gt;&lt;a href=&quot;#중력-Gravitational-Force&quot; class=&quot;headerlink&quot; title=&quot;중력(Gravitational Force)&quot;&gt;&lt;/a&gt;중력(Gravitational Fo</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="중력-Gravitational-Force"><a href="#중력-Gravitational-Force" class="headerlink" title="중력(Gravitational Force)"></a>중력(Gravitational Force)</h3><p>뉴턴은 달의 운동과 케플러의 법칙을 통해, 달과 지구 사이에 작용하는 힘은 지구의 질량과 달의 질량의 곱에 비례하고 거리의 제곱에 반비례한다는 만유인력의 법칙을 밝혔다.<br>$$<br>F = G \frac{Mm}{r^2} = m_i a = mg<br>$$</p><p>$$<br>지구의<del>질량</del>M=5.072 \times 10^{24}~kg<br>$$</p><p>$$<br>지구<del>반지름</del>r = 6371~km<br>$$</p><p>만유인력 상수값은 다음과 같다. (캐번디시에 의해 측정된 G값은 6.674)<br>$$<br>G = 6.67259 \times 10^{-11}~N \cdot m^2 /kg^2<br>$$</p><p>만유인력이 지상의 물체에 작용되는 경우, 이때 작용하는 힘을 중력이라고 한다. </p><br><h4 id="중력-가속도-Gravitational-Acceleration"><a href="#중력-가속도-Gravitational-Acceleration" class="headerlink" title="중력 가속도(Gravitational Acceleration)"></a>중력 가속도(Gravitational Acceleration)</h4><p>위 식에서 관성 질량(m_i)과 중력 질량(m)이 같다는 등가원리를 적용하면 중력 가속도는 작은 물체의 질량 m에 무관하게 된다.<br>$$<br>a = g = G \frac{M}{r^2}<br>$$</p><p>지구의 질량 M과 지구 반지름 R은 지표면의 물체에 비해 매우 크고, 거의 구에 가까우므로, 위 식을 사용하여 지구 표면에서의 중력 가속도 g 값을 구할 수 있다.<br>$$<br>g = 9.80665~m/s^2<br>$$</p><br><h4 id="등가속도-직선-운동"><a href="#등가속도-직선-운동" class="headerlink" title="등가속도 직선 운동"></a>등가속도 직선 운동</h4><p>가속도의 크기와 방향이 일정한 직선 운동으로, 속도가 일정하게 증가하거나 감속하는 직선 운동을 의미한다. 자유낙하의 경우 초기속도가 0인 물체를 중력장에 낙하시킬 때 중력가속도를 받으며 낙하하는 물체의 운동이며, 공기의 저항이 없다고 가정할 경우 등가속도 직선 운동이 된다.</p><p>등가속도 직선 운동과 관련된 공식은 다음과 같다.<br>$$<br>v = v_0 + at~~~\cdots~~~①<br>$$</p><p>$$<br>s=v_0t + \frac{1}{2}at^2~~~\cdots~~~②<br>$$</p><p>$$<br>2as = v^2 - v_0^2~~~\cdots~~~③<br>$$</p><p>이 3가지 기본 공식을 통해 다양한 형태의 공식을 유도할 수도 있다.</p><p>①, ②식을 조합하면<br>$$<br>s = \frac{1}{2}(v_0+v)t~~~\cdots~~~④<br>$$<br>③식에서 초기속도(v_0)가 0인 경우<br>$$<br>v=\sqrt{2as}~~~\cdots~~~⑤<br>$$<br>②식을 변형하면<br>$$<br>a=\frac{2(s-v_0t)}{t^2}~~~\cdots~~~⑥<br>$$<br>③식을 변형하면<br>$$<br>a=\frac{v^2-v_0^2}{2s}~~~\cdots~~~⑦<br>$$<br><br></p><br><h3 id="자유낙하를-이용한-중력-가속도-측정-실험"><a href="#자유낙하를-이용한-중력-가속도-측정-실험" class="headerlink" title="자유낙하를 이용한 중력 가속도 측정 실험"></a>자유낙하를 이용한 중력 가속도 측정 실험</h3><ul><li><p>실험 목적: 중력 가속도를 측정하는 방법은 여러 가지가 있지만, 본 실험은 자유 낙하를 통해 중력 가속도를 측정하고자 한다. 자유낙하 운동이 중력을 가장 쉽게 표현할 수 있는 운동이라 판단하였기 때문이다. 정밀한 값의 측정보다는, 자유낙하 운동을 통해 중력 가속도를 이해하고 이를 실험을 통해 확인하는 것이 이번 실험의 목적이다. 보다 정밀한 중력 가속도를 측정하기 위해서는 진자의 운동 주기를 이용하는 것이 좋다. </p></li><li><p>이번 실험에서는 2m 길이의 파이프에 25cm 간격으로 센서를 배치하고, 낙하하는 물체가 센서를 지날때마다 시간을 기록할 것이다. 변위와 시간을 측정할 수 있으므로 초기속도(v_0)값만 알면 ⑥을 이용하여 중력 가속도를 계산할 수 있다.</p></li></ul><ul><li>⑥을 단순화 시키기 위해서는 <strong>초기 속도가 0이 되도록 하기 위해 첫번째 센서를 파이프의 입구(최상단)에 배치</strong>하는 것이다. 단, 이렇게 할 경우 실험 과정에서 낙하시킬 물체를 놓을 때 물체를 잡고 있는 손가락의 영향을 제거하기 어려우며, 이 문제에 기인하는 오차는 큰 편이라고 할 수 있다.</li></ul><ul><li>위 문제 해결을 위해 첫번째 센서를 최상단으로부터 12.5cm 정도 아래로 내려 설치한다. 이를 통해 센서가 측정하는 시간은 온전히 자유낙하하는 상태에서 측정되므로 비교적 정확하게 측정할 수 있다. 문제는 <strong>첫번째 센서 위치에서의 초기 속도(v_0)값</strong>이 0이 아니므로 이 값을 별도로 계산하여야 한다.</li></ul><ul><li>이 값은 ③으로부터 계산할 수 있는데, </li></ul><p>$$<br>2as = v^2 - v_0^2~~~\cdots~~~③<br>$$</p><ul><li>파이프 입구에서의 <strong>초기 속도(v_0)를 0으로 가정</strong>하면, 12.5cm만큼 낙하하여 첫번째 센서에 반응할 때의 속도(v)값은 ⑤로 부터 구할 수 있다.</li></ul><p>$$<br>v=\sqrt{2as} = \sqrt{2\times9.80665\times0.125}=1.5658~m/s<br>$$</p><ul><li>이 값이 12.5cm 위치에 첫번째 센서를 설치한 실험기구를 사용하는 경우, <strong>⑥에서의 초기 속도(v_0)값</strong>이 된다. 파이프에 설치한 센서의 번호를 n이라고 하면, ⑥은 다음과 같이 쓸 수 있다.</li></ul><p>$$<br>a_n=\frac{2(s_n-1.5658t_n)}{t_n^2}<br>$$</p><ul><li>s는 <strong>첫번째 센서 ~ 각 센서가 위치한 곳</strong>까지 물체가 이동한 변위이며, 8개의 센서를 사용하여 낙하하는 물체가 센서와 반응하는 시간(t_n)을 측정하고, 이를 ⑥에 대입하면 가속도(a_n)를 계산할 수 있다. 각 지점에서의 가속도를 평균계산하여 중력가속도를 구한다.</li></ul><table><thead><tr><th>센서</th><th>입구 ~ 0</th><th>0 ~ 1</th><th>0 ~ 2</th><th>0 ~ 3</th><th>0 ~ 4</th><th>0 ~ 5</th><th>0 ~ 6</th><th>0 ~ 7</th></tr></thead><tbody><tr><td>s_n (m)</td><td>0.125</td><td>0.25</td><td>0.50</td><td>0.75</td><td>1.00</td><td>1.25</td><td>1.50</td><td>1.75</td></tr><tr><td>t_n</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>a_n</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><br><h4 id="이-실험의-한계"><a href="#이-실험의-한계" class="headerlink" title="이 실험의 한계"></a>이 실험의 한계</h4><ul><li>이 실험의 목적은 자유 낙하하는 물체를 통해 중력 가속도를 측정하는 것이다. 그런데, 중력 가속도를 계산하는 중간 과정에서, ⑤를 이용하기 위한 초기 속도(v_0=1.5658m/s) 값을 계산하기 위해 (실험 목적값인) 중력 가속도 9.80665m/s²를 사용한 것은 이 실험을 행하는 본질을 벗어나는 것이라고 볼 수 있다.</li><li>그렇지만, 여기서는 각 센서를 통해 측정되는 값으로 계산해낸 중력 가속도의 평균 값이 어느 정도되는지 확인해보고, 실제값과 어느 정도의 오차를 보이는지를 확인하는 교육 목적을 갖고 사용하는 것임을 감안할 필요가 있다. 이를 근거로 중력 가속도 값을 이용하여 계산한 첫번째 센서위치에서의 초기 속도 값을 기본 보정값의 개념으로 사용하고자 한다.</li><li>이러한 방법이 합당하지 않다고 생각한다면, 위에서 언급한 것 처럼 초기 속도(v_0)가 0이 되도록 센서를 파이프의 입구(최상단)에 배치하고, 물체가 손에서 떨어짐과 동시에 첫번째 센서에 반응하도록 낙하시키는 위치를 정확하게 조절하며 실험해야 한다.</li></ul><br><br><h4 id="실험-장치-만들기"><a href="#실험-장치-만들기" class="headerlink" title="실험 장치 만들기"></a>실험 장치 만들기</h4><h5 id="파이프-준비"><a href="#파이프-준비" class="headerlink" title="파이프 준비"></a>파이프 준비</h5><ul><li>길이 2m 투명 아크릴 파이프(내경 3.5cm)에 **구간 거리가 0.25m(=25cm)**가 되도록 일정하게 IR LED를 배치하고 고정한다.</li></ul><p><img src="/image/Gravitational-Acceleration01.png"></p><br><h5 id="센서-장착"><a href="#센서-장착" class="headerlink" title="센서 장착"></a>센서 장착</h5><ul><li>맨 위쪽과 아래쪽에는 12.5cm정도 띄우고 IR LED와 Phototransistor를 배치함<ul><li>손에서 낙하물을 놓을 때, 낙하물이 바닥에 닿을 때, 낙하시간에 영향을 주는 요소를 제거하기 위함</li></ul></li><li>IR LED와 Phototransistor가 서로 정확하게 마주 볼 수 있는 위치에 유성펜을 사용하여 표시한다.</li></ul><ul><li><p>드릴을 이용하여 아크릴 파이프에 지름 5mm의 구멍을 뚫는다.</p><ul><li>아크릴이 파손되지 않도록 유의한다. 이를 위해 먼저 작은 지름(1~2mm)의 드릴비트를 이용하여 작은 구멍을 뚫은 뒤, 그 구멍에 5mm 드릴비트를 사용하여 LED가 들어갈 구멍을 다시 뚫는 것이 좋다.</li></ul></li><li><p>IR LED와 Phototransistor를 구멍에 넣고 글루건을 사용하여 고정한다.</p><ul><li>글루건이 IR LED와 Phototransistor의 앞부분에 뭍지 않도록 주의</li><li>글루건이 손에 뭍으면 화상을 입을 수 있으므로 주의</li></ul></li></ul><br><h5 id="배선"><a href="#배선" class="headerlink" title="배선"></a>배선</h5><ul><li>각 센서 층마다 저항과 전원선과 데이터선을 다음과 같이 연결한다.</li></ul><p><img src="/image/Gravitational-Acceleration02.png"></p><br><ul><li><p>IR LED</p><ul><li><p>부품번호 및 제조회사가 표기되어 있지 않아 정확히 어떤 제품인지 알 수 없어, Everlight사의 IR333-A (940nm, 직경5mm)의 Datasheet를 참고하였다.</p></li><li><p>Forward Current 100mA, Forward Voltage 1.5V</p></li><li><p>5V를 전원으로 사용하는 경우<br>$$<br>R = \frac{(5-1.5)V}{0.1A} = 35~Ω<br>$$<br>그러므로 35Ω보다 약간 큰 47Ω저항을 연결한다. 100Ω정도의 저항도 사용할 수 있으나, 너무 큰 저항을 사용할 경우 IR의 세기가 작아지게 되므로, 실험이 잘 안될 수 있다.</p></li><li><p>실외에서는 태양광에 포함된 적외선의 영향도 받게 되므로 사용장소가 실내로 제한된다.</p></li></ul> <br></li><li><p>Phototransistor</p><ul><li><p>적외선이 닿으면 전류를 흐르게 하는 스위치 역할을 한다.</p></li><li><p>콜렉터(Collector)의 역할을 하는 긴다리와 에미터(Emitter)의 역할을 하는 짧은 다리, 총 2개의 다리가 붙어가 있지만 적외선 빛이 베이스(Base)의 역할을 하는 트렌지스터이다. </p></li><li><p>스위치의 역할을 하므로, 1MΩ의 풀업 저항을 긴다리에 부착한다. 10k옴을 써도 무방하지만 센서의 감도가 떨어지게 됨</p></li></ul></li></ul><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><ul><li>8세트의 IR LED와 Phototransistor를 사용하기 위해 아날로그 입력이 총 8개 필요하다. 그러므로 여기서는 많은 아날로그 입력핀을 갖고 있는 <strong>ESP32</strong>를 사용하도록 한다. 장치의 특성상, 최종 사용시에는 USB선을 분리한 상태에서 사용할 수 있도록 하는 것이 좋으므로, 18650 배터리 홀더가 내장된 ESP32를 사용하는 것도 좋은 방법이다. </li></ul><p><img src="/image/Gravitational-Acceleration03.png"></p><br><p>※ 아두이노 UNO의 경우 아날로그 입력이 총 6개이고, 여기에 SDA, SCL과 같은 I2C 통신포트를 사용한다면 실제 사용가능한 아날로그 포트가 4개밖에 남지 않는다. 아두이노 UNO를 사용해야한다면 CD4051BE와 같은 멀티플렉서 IC를 추가로 사용하여야 한다. 혹은 아날로그 입력 포트를 많이 가지고 있는 아두이노 MEGA를 사용한다.</p><br><h4 id="sketch-센서-테스트"><a href="#sketch-센서-테스트" class="headerlink" title="sketch: 센서 테스트"></a>sketch: 센서 테스트</h4><ul><li>모든 센서의 배선이 완료되면, 센서가 잘 작동하는지 테스트하기 위한 스케치를 업로드하여 센서를 점검한다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Potentiometer is connected to GPIO 34 (Analog ADC1_CH6) </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ir_Pin[<span class="number">8</span>] = &#123;<span class="number">36</span>, <span class="number">39</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">4</span>, <span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// variable for storing the potentiometer value</span></span><br><span class="line"><span class="keyword">int</span> ir_Value[<span class="number">8</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Print the header:</span></span><br><span class="line">  Serial.println(<span class="string">&quot;Y0\tY1\tY2\tY3\tY4\tY5\tY6\tY7&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;---\t---\t---\t---\t---\t---\t---\t---&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Loop through all eight pins.</span></span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">0</span>; pin&lt;=<span class="number">7</span>; pin++) &#123;</span><br><span class="line">    ir_Value[pin] = analogRead(ir_Pin[pin]);</span><br><span class="line">    Serial.print(String(ir_Value[pin]) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Serial.println();</span><br><span class="line">  delay(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>센서값이 4095으로 출력되는 센서는 배선 자체의 연결에 문제가 있는 것이므로, 배선이 연결되어야 하는 부분에 정확하게 연결이 되었는지 우선 점검한다.</li><li> 초기 상태의 센서값이 모두 0에 근접하는 값으로 표시될 수 있도록 하는 것이 좋으며, 초기값이 0에서 많이 벗어나는 경우에는 LED와 Phototransistor가 서로 정확하게 마주 볼 수 있도록 조절해준다. 조절 후에도 센서값이 0이 되지 않을 수 있다. 이때는 0에 가장 가까운 값이 만들어지도록 최대한 조절한다. 이 상태에서 물체를 떨어뜨려 모든 센서가 물체에 반응하는지 살펴본 뒤, 물체에 반응하는 센서값의 최소값을 점검한다.</li></ul><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><ul><li>테스트 sketch를 통해 센서의 반응 정도를 파악한 뒤에, 메인 스케치를 업로드 한다.</li><li>업로드 전에 아래 부분을 찾아, 각 센서에 따라으로 물체에 반응하는 센서의 최소값(센서 테스트시 점검할 것!)으로 바꿔준다.  민감도의 범위는 0~4095이며, 값이 작을 수록 떨어지는 물체에 민감하게 반응한다. 기본값은 모두 100으로 설정되어 있다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The smaller the value, the more sensitive (0~4095)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> min_Sensitive[<span class="number">8</span>] = &#123;<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>&#125;;</span><br></pre></td></tr></table></figure><br><h5 id="메인-스케치"><a href="#메인-스케치" class="headerlink" title="메인 스케치"></a>메인 스케치</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****** ESP32 SKETCH FOR GRAVITATIONAL ACCELERATION ******</span></span><br><span class="line"><span class="comment">   Author: K. Jun, Lee</span></span><br><span class="line"><span class="comment">   Blog: https://stemwith.github.io         2020-10-06</span></span><br><span class="line"><span class="comment">*********************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GPIO of connecting with 8 Phototransistors</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ir_Pin[<span class="number">8</span>] = &#123;<span class="number">36</span>, <span class="number">39</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">4</span>, <span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// variable for storing the potentiometer value</span></span><br><span class="line"><span class="keyword">int</span> ir_Value[<span class="number">8</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// variable for IR Phototransistors&#x27; sensitivity</span></span><br><span class="line"><span class="keyword">int</span> ir_Sensitivity[<span class="number">8</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The smaller the value, the more sensitive (0~4095)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> min_Sensitive[<span class="number">8</span>] = &#123;<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for recording of sensing time by micros()</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> nowTime[<span class="number">8</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for recording of interval time by micros()</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> intervalTime[<span class="number">8</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// for distance of 8 sensors in micrometer unit</span></span><br><span class="line"><span class="comment">// (12.5cm - 25cm - 25cm - 25cm - 25cm - 25cm - 25cm - 25cm)</span></span><br><span class="line"><span class="comment">unsigned long ir_Distance[8] = &#123;125000, 250000, 250000, 250000, 250000, 250000, 250000, 250000&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for testing distance of 8 sensors in micrometer unit</span></span><br><span class="line"><span class="comment">// (1.4cm - 2.54cm - 2.54cm - 2.54cm - 2.54cm - 2.54cm - 2.54cm - 2.54cm)</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> ir_Distance[<span class="number">8</span>] = &#123;<span class="number">14000</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">33300</span>, <span class="number">25400</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for displacemence of 8 sensors in micrometer unit</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> ir_Displacemence[<span class="number">8</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for interval acceleration</span></span><br><span class="line"><span class="keyword">float</span> acceleration[<span class="number">8</span>] = &#123;<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for times number</span></span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Gravitational Acceleration &amp; Initial Velocity</span></span><br><span class="line"><span class="keyword">float</span> g = <span class="number">9.80665</span>; <span class="comment">// 9.80665 m/s^2 = 0.00000980665 um/us^2</span></span><br><span class="line"><span class="keyword">float</span> initVelocity = <span class="built_in">sqrt</span>(<span class="number">2</span>*g*((<span class="keyword">float</span>)ir_Distance[<span class="number">0</span>]/<span class="number">1000000</span>)); <span class="comment">// in m/s unit</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup Displacemence</span></span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">1</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">      ir_Displacemence[pin] = ir_Displacemence[pin<span class="number">-1</span>] + ir_Distance[pin];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Print the header:;</span></span><br><span class="line">  t++;</span><br><span class="line">  <span class="keyword">float</span> sum_Accel = <span class="number">0.0</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> initTime = <span class="number">0</span>;</span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.print(<span class="string">&quot;Experiment #&quot;</span>); Serial.println(t);</span><br><span class="line">  Serial.println(<span class="string">&quot;\t\tY0\t\tY1\t\tY2\t\tY3\t\tY4\t\tY5\t\tY6\t\tY7&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;\t\t---\t\t---\t\t---\t\t---\t\t---\t\t---\t\t---\t\t---&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Initializing 8 IR Phototransistors&#x27; Sensitivity:</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> s=<span class="number">0</span>; s&lt;<span class="number">101</span>; s++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (byte pin=<span class="number">0</span>; pin&lt;=<span class="number">7</span>; pin++) &#123;</span><br><span class="line">      ir_Sensitivity[pin] = ir_Sensitivity[pin] + analogRead(ir_Pin[pin]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Average of Initial Senser value</span></span><br><span class="line">  Serial.print(<span class="string">&quot;IR_Sensivitity\t&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">0</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    ir_Sensitivity[pin] = ir_Sensitivity[pin] / <span class="number">100</span>;</span><br><span class="line">    Serial.print(String(ir_Sensitivity[pin]) + <span class="string">&quot;\t\t&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Loop through #0~7 pins.</span></span><br><span class="line">  Serial.print(<span class="string">&quot;IR_Value\t&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">0</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    <span class="keyword">while</span> (ir_Value[pin] &lt;= ir_Sensitivity[pin] + min_Sensitive[pin]) &#123;</span><br><span class="line">      <span class="keyword">if</span>(pin==<span class="number">0</span>) &#123;</span><br><span class="line">        initTime = micros();</span><br><span class="line">      &#125;</span><br><span class="line">      nowTime[pin] = micros() - initTime;</span><br><span class="line">      ir_Value[pin] = analogRead(ir_Pin[pin]);</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.print(String(ir_Value[pin]) + <span class="string">&quot;\t\t&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Now Time(us)\t&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">0</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    Serial.print(String(nowTime[pin]) + <span class="string">&quot;\t\t&quot;</span>);</span><br><span class="line">    ir_Value[pin] = <span class="number">0</span>;</span><br><span class="line">    ir_Sensitivity[pin] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Interval(s)\t&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">1</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    intervalTime[pin] = nowTime[pin] - nowTime[pin<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">float</span> f_intervalTime = (<span class="keyword">float</span>)intervalTime[pin] / <span class="number">1000000.0</span>;</span><br><span class="line">    Serial.print(<span class="string">&quot;     &quot;</span> + String(f_intervalTime, <span class="number">6</span>) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Distance(m)\t&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">1</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    <span class="keyword">float</span> f_Distance = (<span class="keyword">float</span>)ir_Distance[pin] / <span class="number">1000000.0</span>;</span><br><span class="line">    Serial.print(<span class="string">&quot;     &quot;</span> + String(f_Distance, <span class="number">4</span>) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Displace.(m)\t&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (byte pin=<span class="number">1</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">      <span class="keyword">float</span> f_Displacemence = (<span class="keyword">float</span>)ir_Displacemence[pin] / <span class="number">1000000.0</span>;</span><br><span class="line">      Serial.print(<span class="string">&quot;     &quot;</span> + String(f_Displacemence, <span class="number">4</span>) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// using a = 2(s - v_0*t) / t^2</span></span><br><span class="line">  Serial.print(<span class="string">&quot;Accel.(m/s^2)\t&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">1</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    <span class="comment">//Serial.print(&quot;     &quot; + String(initVelocity, 4) + &quot;\t&quot;);</span></span><br><span class="line">    <span class="keyword">float</span> f_numerator = <span class="number">2</span>*(ir_Displacemence[pin]-(initVelocity*nowTime[pin]));</span><br><span class="line">    <span class="comment">//Serial.print(&quot;     &quot; + String(f_numerator) + &quot;\t&quot;);</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> l_numerator = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)f_numerator;</span><br><span class="line">    <span class="comment">//Serial.print(&quot;     &quot; + String(l_numerator) + &quot;\t&quot;);</span></span><br><span class="line">    <span class="keyword">float</span> f_denominator = <span class="built_in">pow</span>(nowTime[pin], <span class="number">2</span>) * <span class="built_in">pow</span>(<span class="number">10</span>, <span class="number">-6</span>);</span><br><span class="line">    <span class="comment">//Serial.print(&quot;     &quot; + String(f_denominator) + &quot;\t&quot;);</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> l_denominator = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)f_denominator;</span><br><span class="line">    <span class="comment">//Serial.print(&quot;     &quot; + String(l_denominator) + &quot;\t&quot;);</span></span><br><span class="line">    acceleration[pin] = (<span class="keyword">float</span>)l_numerator/(<span class="keyword">float</span>)l_denominator;</span><br><span class="line">    Serial.print(<span class="string">&quot;     &quot;</span> + String(acceleration[pin]) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (byte pin=<span class="number">1</span>; pin&lt;<span class="number">8</span>; pin++) &#123;</span><br><span class="line">    sum_Accel = sum_Accel + acceleration[pin];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">float</span> ave_Accel = sum_Accel / <span class="number">7.0</span>;</span><br><span class="line">  Serial.print(<span class="string">&quot;Gravitational Acceleration = &quot;</span>);</span><br><span class="line">  Serial.print(ave_Accel); Serial.println(<span class="string">&quot; m/s^2&quot;</span>);</span><br><span class="line">  Serial.println();  Serial.println();</span><br><span class="line">  delay(<span class="number">1500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>※ 스케치 내부에서 사용하는 시간과 거리의 단위는 소수 자리수 계산의 편의를 위해 microsecond, micrometer를 사용하며, 출력시에 second, meter 단위로 변환한다. </p><br><br><h4 id="실험-결과"><a href="#실험-결과" class="headerlink" title="실험 결과"></a>실험 결과</h4><h5 id="예비-실험"><a href="#예비-실험" class="headerlink" title="예비 실험"></a>예비 실험</h5><p>예비 실험은 파이프 없이 브레드 보드를 사용한 프로토 타입으로 실시하였다. 센서 간격이 원래의 계획보다 작기 때문에 아래와 같이 설정하였다. 입구부터 첫번째 센서까지의 거리 1.4cm, 각 센서간의 거리는 2.54cm이며, 6번째~7번째 센서의 간격만 3.33cm 이다.</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for testing distance of 8 sensors in micrometer unit</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> ir_Distance[<span class="number">8</span>] = &#123;<span class="number">14000</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">25400</span>, <span class="number">33300</span>, <span class="number">25400</span>&#125;;</span><br></pre></td></tr></table></figure><br><p>브레드 보드에 배선을 하고 수직으로 세운 뒤, IR LED와 Phototansistor 사이에 스티로폼 공과 쇠구슬을 차례로 낙하시킨다. 질량이 다른 물체의 낙하 속도를 비교할 수 있다. </p><p><img src="/image/Gravitational-Acceleration07.jpg"></p><br><p>스티로폼 공은 집에 있는 스티로폼을 커터칼로 적당히 구 형태로 잘라낸 뒤, 손바닥과 바닥 사이에 놓고 손바닥에 살짝 힘을 주어 누르면서 돌돌 굴리면 스티로폼 공 형태를 쉽게 만들 수 있다.</p><p><img src="/image/Gravitational-Acceleration08.png"></p><br><h5 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h5><p>스티로폼 공과 쇠구슬 2종류를 사용하였고, 몇 차례 시도한 결과 다음과 같은 결과가 나왔다.</p><table><thead><tr><th>센서</th><th>Y0</th><th>Y1</th><th>Y2</th><th>Y3</th><th>Y4</th><th>Y5</th><th>Y6</th><th>Y7</th></tr></thead><tbody><tr><td>NowTime(us)</td><td>1</td><td>35232</td><td>62407</td><td>81854</td><td>100329</td><td>117774</td><td>141384</td><td>141428</td></tr><tr><td>Interval(s)</td><td></td><td>0.035231</td><td>0.027075</td><td>0.019547</td><td>0.018475</td><td>0.017445</td><td>0.023610</td><td>0.000044</td></tr><tr><td>Distance(m)</td><td></td><td>0.0254</td><td>0.0254</td><td>0.0254</td><td>0.0254</td><td>0.0254</td><td>0.0254</td><td>0.0254</td></tr><tr><td>Displace.(m)</td><td></td><td>0.0254</td><td>0.0508</td><td>0.0762</td><td>0.1016</td><td>0.1270</td><td>0.1603</td><td>0.1857</td></tr><tr><td>Acceleration(m/s^2)</td><td></td><td>11.18</td><td>9.35</td><td>9.94</td><td>9.74</td><td>9.41</td><td>8.63</td><td>11.16</td></tr></tbody></table><p>∴ Gravitational Acceleration = 9.92 m/s²</p><br><h4 id="문제점-및-해결-방법"><a href="#문제점-및-해결-방법" class="headerlink" title="문제점 및 해결 방법"></a>문제점 및 해결 방법</h4><p>언제나 중력 가속도 9.81 m/s² 에 근접한 값이 나오는 것은 아니다. </p><ul><li><p>낙하시키는 물체가 센서나 브레드보드에 닿지 않도록 조심스럽게 낙하시켜야 한다. 조금이라도 충돌이 일어나면 가속도 값이 전혀 다른 값으로 출력된다.</p><ul><li>파이프를 사용하면 문제를 보완할 수 있을 것이다.</li></ul></li><li><p>처음 물체를 잡고 낙하시키는 위치를 셋팅된 값과 일치시켜야 한다.</p><ul><li>셋팅값보다 멀리서(위에서) 낙하시키면 중력 가속도 값이 커지고, 반대로 가까이서(아래에서) 낙하시키면 중력 가속도 값이 작아진다. </li></ul></li><li><p>손에서 놓는 과정에서 발생하는 초기 속도의 오차는 지속적으로 발생한다.</p><ul><li>되도록이면 낙하 물체를 살짝 잡은 상태에서 낙하시키도록 한다.</li><li>쇠구슬인 경우 전자석을 이용하거나, 솔레노이드 밸브 등의 사용을 고려할 필요가 있다. </li></ul></li></ul><br><h4 id="실제-측정-장치"><a href="#실제-측정-장치" class="headerlink" title="실제 측정 장치"></a>실제 측정 장치</h4><p>이민O 학생과 황정O 학생이 제작한 측정 장치의 외형이다.</p><p><img src="/image/Gravitational-Acceleration09.png"></p><p>각 센서부를 보호하고 외형을 돋보이게 하는 틀을 3D프린터를 사용하여 직접 제작한 뒤 덧붙인 모습이다. 중앙에 18650 배터리를 내장한 ESP32를 덧붙여 제작하였다.  </p><br><br><h4 id="대체-가능-센서"><a href="#대체-가능-센서" class="headerlink" title="대체 가능 센서"></a>대체 가능 센서</h4><p>이 실험에서 사용한 IR LED와 Phototransistor의 조합은 여러가지 장점이 많지만, 배선이 복잡하다는 것은 제작하는 입장에서는 (특히 학생들이 제작을 한다면) 난감할 수 있다. 이럴 경우 다른 형태의 센서들로 대체할 수 있다.</p><table><thead><tr><th></th><th>IRLED + <br>Phototransistor</th><th>포토 인터럽터</th><th>금속 감지기</th></tr></thead><tbody><tr><td>가격</td><td>저렴, 쉽게 구할 수 있음. 타오바오에서 1세트당 0.1<del>0.5위안 (약 20원</del>100원)</td><td>센서 간격 3<del>5cm인 제품은 가격이 비쌈 (타오바오에서 25</del>45위안)</td><td>구경 3cm인 제품의 경우 타오바오에서 18위안 (단, 3cm 초과 제품은 매우 비쌈)</td></tr><tr><td>종류</td><td>낙하물의 종류, 재질의 영향이 없다. <br>(고정이 가능하면 파이프를 사용하지 않아도 되므로) 낙하물이 크기가 큰 경우에도 가능</td><td>낙하물의 종류, 재질의 영향이 없다.<br>낙하물체의 길이가 5cm를  넘어가면 불가능</td><td>금속 낙하물만 가능<br>낙하물체의 직경이 3cm 이내 추천</td></tr><tr><td>전류</td><td>사용 전류가 작으므로 배터리홀더가 내장된 ESP32를 사용할 경우, 별도의 전원장지 없이도 (컴퓨터와 연결하지 않고) 독립적으로 사용할 수 있다.</td><td>좌동</td><td>개당 전류값이 0.3A로 큰 편이다.</td></tr><tr><td>배선</td><td>저항을 2개 붙여야 하고, 배선이 복잡</td><td>간편</td><td>간편</td></tr><tr><td>실외</td><td>불가</td><td>불가</td><td>가능</td></tr><tr><td>기타</td><td></td><td>크기가 작은 것은 본 실험에 부적합<br>구하기 어려움(단종여부 확인)</td><td></td></tr></tbody></table><br><h5 id="포토-인터럽터"><a href="#포토-인터럽터" class="headerlink" title="포토 인터럽터"></a>포토 인터럽터</h5><table><thead><tr><th>TT Electronics OPB819Z</th><th>泰邦工控 TBGK E3S-GS30</th></tr></thead><tbody><tr><td><img src="/image/Gravitational-Acceleration04.png"></td><td><img src="/image/Gravitational-Acceleration05.png"></td></tr></tbody></table><h5 id="금속-감지기"><a href="#금속-감지기" class="headerlink" title="금속 감지기"></a>금속 감지기</h5><p><img src="/image/Gravitational-Acceleration06.png"></p><p>위 제품은 <a href="https://detail.tmall.com/item.htm?spm=a1z0d.6639537.1997196601.4.77eb7484HSzCG2&id=620286916175#">环形接近开关金属感应传感器</a>이라는 이름으로 타오바오에서 판매하고 있는 금속감지센서이다. 구경 3cm (30mm孔径, NPN型) 정도인 제품까지는 저렴한 가격(18위안, 약 3,000원)에 구입할 수 있다. 생김새만 보아서는 가장 쉽게 제작할 수 있을 것 같다. 단, 낙하물은 금속을 사용해야하며, 적당한 크기의 금속 구슬을 사용하면 될 것 같다. 외경 3cm 투명 아크릴 파이프에 일정한 간격으로 테이프를 두껍게 감은 뒤 감지기를 끼우는 형태로 설치하면 될 것 같다. </p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/science/">science</category>
      
      
      
      <comments>http://stemwith.github.io/2020/10/06/STEM-%EC%A4%91%EB%A0%A5-%EA%B0%80%EC%86%8D%EB%8F%84-%EC%B8%A1%EC%A0%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Arduino, Geiger Counter</title>
      <link>http://stemwith.github.io/2020/08/23/Arduino-Geiger-Counter/</link>
      <guid>http://stemwith.github.io/2020/08/23/Arduino-Geiger-Counter/</guid>
      <pubDate>Sun, 23 Aug 2020 08:57:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;※ SAT Subject Chemistry: Pactice Test&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp</description>
        
      
      
      
      <content:encoded><![CDATA[<p>※ SAT Subject Chemistry: Pactice Test</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Used to detect radioactivity.</span><br><span class="line">① Calorimeter</span><br><span class="line">② Geiger Counter</span><br><span class="line">③ Burette</span><br><span class="line">④ Funnel</span><br><span class="line">⑤ Bunsen Burner</span><br></pre></td></tr></table></figure><br><br><h1 id="가이거-계수기"><a href="#가이거-계수기" class="headerlink" title="가이거 계수기"></a>가이거 계수기</h1><ul><li>방사선을 측정할 수 있는 관으로  방사능 입자 하나하나를 셀 수 있다. 1908년 러더퍼드의 제자 요하네스 한스 빌헬름 가이거(Johannes Hans Wilhelm Geiger)가 알파선을 감지할 수 있는 감지기를 개발하였으며, 그 후 1928년 가이거와 가이거의 제자인 발터 뮐러가 함께 개량하여 모든 전리방사선을 감지할 수 있도록 만든 것이 현재의 가이거-뮐러 튜브(GM Tube)이다.</li><li>원리: 튜브는 비활성 기체가 충전된 상태이며  중심 전극(+극, anode)과 관의 내벽(-극, cathode, 금속이나 흑연으로 코팅)으로 구성되어 있다. 여기에 수백V의 전압을 걸면, 관 안에 걸린 높은 전기장 때문에 이온은 음극을 향해 가속되고, 전자는 양극을 향해 가속되며 운동에너지를 얻게 되며 이동 중에 충돌한 기체분자도 함께 전이된다. 이렇게 가스 안에 하전입자의 붕괴가 일어나면 음극에서 양극을 향해 짧고 강한 펄스전류가 순간적으로 나타나 흐르게 된다. 이 펄스전류가 ‘스피커’를 지날때 반응음으로 가이거 계수기 특유의 ‘틱티티틱’하는 소리가 만들어지는데, 이것이 ‘방사선이 존재한다’는 상황을 알려주는 소리이다. 그리고 이 소리 1개음이 방사능 입자 1개에 대한 대응 신호가 된다.  오래된 방식이지만 오늘날에도 큰 변화 없이 이 원리를 응용하여 방사선을 측정하고 있다.</li><li>단점: 상당히 큰 펄스신호를 얻을 수 있지만, 이 전류의 강도는 방사선이 가진 에너지와 비례관계를 나타내는 것은 아니기때문에, 방사선이 가진 에너지를 측정하는 것은 불가능하다. (방사선의 에너지를 알기 위해서는 비례계수관을 사용해야 한다.) 또한 고준위 방사선의 경우에는 전류가 연속적으로 흐르게 되어 펄스의 횟수를 계수할 수 없게 되는 경우도 있다. (주로 500cps 이상의 경우) 이것을 막기 위해 전자의 흐름을 제어하는 별도의 장치를 부착하거나, 신틸레이터(scintillator)나 이온화 챔버 같은 다른 검출기로 계측한다.</li><li>가이거 카운터에 사용하는 튜브관은 여러 종류가 제조되고 있다. 대부분의 GM관은 감마선과 2.5MeV 이상의 베타선을 검출한다. 감마선의 검출 감도는 좋지는 않다. GM관 안의 가스밀도가 낮아서, 투과력이 높은 감마선은 상호작용을 일으키기 어렵기 때문이다. 중성자선은 가스로부터 전리하지 않기때문에 검출하지 못한다. 하지만, 관 안쪽을 붕소로 코팅하거나, 삼불화붕소 아니면 ³He가스를 충전하면 중성자선에도 반응하는 GM관을 만들 수 있다. 중성자는 붕소원자핵과 반응하여 알파선을 생성하거나,  ³He원자와 반응하여 수소와 트리튬이온과 전자를 생성하므로 이 전하입자들이 붕괴를 발생시킨다. 각 튜브마다 검출하는 입자가 다르기 때문에, CPM(Count Per Minute) 단위를 uSv/h(Sieverts Per Hours) 단위로 바꾸기 위한 Conversion Factor가 모두 다르다. 그러므로 사용하는 튜브관이 어떤 것인지 정확하게 알아두어야 한다. </li><li>GM관은 하드웨어 난수발생기로서 이용할 수도 있다.</li><li>Background Radiation: 자연적으로 존재하는 자연 방사선, 즉 Background Radiation의 경우 J305β 튜브관을 사용할때 평균 15.6 CPM이 측정된다. (주변 상황에 따라 조금씩 달라짐)</li></ul><br><br><h2 id="라이브러리-추가하기"><a href="#라이브러리-추가하기" class="headerlink" title="라이브러리 추가하기"></a>라이브러리 추가하기</h2><ul><li>  Wire : 기본 내장 라이브러리</li><li>  LiquidCrystal I2C (by Frank de Brabander) 검색하여 설치</li></ul><br><br><h2 id="schematic-for-standalone"><a href="#schematic-for-standalone" class="headerlink" title="schematic (for standalone)"></a>schematic (for standalone)</h2><p><img src="/image/Geiger-Counter.png"></p><table><thead><tr><th>GM Monule</th><th>GND</th><th>5V</th><th>VIN</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>Arduino</td><td>GND</td><td>5V</td><td>D2</td><td>VIN</td><td>A4</td><td>A5</td><td>PowerJack</td></tr><tr><td>1602 LCD I2C</td><td>GND</td><td>VCC</td><td></td><td>(VCC)</td><td>SDA</td><td>SCL</td><td></td></tr><tr><td>9V battery</td><td></td><td></td><td></td><td></td><td></td><td></td><td>(+)(-)</td></tr></tbody></table><ul><li>외부로 들고 다니면서 측정할 수 있도록 9V 배터리 1개를 추가하여 Arduino, 1602 LCD, GM Molule을 모두 작동시킬 수 있도록 하였다.</li></ul><br><br><h2 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* --------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">* WHAT IS CPM?</span></span><br><span class="line"><span class="comment">* CPM (counts per minute) is events quantity from Geiger Tube you get during one minute.</span></span><br><span class="line"><span class="comment">* Usually it used to calculate a radiation level.  </span></span><br><span class="line"><span class="comment">* Different GM Tubes has different quantity of CPM for background.</span></span><br><span class="line"><span class="comment">* Some tubes can produce about 10-50 CPM for normal background,</span></span><br><span class="line"><span class="comment">* other GM Tube models produce 50-100 CPM or 0-5 CPM for same radiation level.</span></span><br><span class="line"><span class="comment">* Please refer your GM Tube datasheet for more information. </span></span><br><span class="line"><span class="comment">* Just for reference here, SBM-20 can generate about 10-50 CPM for normal background.</span></span><br><span class="line"><span class="comment">* --------------------------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// This Sketch counts the number of pulses a minute.</span></span><br><span class="line"><span class="comment">// Connect the GND on Arduino to the GND on the Geiger counter.</span></span><br><span class="line"><span class="comment">// Connect the 5V on Arduino to the 5V on the Geiger counter.</span></span><br><span class="line"><span class="comment">// Connect the VIN on the Geiger counter to the D2 on Arduino.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// For I2C 1602 LCD : VCC-5V / GND-GND / SDA-A4 / SCL-A5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;LiquidCrystal_I2C.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// I2C address: 0x20~0x27 or 0x3F</span></span><br><span class="line"><span class="function">LiquidCrystal_I2C <span class="title">lcd</span><span class="params">(<span class="number">0x27</span>, <span class="number">16</span>, <span class="number">2</span>)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cpm;</span><br><span class="line"><span class="keyword">float</span> sievertshour; <span class="comment">// for converting from cpm to sieverts/hour</span></span><br><span class="line"><span class="comment">//float sieverts; // for converting from cpm to sieverts  </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> counts; <span class="comment">//variable for GM Tube events</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> previousMillis; <span class="comment">//variable for measuring time</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_PERIOD 60000 <span class="comment">// count rate (1 minute)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CONV_FACTOR 0.008120 <span class="comment">// for GM tube of J305beta type</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123; <span class="comment">//setup</span></span><br><span class="line">  counts = <span class="number">0</span>;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  pinMode(<span class="number">2</span>, INPUT);</span><br><span class="line"></span><br><span class="line">  lcd.init();               <span class="comment">// lcd 초기화</span></span><br><span class="line">  lcd.backlight();</span><br><span class="line">  </span><br><span class="line">  attachInterrupt(digitalPinToInterrupt(<span class="number">2</span>), impulse, FALLING); <span class="comment">//define external interrupts</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  lcd.print(<span class="string">&quot;CPM:&quot;</span>);</span><br><span class="line">  lcd.setCursor(<span class="number">9</span>,<span class="number">0</span>);</span><br><span class="line">  lcd.print(<span class="string">&quot; #:&quot;</span>);</span><br><span class="line">  lcd.setCursor(<span class="number">12</span>,<span class="number">0</span>);</span><br><span class="line">  lcd.print(counts);</span><br><span class="line">  lcd.setCursor(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">  lcd.print(<span class="string">&quot;uSv/h:&quot;</span>);</span><br><span class="line">  <span class="comment">//lcd.print(&quot;uSv  :&quot;);</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> currentMillis = millis();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentMillis - previousMillis &gt; LOG_PERIOD) &#123;   <span class="comment">//every 1 minute</span></span><br><span class="line">    previousMillis = currentMillis;</span><br><span class="line"></span><br><span class="line">    lcd.clear();</span><br><span class="line">    lcd.setCursor(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    cpm = counts;</span><br><span class="line">    lcd.print(cpm); <span class="comment">//Display CPM</span></span><br><span class="line">    Serial.println(cpm);</span><br><span class="line">    sievertshour = cpm * CONV_FACTOR;</span><br><span class="line">    <span class="comment">//sieverts = sievertshour * 356 * 24;</span></span><br><span class="line">    lcd.setCursor(<span class="number">7</span>,<span class="number">1</span>);</span><br><span class="line">    lcd.print(sievertshour);</span><br><span class="line">    <span class="comment">//lcd.print(sieverts);</span></span><br><span class="line">     </span><br><span class="line">    counts = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">impulse</span><span class="params">()</span> </span>&#123; <span class="comment">// called every time there is a FALLING signal at pin 2</span></span><br><span class="line">  counts++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="sketch-for-ESP8266-Geigerzaehler-LCD-ESP-ino"><a href="#sketch-for-ESP8266-Geigerzaehler-LCD-ESP-ino" class="headerlink" title="sketch : for ESP8266 (Geigerzaehler-LCD-ESP.ino)"></a>sketch : for ESP8266 (Geigerzaehler-LCD-ESP.ino)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************ARDUINO SKETCH FOR GEIGER COUNTER******************</span></span><br><span class="line"><span class="comment">Author: RH Electronics www.radiohobbystore.com / www.mygeiger.org</span></span><br><span class="line"><span class="comment">*****************************************************************</span></span><br><span class="line"><span class="comment">This sketch can be used with DIY Geiger Counter board. It allow</span></span><br><span class="line"><span class="comment">to receive CPM data during minute. You can modify the sketch</span></span><br><span class="line"><span class="comment">for your needs.</span></span><br><span class="line"><span class="comment">*****************************************************************</span></span><br><span class="line"><span class="comment">LCD I2C Connection:</span></span><br><span class="line"><span class="comment">LCD SDA -&gt; D10  =  1</span></span><br><span class="line"><span class="comment">LCD SCL -&gt; D9   =  3</span></span><br><span class="line"><span class="comment">VCC to +3,3V and ground</span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// include the library code:</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;LiquidCrystal_I2C.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_PERIOD 15000  <span class="comment">//Logging period in milliseconds, recommended value 15000-60000.</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_PERIOD 60000  <span class="comment">//Maximum logging period without modifying this sketch</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PERIOD 60000.0 <span class="comment">// (60 sec) one minute measure period</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> CNT; <span class="comment">// variable for counting interrupts from dosimeter</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> counts;     <span class="comment">//variable for GM Tube events</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> cpm;        <span class="comment">//variable for CPM</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> multiplier;  <span class="comment">//variable for calculation CPM in this sketch</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> previousMillis;  <span class="comment">//variable for time measurement</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> dispPeriod; <span class="comment">// variable for measuring time</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> CPM; <span class="comment">// variable for measuring CPM</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inputPin = <span class="number">4</span>;  <span class="comment">// pin D2 is VIN on geiger counter</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// initialize the library with the numbers of the interface pins</span></span><br><span class="line"><span class="function">LiquidCrystal_I2C <span class="title">lcd</span><span class="params">(<span class="number">0x3F</span>,<span class="number">20</span>,<span class="number">4</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;               <span class="comment">// setup</span></span><br><span class="line">Wire.begin(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">lcd.begin(<span class="number">20</span>, <span class="number">4</span>);</span><br><span class="line">lcd.init();</span><br><span class="line"><span class="comment">// Turn on the backlight.</span></span><br><span class="line">lcd.backlight();</span><br><span class="line"></span><br><span class="line">CNT = <span class="number">0</span>;</span><br><span class="line">CPM = <span class="number">0</span>;</span><br><span class="line">dispPeriod = <span class="number">0</span>;</span><br><span class="line">attachInterrupt(digitalPinToInterrupt(inputPin), GetEvent, FALLING); <span class="comment">// Define interrupt D2 on falling edge</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;           <span class="comment">// main loop</span></span><br><span class="line">lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">lcd.print(<span class="string">&quot;Berlin-Siemensstadt&quot;</span>);</span><br><span class="line">lcd.setCursor(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">lcd.print(<span class="string">&quot;   Geiger Counter &quot;</span>);</span><br><span class="line">lcd.setCursor(<span class="number">0</span>,<span class="number">2</span>); <span class="comment">// print text and CNT on the LCD</span></span><br><span class="line">lcd.print(<span class="string">&quot;CPM:&quot;</span>);</span><br><span class="line">lcd.setCursor(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">lcd.print(<span class="string">&quot;CNT:&quot;</span>);</span><br><span class="line">lcd.setCursor(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">lcd.print(CNT);</span><br><span class="line"><span class="keyword">if</span> (millis() &gt;=dispPeriod + PERIOD) &#123; <span class="comment">// If one minute is over</span></span><br><span class="line">cleanDisplay(); <span class="comment">// Clear LCD</span></span><br><span class="line"><span class="comment">// Do something about accumulated CNT events....</span></span><br><span class="line">lcd.setCursor(<span class="number">5</span>, <span class="number">2</span>);</span><br><span class="line">CPM = CNT;</span><br><span class="line">lcd.print(CPM); <span class="comment">//Display CPM</span></span><br><span class="line">CNT = <span class="number">0</span>;</span><br><span class="line">dispPeriod = millis();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetEvent</span><span class="params">()</span></span>&#123;           <span class="comment">// Get Event from Device</span></span><br><span class="line">CNT++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cleanDisplay</span> <span class="params">()</span></span>&#123;      <span class="comment">// Clear LCD routine</span></span><br><span class="line">lcd.clear();</span><br><span class="line">lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">lcd.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(출처: rhelectronics.net)</p><br><br><h1 id="Conversion-Index-amp-Background-Radiation"><a href="#Conversion-Index-amp-Background-Radiation" class="headerlink" title="Conversion Index &amp; Background Radiation"></a>Conversion Index &amp; Background Radiation</h1><p>CPM값은 사용하는 GM tube의 종류에 따라 다르게 측정된다. 왜냐하면, GM tube의 종류에 따라 감지할 수 있는 방사능의 종류가 다르기 때문이다. 그러므로 제조회사에서 제공하는 Conversion Index 값을 사용하여 CPM값을 Sieverts 단위로 바꿔주어야 한다.</p><p>예를들어, 위 sketch에서 사용한 J305β tube관은 CONV_FACTOR값이 0.008120이다. 이 값의 유도과정은 다음과 같다.</p><ul><li>제조사에서 제공하는 J305β 스펙 :  <strong>65 cps/µR/s for 60Co</strong> (cps: count per second, µR = microRem)</li><li>이것은 1µR/s = <strong>65cps</strong> 임을 뜻한다. (즉 1mR/s = <strong>65000cps</strong>)</li><li>1mR/h = 65000cps / (60 × 60) = 18.06cps</li><li>18 cps/mR/h = 18 × 60 cpm/mR/h  = 1080 / 8.77 cpm/µSv/h = 123.14 cpm/µSv/h (※1mR = 8.77μSv)</li><li>∴ Conversion Index = 123.14 </li><li>123CPM = 1μSv/h   →   1CPM = 0.008120 μSv/h</li><li>∴ CONV_FACTOR = 0.008120</li><li>CPM × CONV_FACTOR  = μSv/h</li></ul><br><p>이 CONV_FACTOR값에 24*365를 곱하면 Sv 단위의 값을 만들어 낼 수도 있다.  </p><ul><li>만일 어떤 지역에서 J305β tube를 사용하여 측정한 CPM값이 20이라면,</li><li>20×0.008120 = 0.1624μSv/h 에 해당하는 방사선이 검출되는 것이며</li><li>이는 0.1624 × 24 × 365 = 1422.6 μSv를 뜻한다. 방사능 생활척도를 통해 일반적인 배경복사보다는 다소 낮은 수준이라는 것을 알 수 있다.</li></ul><br><table><thead><tr><th>tube</th><th>Conversion Index</th><th>CONV_FACTOR</th><th>Background Radiation (CPM)</th></tr></thead><tbody><tr><td>J305β</td><td>123.14</td><td>0.008120</td><td>15.6</td></tr><tr><td>SBM-20</td><td>175.4</td><td>0.0057</td><td>23.4</td></tr><tr><td>M4011</td><td>153.8</td><td>0.006502</td><td></td></tr><tr><td>LDN-712</td><td></td><td>0.01</td><td></td></tr></tbody></table><br><br><h2 id="방사능-생활척도"><a href="#방사능-생활척도" class="headerlink" title="방사능 생활척도"></a>방사능 생활척도</h2><p>밀리시버트(mSv)는 X선, PET, CT 등과 같은 의료 검진시 발생하는 유효 노출을 측정하는 경우 사용된다. 일상생활에서 노출되는 방사선량은 다음과 같다. (출처: 위키피디아)</p><ul><li><p>10 μSv – 오늘받은 평균 방사선</p></li><li><p>0.02 ~ 0.04 mSv = 20 ~ 40 μSv – 흉부 X-레이</p></li><li><p>40 μSv – 뉴욕에서 L.A.까지 비행기를 타면받는 방사선</p></li><li><p>100 μSv – 치과 용 X- 레이 동안받는 방사선</p></li><li><p>0.24 mSv – 해수면에 도달하는 우주입자선 (연간) </p></li><li><p>0.28 mSv – 지하로부터 나오는 지상 방사선 (연간) </p></li><li><p>800 μSv – 사고 기간 동안 Three-Mile Island의 총 방사선 량</p></li><li><p>2 mSv – 미국 가정의 연 평균 라돈 방사선 양</p></li><li><p>3000 μSv – 유방 조영술의 방사선 량</p></li><li><p>3650 μSv (= 10 μSv per day = 0.081 μSv/h) = 2.5 ~ 3.5 mSv – 일반적인 배경복사 (장소에 따른 편차가 큼)</p><p>​                        ※ 호주 1.5 mSv, 미국 3 mSv, 이란, 인도, 유럽의 연간 배경 방사선 양 : 50 mSv</p></li><li><p>0.8 ~ 5 mSv – 뇌 CT 스캔</p></li><li><p>6 ~ 18 mSv – 흉부 CT 스캔</p></li><li><p>6.2 mSv – 미국인 연 평균 방사선 노출량</p></li><li><p>9 mSv – 뉴욕-동경간 항공 승무원이 받는 연간 방사선 양</p></li><li><p>14 mSv – 내장기관 X-레이</p></li><li><p>20 mSv – 핵관련 종사자 연간 허용치</p></li><li><p>50000 μSv – 연간 최대 허용 직업 선량</p><p>​                       ※ 시간당 최대 방사능 = 50000 μSv / (24 * 365) = 5.70 μSv/h</p></li><li><p>100000 μSv – 암 위험 증가와 관련이 있을 가능성이 높은 연간 최저 용량</p></li><li><p>80~160 mSv – 하루 담배 1.5갑씩 1년을 필 때</p></li><li><p>350 mSv – 체르노빌 사태 후 이주를 결정한 근거 (매년)</p></li><li><p>1 Sv = 1000000 μSv – 약간의 혈액 변화 유발</p></li><li><p>2 Sv = 2000000 μSv – 심각한 방사선 중독 (때로는 치명적)</p></li><li><p>2 ~ 5 Sv = 2000000 ~ 5000000 μSv – 메스꺼움, 탈모, 출혈을 유발, 많은 경우 사망</p></li><li><p>6 Sv = 6000000 μSv – 2개월 이내에 80% 이상 사망</p></li></ul><br><h4 id="Radiation-Cartooon"><a href="#Radiation-Cartooon" class="headerlink" title="Radiation Cartooon"></a>Radiation Cartooon</h4><p><img src="/image/RADIATION-Poster-Cartoon.jpg"></p><br><br><h1 id="Electrical-Information-for-GM-Tubes"><a href="#Electrical-Information-for-GM-Tubes" class="headerlink" title="Electrical Information for GM Tubes"></a>Electrical Information for GM Tubes</h1><table><thead><tr><th>Tube</th><th>Working Voltages</th><th>Nominal Voltahe</th><th>Anode Resisor</th><th>Dead Time μs</th><th>Detection</th></tr></thead><tbody><tr><td>SBM-20</td><td>350 ~ 450V</td><td>400V</td><td>4M7</td><td>100 ~ 190</td><td>β, γ</td></tr><tr><td>SBM-19</td><td>“</td><td>“</td><td>4M7</td><td>125 ~ 250</td><td>β, γ</td></tr><tr><td>SBT-10</td><td>“</td><td>“</td><td>4M7</td><td>65</td><td>β, γ</td></tr><tr><td>SI29BG</td><td>“</td><td>“</td><td>4M7</td><td>95</td><td>β, γ</td></tr><tr><td>SI21BG</td><td>“</td><td>“</td><td>10M</td><td>30</td><td>β, γ</td></tr><tr><td>SBT-9</td><td>“</td><td>380V</td><td>4M7</td><td>50 ~ 100</td><td>α, β, γ</td></tr><tr><td>SBT-11A</td><td>“</td><td>390V</td><td>3M3 ~ 4M7</td><td>75</td><td>α, β, γ</td></tr><tr><td>SI-22G</td><td>“</td><td>400V</td><td>10M</td><td></td><td>γ</td></tr><tr><td>SI180G</td><td>“</td><td>“</td><td>4M7</td><td></td><td>γ</td></tr><tr><td>LND-712</td><td>450 ~ 650V</td><td>500V</td><td>10M</td><td>90</td><td>α, β, γ</td></tr><tr><td>LND-7317</td><td>475 ~ 675V</td><td>“</td><td>4M7</td><td>40</td><td>α, β, γ</td></tr><tr><td>Philips 18504</td><td>425 ~ 675V</td><td>“</td><td>10M</td><td>100</td><td>α, β, γ, n</td></tr></tbody></table><p>(출처: rhelectronics.net)</p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/science/">science</category>
      
      
      
      <comments>http://stemwith.github.io/2020/08/23/Arduino-Geiger-Counter/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>esp32 OpenWeatherMap에서 실시간 날씨 정보 받기</title>
      <link>http://stemwith.github.io/2019/11/19/ESP32-OpenWeatherMap/</link>
      <guid>http://stemwith.github.io/2019/11/19/ESP32-OpenWeatherMap/</guid>
      <pubDate>Tue, 19 Nov 2019 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;OpenWeatherMap-org&quot;&gt;&lt;a href=&quot;#OpenWeatherMap-org&quot; class=&quot;headerlink&quot; title=&quot;OpenWeatherMap.org&quot;&gt;&lt;/a&gt;OpenWeatherMap.org&lt;/h1&gt;&lt;p&gt;&lt;a hre</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="OpenWeatherMap-org"><a href="#OpenWeatherMap-org" class="headerlink" title="OpenWeatherMap.org"></a>OpenWeatherMap.org</h1><p><a href="https://openweathermap.org/">OpenWeatherMap</a>은 세계 각 지역의 현재 날씨, 예보, 과거 날씨 데이터를 제공하는 사이트입니다. (몇가지 제약이 있긴 하지만) 회원가입을 통해서 API Key를 생성하고 이를 통해 무료로 실시간 날씨 정보를 얻을 수 있습니다.</p><br><h4 id="Free-Current-weather-and-forecasts-collection"><a href="#Free-Current-weather-and-forecasts-collection" class="headerlink" title="Free Current weather and forecasts collection"></a>Free Current weather and forecasts collection</h4><ul><li>60 Calls per minute (no more than)</li><li><a href="https://openweathermap.org/current">Current weather API</a></li><li><a href="https://openweathermap.org/forecast5">5 days/3 hour forecast API</a></li><li><a href="https://openweathermap.org/api/weathermaps">Weather maps 1.0</a> </li><li><a href="https://openweathermap.org/api/uvi">UV index</a> </li><li><a href="https://openweathermap.org/triggers">Weather alerts</a> </li><li>Availability 95% </li><li>Weather API data update  &lt; 2 hours</li><li>Weather maps data update  &lt; 3 hours</li><li>API lifetime support :  Current version</li><li>Historical weather collection은 모두 Starter 이상(유료)</li></ul><br><h2 id="Current-weather-collections-API-Key-생성"><a href="#Current-weather-collections-API-Key-생성" class="headerlink" title="Current weather collections API Key 생성"></a>Current weather collections API Key 생성</h2><ol><li><p>Sign Up을 클릭하여 회원가입을 하고,</p><p><img src="/image/owm-api-01.png"></p><br><p><img src="/image/owm-api-02.png"></p><br></li><li><p>Sign In을 클릭하여 로그인한 뒤, API Keys를 누릅니다.</p><p><img src="/image/owm-api-03.png"></p><br><p><img src="/image/owm-api-04.png"></p><br></li><li><p> Default로 지정되어 있는 Key를 복사하거나, 새로운 Key를 생성합니다.</p></li></ol><p>   <img src="/image/owm-api-05.png"></p><br><ol start="4"><li><p>API Key를 이용하는 방법은 메인홈페이지 메뉴의 API 탭을 누른뒤, 얻고자 하는 날씨정보(예를 들어 Current weather data)의 <a href="https://openweathermap.org/api"><strong>API doc</strong></a>을 참고하세요.</p><p><img src="/image/owm-api-06.png"></p></li><li><p>먼저 인터넷 브라우저를 통해 날씨정보가 어떻게 출력되는지 알아보기위하여 아래 홈페이지 주소에 접속해봅니다. 이때 주소의 끝부분에 있는 YOUR_API_KEY 대신 본인의 API Key를 입력합니다.</p></li></ol><br><ul><li>서울: <a href="https://api.openweathermap.org/data/2.5/weather?q=Seoul,KR&amp;units=metric&amp;APPID=YOUR_API_KEY">https://api.openweathermap.org/data/2.5/weather?q=Seoul,KR&amp;units=metric&amp;APPID=YOUR_API_KEY</a></li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.openweathermap.org/data/2.5/weather?q=Seoul,KR&amp;units=metric&amp;APPID=1bf3d5e1bd2e5934aadd86..........</span><br></pre></td></tr></table></figure><br><ul><li>런던: <a href="https://api.openweathermap.org/data/2.5/weather?q=London,GB&amp;units=metric&amp;appid=YOUR_API_KEY">https://api.openweathermap.org/data/2.5/weather?q=London,GB&amp;units=metric&amp;appid=YOUR_API_KEY</a></li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.openweathermap.org/data/2.5/weather?q=London,GB&amp;units=metric&amp;APPID=1bf3d5e1bd2e5934aadd86..........</span><br></pre></td></tr></table></figure><br><ul><li>상하이: <a href="https://api.openweathermap.org/data/2.5/weather?q=Shanghai,CN&amp;units=metric&amp;APPID=YOUR_API_KEY">https://api.openweathermap.org/data/2.5/weather?q=Shanghai,CN&amp;units=metric&amp;APPID=YOUR_API_KEY</a></li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.openweathermap.org/data/2.5/weather?q=Shanghai,CN&amp;units=metric&amp;APPID=1bf3d5e1bd2e5934aadd86..........</span><br></pre></td></tr></table></figure><br><h4 id="브라우저에-출력되는-내용"><a href="#브라우저에-출력되는-내용" class="headerlink" title="브라우저에 출력되는 내용"></a>브라우저에 출력되는 내용</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;coord&quot;</span>:&#123;<span class="attr">&quot;lon&quot;</span>:<span class="number">-0.13</span>,<span class="attr">&quot;lat&quot;</span>:<span class="number">51.51</span>&#125;,<span class="attr">&quot;weather&quot;</span>:[&#123;<span class="attr">&quot;id&quot;</span>:<span class="number">804</span>,<span class="attr">&quot;main&quot;</span>:<span class="string">&quot;Clouds&quot;</span>,<span class="attr">&quot;description&quot;</span>:<span class="string">&quot;overcast clouds&quot;</span>,<span class="attr">&quot;icon&quot;</span>:<span class="string">&quot;04n&quot;</span>&#125;],<span class="attr">&quot;base&quot;</span>:<span class="string">&quot;stations&quot;</span>,<span class="attr">&quot;main&quot;</span>:&#123;<span class="attr">&quot;temp&quot;</span>:<span class="number">277.16</span>,<span class="attr">&quot;pressure&quot;</span>:<span class="number">1007</span>,<span class="attr">&quot;humidity&quot;</span>:<span class="number">86</span>,<span class="attr">&quot;temp_min&quot;</span>:<span class="number">274.82</span>,<span class="attr">&quot;temp_max&quot;</span>:<span class="number">279.26</span>&#125;,<span class="attr">&quot;visibility&quot;</span>:<span class="number">8000</span>,<span class="attr">&quot;wind&quot;</span>:&#123;<span class="attr">&quot;speed&quot;</span>:<span class="number">5.1</span>,<span class="attr">&quot;deg&quot;</span>:<span class="number">90</span>&#125;,<span class="attr">&quot;clouds&quot;</span>:&#123;<span class="attr">&quot;all&quot;</span>:<span class="number">90</span>&#125;,<span class="attr">&quot;dt&quot;</span>:<span class="number">1574300635</span>,<span class="attr">&quot;sys&quot;</span>:&#123;<span class="attr">&quot;type&quot;</span>:<span class="number">1</span>,<span class="attr">&quot;id&quot;</span>:<span class="number">1414</span>,<span class="attr">&quot;country&quot;</span>:<span class="string">&quot;GB&quot;</span>,<span class="attr">&quot;sunrise&quot;</span>:<span class="number">1574321288</span>,<span class="attr">&quot;sunset&quot;</span>:<span class="number">1574352288</span>&#125;,<span class="attr">&quot;timezone&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;id&quot;</span>:<span class="number">2643743</span>,<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;London&quot;</span>,<span class="attr">&quot;cod&quot;</span>:<span class="number">200</span>&#125;</span><br></pre></td></tr></table></figure><br><p>그밖의 도시 및 국가명은 Maps&gt; Weather maps를 클릭하여 표시되는 지도를 통해 확인할 수 있습니다.</p><br><br><h2 id="ESP32에서-사용하는-경우"><a href="#ESP32에서-사용하는-경우" class="headerlink" title="ESP32에서 사용하는 경우"></a>ESP32에서 사용하는 경우</h2><br><h3 id="wifi-접속-설정"><a href="#wifi-접속-설정" class="headerlink" title="wifi 접속 설정"></a>wifi 접속 설정</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid     = <span class="string">&quot;your ssid&quot;</span>;                  <span class="comment">// 연결할 SSID</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;your password&quot;</span>;              <span class="comment">// 연결할 SSID의 비밀번호</span></span><br></pre></td></tr></table></figure><ul><li>wifi에 접속하기 위한 ssid와 password를 설정</li></ul><br><h3 id="OpenWeatherMap-org-접속-설정"><a href="#OpenWeatherMap-org-접속-설정" class="headerlink" title="OpenWeatherMap.org 접속 설정"></a>OpenWeatherMap.org 접속 설정</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> String endpoint = <span class="string">&quot;https://api.openweathermap.org&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String ver = <span class="string">&quot;/data/2.5/weather?q=&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String city = <span class="string">&quot;Shanghai,CN&quot;</span>;                 <span class="comment">// City,Country (띄어쓰기 금지)</span></span><br><span class="line"><span class="keyword">const</span> String appid = <span class="string">&quot;&amp;units=metric&amp;APPID=&quot;</span>;       <span class="comment">// Units: metric</span></span><br><span class="line"><span class="keyword">const</span> String key = <span class="string">&quot;1bf3d5e1bd2e5934aadd86..........&quot;</span>;    <span class="comment">// API Key</span></span><br></pre></td></tr></table></figure><ul><li>날씨 데이터를 받아올 도시, 국가를 지정 (Shanghai,CN)  (※주의: <strong>Shanghai,CN</strong> 사이에 <strong>띄어쓰기를 하면 안됨</strong>)</li><li>key 변수에 본의 API Key를 입력</li></ul><br><h3 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;HTTPClient.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid     = <span class="string">&quot;your ssid&quot;</span>;                  <span class="comment">// 연결할 SSID</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;your password&quot;</span>;              <span class="comment">// 연결할 SSID의 비밀번호</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// OpenWeatherMap.org: Shanghai,CN</span></span><br><span class="line"><span class="keyword">const</span> String endpoint = <span class="string">&quot;https://api.openweathermap.org&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String ver = <span class="string">&quot;/data/2.5/weather?q=&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String city = <span class="string">&quot;Shanghai,CN&quot;</span>;                 <span class="comment">// City,Country (띄어쓰기 금지)</span></span><br><span class="line"><span class="keyword">const</span> String appid = <span class="string">&quot;&amp;units=metric&amp;APPID=&quot;</span>;       <span class="comment">// Units: metric</span></span><br><span class="line"><span class="keyword">const</span> String key = <span class="string">&quot;1bf3d5e1bd2e5934aadd86..........&quot;</span>;    <span class="comment">// API Key</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    WiFi.<span class="built_in">begin</span>(ssid, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 와이파이 연결</span></span><br><span class="line">    <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() != WL_CONNECTED) &#123;</span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;Connecting to WiFi..&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Connected to the WiFi network&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 연결 여부 로그 출력</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ((WiFi.<span class="built_in">status</span>() == WL_CONNECTED)) &#123;    <span class="comment">// Check the current connection status</span></span><br><span class="line"> </span><br><span class="line">    HTTPClient http;</span><br><span class="line"> </span><br><span class="line">    http.<span class="built_in">begin</span>(endpoint + ver + city + appid + key); <span class="comment">// Specify the URL</span></span><br><span class="line">    <span class="keyword">int</span> httpCode = http.<span class="built_in">GET</span>();                       <span class="comment">// Make the request</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (httpCode &gt; <span class="number">0</span>) &#123;                              <span class="comment">// Check for the returning code</span></span><br><span class="line"> </span><br><span class="line">        String json = http.<span class="built_in">getString</span>();         <span class="comment">// get JSON format data</span></span><br><span class="line">        Serial.<span class="built_in">println</span>(httpCode);</span><br><span class="line">        Serial.<span class="built_in">println</span>(json);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;Error on HTTP request&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    http.<span class="built_in">end</span>();                                     <span class="comment">// Free the resources</span></span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">30000</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="출력-DATA"><a href="#출력-DATA" class="headerlink" title="출력 DATA"></a>출력 DATA</h3><p>출력 데이터는 <strong>JSON</strong>(JavaScript Object Notation)을 기반으로 합니다. JSON은 프로그래밍 언어에 관계없이 데이터를 생성하고 읽을 수 있도록 만들어졌으며, 이를 통해 상호간에 보다 쉽게 데이터를 교환이 가능한 텍스트 기반의 데이터 교환 방식입니다. OpenWeatherMap에서도 이 방식을 사용하여 날씨 데이터를 생성하여 출력하고 있으며, 출력 데이터의 형태는 아래와 같습니다.</p><blockquote><p>스케치 맨 아래라인의 delay 명령으로 인해 10초마다 1번씩 data를 출력합니다. 단, OpenWeatherMap free service의 update time이 2시간 이하로 되어 있으므로, 자료 갱신이 매 출력시마다 진행되지는 않습니다.</p></blockquote><p><img src="/image/owm-01.png"></p><br><p>Firefox 등의 몇몇 인터넷 브라우저에서는 JSON 데이터를 보다 직관적으로 이해할 수 있도록 계층별로 나누어 출력해주기도 합니다.</p><p><img src="/image/owm-02.png"></p><br><br><h2 id="JSON-Parsing"><a href="#JSON-Parsing" class="headerlink" title="JSON Parsing"></a>JSON Parsing</h2><p>위와 같이 복잡한 형태로 출력되는 날씨 데이터 중에서 필요한 날씨 정보를 추출하기 위하여 JSON (JavaScript Object Notation) 파싱 과정을 거쳐야 하는데요. 이를 위해 아두이노 IDE에서 Json 파싱을 위한 라이브러리를 설치하여야 합니다.</p><br><h3 id="라이브러리-설치"><a href="#라이브러리-설치" class="headerlink" title="라이브러리 설치"></a>라이브러리 설치</h3><p>ArduinoJson (by Benoit Blanchon) 라이브러리 (version 6)를 설치합니다.</p><p><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong></p><p><img src="/image/json-01.png"></p><br><p><img src="/image/json-02.png"></p><br><h3 id="Memory-pool-크기-계산"><a href="#Memory-pool-크기-계산" class="headerlink" title="Memory pool 크기 계산"></a>Memory pool 크기 계산</h3><ol><li>JSON 파싱에 사용할 배열의 크기를 계산하여 메모리를 확보합니다. 이를 위해 샘플로 사용할 JSON데이터가 필요하므로, 먼저 웹브라우저에서 OpenWeatherMap에 접속한 뒤,</li></ol><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.openweathermap.org/data/2.5/weather?q=Shanghai,CN&amp;units=metric&amp;APPID=1bf3d5e1bd2e5934aadd86..........</span><br></pre></td></tr></table></figure><br><ol start="2"><li>출력되는 JSON 데이터를 드래그하여 복사합니다.</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;coord&quot;</span>:&#123;<span class="attr">&quot;lon&quot;</span>:<span class="number">-0.13</span>,<span class="attr">&quot;lat&quot;</span>:<span class="number">51.51</span>&#125;,<span class="attr">&quot;weather&quot;</span>:[&#123;<span class="attr">&quot;id&quot;</span>:<span class="number">804</span>,<span class="attr">&quot;main&quot;</span>:<span class="string">&quot;Clouds&quot;</span>,<span class="attr">&quot;description&quot;</span>:<span class="string">&quot;overcast clouds&quot;</span>,<span class="attr">&quot;icon&quot;</span>:<span class="string">&quot;04n&quot;</span>&#125;],<span class="attr">&quot;base&quot;</span>:<span class="string">&quot;stations&quot;</span>,<span class="attr">&quot;main&quot;</span>:&#123;<span class="attr">&quot;temp&quot;</span>:<span class="number">277.16</span>,<span class="attr">&quot;pressure&quot;</span>:<span class="number">1007</span>,<span class="attr">&quot;humidity&quot;</span>:<span class="number">86</span>,<span class="attr">&quot;temp_min&quot;</span>:<span class="number">274.82</span>,<span class="attr">&quot;temp_max&quot;</span>:<span class="number">279.26</span>&#125;,<span class="attr">&quot;visibility&quot;</span>:<span class="number">8000</span>,<span class="attr">&quot;wind&quot;</span>:&#123;<span class="attr">&quot;speed&quot;</span>:<span class="number">5.1</span>,<span class="attr">&quot;deg&quot;</span>:<span class="number">90</span>&#125;,<span class="attr">&quot;clouds&quot;</span>:&#123;<span class="attr">&quot;all&quot;</span>:<span class="number">90</span>&#125;,<span class="attr">&quot;dt&quot;</span>:<span class="number">1574300635</span>,<span class="attr">&quot;sys&quot;</span>:&#123;<span class="attr">&quot;type&quot;</span>:<span class="number">1</span>,<span class="attr">&quot;id&quot;</span>:<span class="number">1414</span>,<span class="attr">&quot;country&quot;</span>:<span class="string">&quot;GB&quot;</span>,<span class="attr">&quot;sunrise&quot;</span>:<span class="number">1574321288</span>,<span class="attr">&quot;sunset&quot;</span>:<span class="number">1574352288</span>&#125;,<span class="attr">&quot;timezone&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;id&quot;</span>:<span class="number">2643743</span>,<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;London&quot;</span>,<span class="attr">&quot;cod&quot;</span>:<span class="number">200</span>&#125;</span><br></pre></td></tr></table></figure><br><ol start="3"><li><a href="https://arduinojson.org/assistant">https://arduinojson.org/assistant</a> 에 접속한 뒤, <strong>Input</strong>란에 있는 내용을 모두 지우고 복사한 JSON데이터를 붙여넣기하면, Memory pool size가 자동으로 계산됩니다.</li></ol><p><img src="/image/owm-04.png"></p><br><ol start="4"><li>Memory pool size의 Expression부분을 드래그하여 복사하고, Additional bytes for strings dubplucation 부분의 숫자를 이용하여 스케치에서 다음의 형식으로 변수를 생성합니다.</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">size_t</span> capacity = <span class="built_in">JSON_ARRAY_SIZE</span>(<span class="number">1</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">1</span>) + <span class="number">2</span>*<span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">2</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">4</span>) + <span class="number">2</span>*<span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">5</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">13</span>) + <span class="number">240</span>;</span><br></pre></td></tr></table></figure><blockquote><p>실제로는 아래 Parsing Program에 이미 변수가 설정되어 있으므로, 이 과정은 수행하지 않아도 됩니다.</p></blockquote><br><h3 id="Parsing-program"><a href="#Parsing-program" class="headerlink" title="Parsing program"></a>Parsing program</h3><ol><li>Memory pool size가 출력된 화면의 아래쪽에 Parsing program도 함께 출력됩니다.</li></ol><p><img src="/image/owm-05.png"></p><br><ol start="2"><li>우선 Parsing Program 전체를 복사한 뒤, 스케치의 void loop() 부분에 붙여넣기 합니다.</li></ol><br><ol start="3"><li>밑줄친 부분의 json 변수가 나타나 있는 라인을 모두 지우고 </li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* json = <span class="string">&quot;&#123;\&quot;coord\&quot;:&#123;\&quot;lon\&quot;:121.49,\&quot;lat\&quot;:31.23&#125;,\&quot;weather\&quot;:[&#123;\&quot;id\&quot;:804,\&quot;main\&quot;:\&quot;Clouds\&quot;,\&quot;description\&quot;:\&quot;overcast clouds\&quot;,\&quot;icon\&quot;:\&quot;04d\&quot;&#125;],\&quot;base\&quot;:\&quot;stations\&quot;,\&quot;main\&quot;:&#123;\&quot;temp\&quot;:293.02,\&quot;pressure\&quot;:1027,\&quot;humidity\&quot;:55,\&quot;temp_min\&quot;:289.82,\&quot;temp_max\&quot;:298.71&#125;,\&quot;visibility\&quot;:10000,\&quot;wind\&quot;:&#123;\&quot;speed\&quot;:3,\&quot;deg\&quot;:60&#125;,\&quot;clouds\&quot;:&#123;\&quot;all\&quot;:94&#125;,\&quot;dt\&quot;:1574303919,\&quot;sys\&quot;:&#123;\&quot;type\&quot;:1,\&quot;id\&quot;:9659,\&quot;country\&quot;:\&quot;CN\&quot;,\&quot;sunrise\&quot;:1574288762,\&quot;sunset\&quot;:1574326426&#125;,\&quot;timezone\&quot;:28800,\&quot;id\&quot;:1796236,\&quot;name\&quot;:\&quot;Shanghai\&quot;,\&quot;cod\&quot;:200&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><br><ol start="4"><li> OpenWeatherMap에서 실시간으로 받는 String 형식의 데이터 변수로 바꿔줍니다.</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String json = http.<span class="built_in">getString</span>();</span><br></pre></td></tr></table></figure><br><ol start="5"><li>Timezone 반영을 위하여, 붙여넣기 한 Parsing program의 아래 부분에 아래 내용을 추가합니다.</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dt = dt + timezone;                     <span class="comment">// for GMT+8 -&gt; +28800, for GMT+9 -&gt; +32400</span></span><br><span class="line">sys_sunrise = sys_sunrise + timezone;</span><br><span class="line">sys_sunset = sys_sunset + timezone;</span><br></pre></td></tr></table></figure><br><ol start="6"><li><p>UNIX Timestamp로 표기되는 시간을 일반적인 날짜, 시간으로 표기되도록 변환해줍니다. 이를 위해서 timelib.h 파일을 이용해야하는데, 이 파일은 Time 라이브러리(by Michael Margolis)에 포함되어 있지요. 그러므로 라이브러리 매니저를 통해 Time라이브러리를 찾아 설치해줍니다.</p><p><img src="/image/owm-10.png"></p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">year</span>(dt), <span class="built_in">month</span>(dt), <span class="built_in">day</span>(dt), <span class="built_in">hour</span>(dt), <span class="built_in">minute</span>(dt), <span class="built_in">second</span>(dt), <span class="built_in">weekday</span>(dt));</span><br></pre></td></tr></table></figure><p>​        위의 스케치를 통해서 UTC를 YYYY.MM.DD HH:MM:SS(요일) 형태의 날짜를 변환하며, printf문을 통해 출력할 수 있습니다.</p><br><h3 id="Data-출력에-사용한-variables"><a href="#Data-출력에-사용한-variables" class="headerlink" title="Data 출력에 사용한 variables"></a>Data 출력에 사용한 variables</h3><p>JSON 형식의 데이터를 파싱할때 사용한 변수들입니다.</p><table><thead><tr><th>내용</th><th>형식</th><th>변수</th><th>unit</th></tr></thead><tbody><tr><td>UNIX Time(UTC)</td><td>long</td><td>dt</td><td></td></tr><tr><td>Weather ID</td><td>int</td><td>weather_0_id</td><td></td></tr><tr><td>Weather Main</td><td>const char*</td><td>weather_0_main</td><td></td></tr><tr><td>Weather Description</td><td>const char*</td><td>weather_0_description</td><td></td></tr><tr><td>Weather Icon ID</td><td>const char*</td><td>weather_0_icon</td><td></td></tr><tr><td>Temperature</td><td>float</td><td>main_temp</td><td>℃</td></tr><tr><td>Temperature Max.</td><td>float</td><td>main_temp_max</td><td>℃</td></tr><tr><td>Temperature Min.</td><td>float</td><td>main_temp_min</td><td>℃</td></tr><tr><td>Pressure</td><td>int</td><td>main_pressure</td><td>hPa</td></tr><tr><td>Humidity</td><td>int</td><td>main_humidity</td><td>%</td></tr><tr><td>Visibility</td><td>int</td><td>visibility</td><td>m</td></tr><tr><td>Wind Speed</td><td>int</td><td>wind_speed</td><td>m/s</td></tr><tr><td>Wind Degree</td><td>int</td><td>wind_deg</td><td>º</td></tr><tr><td>Clouds</td><td>int</td><td>clouds_all</td><td></td></tr><tr><td>Sunrise</td><td>long</td><td>sys_sunrise</td><td></td></tr><tr><td>Sunset</td><td>long</td><td>sys_sunset</td><td></td></tr><tr><td>City ID</td><td>long</td><td>id</td><td></td></tr><tr><td>City name</td><td>const char*</td><td>name</td><td></td></tr><tr><td>Country</td><td>const char*</td><td>sys_country</td><td></td></tr><tr><td>Longitude</td><td>float</td><td>coord_lon</td><td>º</td></tr><tr><td>Latitude</td><td>float</td><td>coord_lat</td><td>º</td></tr><tr><td>GMT</td><td>int</td><td>timezone  (※timezone/3600)</td><td>hour</td></tr><tr><td></td><td>int</td><td>sys_type</td><td></td></tr><tr><td></td><td>int</td><td>sys_id</td><td></td></tr><tr><td>Base</td><td>const char*</td><td>base</td><td></td></tr><tr><td>COD</td><td>int</td><td>cod</td><td></td></tr></tbody></table><br><br><h2 id="전체-sketch"><a href="#전체-sketch" class="headerlink" title="전체 sketch"></a>전체 sketch</h2><p>위의 과정을 통해 만들진 부분 스케치를 병합하여 JSON 파싱을 위한 전체 스케치를 구성해봅니다.</p><blockquote><p>ArduinoJson 라이브러리의 경우 version 5와 6의 사용 문법이 조금 다릅니다. 현재 Arduino IDE에서 라이브러리 추가과정을 통해 다운로드 받을 수 있는 최신 라이브러리 버전이 ArduinoJson 6이므로, 이에 맞게 작성하여야합니다. (기존의 ArduinoJson 5에 맞게 작성된 스케치는 컴파일이 되지 않으므로, <a href="https://arduinojson.org/v6/doc/upgrade/">Migrating from version 5 to 6</a> 문서를 참고하여 스케치를 변경해야 합니다.)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;HTTPClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TimeLib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid     = <span class="string">&quot;your ssid&quot;</span>;                  <span class="comment">// 연결할 SSID</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;your password&quot;</span>;              <span class="comment">// 연결할 SSID의 비밀번호</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> String endpoint = <span class="string">&quot;https://api.openweathermap.org&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String ver = <span class="string">&quot;/data/2.5/weather?q=&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String city = <span class="string">&quot;Shanghai,CN&quot;</span>;                 <span class="comment">// City,Country (띄어쓰기 금지)</span></span><br><span class="line"><span class="keyword">const</span> String appid = <span class="string">&quot;&amp;units=metric&amp;APPID=&quot;</span>;       <span class="comment">// Units: metric</span></span><br><span class="line"><span class="keyword">const</span> String key = <span class="string">&quot;1bf3d5e1bd2e5934aadd86..........&quot;</span>;    <span class="comment">// API Key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> offset_days = <span class="number">3</span>;     <span class="comment">// 3 days for convert unix timestamp to datetime</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line"> </span><br><span class="line">  WiFi.<span class="built_in">begin</span>(ssid, password);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Connecting to WiFi..&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;Connected to the WiFi network&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ((WiFi.<span class="built_in">status</span>() == WL_CONNECTED)) &#123;      <span class="comment">// Check the current connection status</span></span><br><span class="line"> </span><br><span class="line">    HTTPClient http;</span><br><span class="line"> </span><br><span class="line">    http.<span class="built_in">begin</span>(endpoint + ver + city + appid + key); <span class="comment">// Specify the URL</span></span><br><span class="line">    <span class="keyword">int</span> httpCode = http.<span class="built_in">GET</span>();                       <span class="comment">// Make the request</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (httpCode &gt; <span class="number">0</span>) &#123;                              <span class="comment">// Check for the returning code</span></span><br><span class="line">      <span class="comment">// 데이터 파싱</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">size_t</span> capacity = <span class="built_in">JSON_ARRAY_SIZE</span>(<span class="number">1</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">1</span>) + <span class="number">2</span>*<span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">2</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">4</span>) + <span class="number">2</span>*<span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">5</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">13</span>) + <span class="number">270</span>;</span><br><span class="line">      <span class="function">DynamicJsonDocument <span class="title">doc</span><span class="params">(capacity)</span></span>;</span><br><span class="line"></span><br><span class="line">      String json = http.<span class="built_in">getString</span>();                <span class="comment">// get JSON format data</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">deserializeJson</span>(doc, json);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">float</span> coord_lon = doc[<span class="string">&quot;coord&quot;</span>][<span class="string">&quot;lon&quot;</span>]; <span class="comment">// 121.49</span></span><br><span class="line">      <span class="keyword">float</span> coord_lat = doc[<span class="string">&quot;coord&quot;</span>][<span class="string">&quot;lat&quot;</span>]; <span class="comment">// 31.23</span></span><br><span class="line"></span><br><span class="line">      JsonObject weather_0 = doc[<span class="string">&quot;weather&quot;</span>][<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">int</span> weather_0_id = weather_0[<span class="string">&quot;id&quot;</span>]; <span class="comment">// 804</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* weather_0_main = weather_0[<span class="string">&quot;main&quot;</span>]; <span class="comment">// &quot;Clouds&quot;</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* weather_0_description = weather_0[<span class="string">&quot;description&quot;</span>]; <span class="comment">// &quot;overcast clouds&quot;</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* weather_0_icon = weather_0[<span class="string">&quot;icon&quot;</span>]; <span class="comment">// &quot;04d&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      JsonObject weather_1 = weather[1];</span></span><br><span class="line"><span class="comment">      int weather_1_id = weather_1[&quot;id&quot;]; // 701</span></span><br><span class="line"><span class="comment">      const char* weather_1_main = weather_1[&quot;main&quot;]; // &quot;Mist&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_1_description = weather_1[&quot;description&quot;]; // &quot;mist&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_1_icon = weather_1[&quot;icon&quot;]; // &quot;50n&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      JsonObject weather_2 = weather[2];</span></span><br><span class="line"><span class="comment">      int weather_2_id = weather_2[&quot;id&quot;]; // 741</span></span><br><span class="line"><span class="comment">      const char* weather_2_main = weather_2[&quot;main&quot;]; // &quot;Fog&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_2_description = weather_2[&quot;description&quot;]; // &quot;fog&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_2_icon = weather_2[&quot;icon&quot;]; // &quot;50n&quot;</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* base = doc[<span class="string">&quot;base&quot;</span>]; <span class="comment">// &quot;stations&quot;</span></span><br><span class="line"></span><br><span class="line">      JsonObject main = doc[<span class="string">&quot;main&quot;</span>];</span><br><span class="line">      <span class="keyword">float</span> main_temp = main[<span class="string">&quot;temp&quot;</span>]; <span class="comment">// 293.02</span></span><br><span class="line">      <span class="keyword">int</span> main_pressure = main[<span class="string">&quot;pressure&quot;</span>]; <span class="comment">// 1027</span></span><br><span class="line">      <span class="keyword">int</span> main_humidity = main[<span class="string">&quot;humidity&quot;</span>]; <span class="comment">// 55</span></span><br><span class="line">      <span class="keyword">float</span> main_temp_min = main[<span class="string">&quot;temp_min&quot;</span>]; <span class="comment">// 289.82</span></span><br><span class="line">      <span class="keyword">float</span> main_temp_max = main[<span class="string">&quot;temp_max&quot;</span>]; <span class="comment">// 298.71</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> visibility = doc[<span class="string">&quot;visibility&quot;</span>]; <span class="comment">// 10000</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> wind_speed = doc[<span class="string">&quot;wind&quot;</span>][<span class="string">&quot;speed&quot;</span>]; <span class="comment">// 3</span></span><br><span class="line">      <span class="keyword">int</span> wind_deg = doc[<span class="string">&quot;wind&quot;</span>][<span class="string">&quot;deg&quot;</span>]; <span class="comment">// 60</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> clouds_all = doc[<span class="string">&quot;clouds&quot;</span>][<span class="string">&quot;all&quot;</span>]; <span class="comment">// 94</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">long</span> dt = doc[<span class="string">&quot;dt&quot;</span>]; <span class="comment">// 1574303919</span></span><br><span class="line"></span><br><span class="line">      JsonObject sys = doc[<span class="string">&quot;sys&quot;</span>];</span><br><span class="line">      <span class="keyword">int</span> sys_type = sys[<span class="string">&quot;type&quot;</span>]; <span class="comment">// 1</span></span><br><span class="line">      <span class="keyword">int</span> sys_id = sys[<span class="string">&quot;id&quot;</span>]; <span class="comment">// 9659</span></span><br><span class="line">      <span class="comment">//float sys_message = sys[&quot;message&quot;]; // Internal parameter (0.0226)</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* sys_country = sys[<span class="string">&quot;country&quot;</span>]; <span class="comment">// &quot;CN&quot;</span></span><br><span class="line">      <span class="keyword">long</span> sys_sunrise = sys[<span class="string">&quot;sunrise&quot;</span>]; <span class="comment">// 1574288762</span></span><br><span class="line">      <span class="keyword">long</span> sys_sunset = sys[<span class="string">&quot;sunset&quot;</span>]; <span class="comment">// 1574326426</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> timezone = doc[<span class="string">&quot;timezone&quot;</span>]; <span class="comment">// 28800</span></span><br><span class="line">      <span class="keyword">long</span> id = doc[<span class="string">&quot;id&quot;</span>]; <span class="comment">// 1796236</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* name = doc[<span class="string">&quot;name&quot;</span>]; <span class="comment">// &quot;Shanghai&quot;</span></span><br><span class="line">      <span class="keyword">int</span> cod = doc[<span class="string">&quot;cod&quot;</span>]; <span class="comment">// 200</span></span><br><span class="line"></span><br><span class="line">      dt = dt + timezone;                <span class="comment">// for GMT+8 -&gt; +28800, for GMT+9 -&gt; +32400</span></span><br><span class="line">      sys_sunrise = sys_sunrise + timezone;</span><br><span class="line">      sys_sunset = sys_sunset + timezone;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//int main_sea_level = main[&quot;sea_level&quot;]; // Atmospheric pressure hPa on the sea level</span></span><br><span class="line">      <span class="comment">//int main_grnd_level = main[&quot;grnd_level&quot;]; // Atmospheric pressure hPa on the ground level     </span></span><br><span class="line">      <span class="comment">//int rain_1h = doc[&quot;rain&quot;][&quot;1h&quot;]; // Rain volume for the last 1 hour, mm</span></span><br><span class="line">      <span class="comment">//int rain_3h = doc[&quot;rain&quot;][&quot;3h&quot;]; // Rain volume for the last 3 hour, mm</span></span><br><span class="line">      <span class="comment">//int snow_1h = doc[&quot;snow&quot;][&quot;1h&quot;]; // Snow volume for the last 1 hour, mm</span></span><br><span class="line">      <span class="comment">//int snow_3h = doc[&quot;snow&quot;][&quot;3h&quot;]; // Snow volume for the last 3 hour, mm</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//데이터 출력</span></span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;UNIX Time of Weather: &quot;</span>); Serial.<span class="built_in">println</span>(dt);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Time of Weather: %4d-%02d-%02d %02d:%02d:%02d(%1d)\n&quot;</span>, <span class="built_in">year</span>(dt), <span class="built_in">month</span>(dt), <span class="built_in">day</span>(dt), <span class="built_in">hour</span>(dt), <span class="built_in">minute</span>(dt), <span class="built_in">second</span>(dt), <span class="built_in">weekday</span>(dt));</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather ID: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_id);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather Main: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_main);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather Description: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_description);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather Icon: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_icon);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Temperature(℃): &quot;</span>); Serial.<span class="built_in">println</span>(main_temp);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Temperature Max(℃): &quot;</span>); Serial.<span class="built_in">println</span>(main_temp_max);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Temperature Min(℃): &quot;</span>); Serial.<span class="built_in">println</span>(main_temp_min);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Pressure(hPa): &quot;</span>); Serial.<span class="built_in">println</span>(main_pressure);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Humidity(%): &quot;</span>); Serial.<span class="built_in">println</span>(main_humidity);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Visibility(m): &quot;</span>); Serial.<span class="built_in">println</span>(visibility);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Wind Speed(m/s): &quot;</span>); Serial.<span class="built_in">println</span>(wind_speed);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Wind Degree(º): &quot;</span>); Serial.<span class="built_in">println</span>(wind_deg);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Clouds: &quot;</span>); Serial.<span class="built_in">println</span>(clouds_all);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Sunrise: %02d:%02d:%02d\n&quot;</span>, <span class="built_in">hour</span>(sys_sunrise), <span class="built_in">minute</span>(sys_sunrise), <span class="built_in">second</span>(sys_sunrise));</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Sunset:  %02d:%02d:%02d\n&quot;</span>, <span class="built_in">hour</span>(sys_sunset), <span class="built_in">minute</span>(sys_sunset), <span class="built_in">second</span>(sys_sunset));</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;City/Country: &quot;</span>); Serial.<span class="built_in">print</span>(name); Serial.<span class="built_in">print</span>(<span class="string">&quot;/&quot;</span>); Serial.<span class="built_in">println</span>(sys_country);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;longitude/latidude: &quot;</span>); Serial.<span class="built_in">print</span>(coord_lon); Serial.<span class="built_in">print</span>(<span class="string">&quot;/&quot;</span>); Serial.<span class="built_in">println</span>(coord_lat);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Timezone: GMT+&quot;</span>); Serial.<span class="built_in">println</span>(timezone/<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Sea Level(hPa): &quot;); Serial.println(main_sea_level);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Ground Level(hPa): &quot;); Serial.println(main_grnd_level);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Rain 1h(mm): &quot;); Serial.println(rain_1h);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Rain 3h(mm): &quot;); Serial.println(rain_3h);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Snow 1h(mm): &quot;); Serial.println(snow_1h);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Snow 3h(mm): &quot;); Serial.println(snow_3h);</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;Error on HTTP request&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    http.<span class="built_in">end</span>();</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">30000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="출력-Data"><a href="#출력-Data" class="headerlink" title="출력 Data"></a>출력 Data</h3><p><img src="/image/owm-03.png"></p><br><br><h2 id="Weather-Condition-Code"><a href="#Weather-Condition-Code" class="headerlink" title="Weather Condition Code"></a>Weather Condition Code</h2><br><h3 id="Group-2xx-Thunderstorm"><a href="#Group-2xx-Thunderstorm" class="headerlink" title="Group 2xx: Thunderstorm"></a>Group 2xx: Thunderstorm</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>200</td><td>Thunderstorm</td><td>thunderstorm with light rain</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>201</td><td>Thunderstorm</td><td>thunderstorm with rain</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>202</td><td>Thunderstorm</td><td>thunderstorm with heavy rain</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>210</td><td>Thunderstorm</td><td>light thunderstorm</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>211</td><td>Thunderstorm</td><td>thunderstorm</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>212</td><td>Thunderstorm</td><td>heavy thunderstorm</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>221</td><td>Thunderstorm</td><td>ragged thunderstorm</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>230</td><td>Thunderstorm</td><td>thunderstorm with light drizzle</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>231</td><td>Thunderstorm</td><td>thunderstorm with drizzle</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr><tr><td>232</td><td>Thunderstorm</td><td>thunderstorm with heavy drizzle</td><td><img src="http://openweathermap.org/img/wn/11d@2x.png" alt="img"> 11d</td></tr></tbody></table><br><h3 id="Group-3xx-Drizzle"><a href="#Group-3xx-Drizzle" class="headerlink" title="Group 3xx: Drizzle"></a>Group 3xx: Drizzle</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>300</td><td>Drizzle</td><td>light intensity drizzle</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>301</td><td>Drizzle</td><td>drizzle</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>302</td><td>Drizzle</td><td>heavy intensity drizzle</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>310</td><td>Drizzle</td><td>light intensity drizzle rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>311</td><td>Drizzle</td><td>drizzle rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>312</td><td>Drizzle</td><td>heavy intensity drizzle rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>313</td><td>Drizzle</td><td>shower rain and drizzle</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>314</td><td>Drizzle</td><td>heavy shower rain and drizzle</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>321</td><td>Drizzle</td><td>shower drizzle</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr></tbody></table><br><h3 id="Group-5xx-Rain"><a href="#Group-5xx-Rain" class="headerlink" title="Group 5xx: Rain"></a>Group 5xx: Rain</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>500</td><td>Rain</td><td>light rain</td><td><img src="http://openweathermap.org/img/wn/10d@2x.png" alt="img"> 10d</td></tr><tr><td>501</td><td>Rain</td><td>moderate rain</td><td><img src="http://openweathermap.org/img/wn/10d@2x.png" alt="img"> 10d</td></tr><tr><td>502</td><td>Rain</td><td>heavy intensity rain</td><td><img src="http://openweathermap.org/img/wn/10d@2x.png" alt="img"> 10d</td></tr><tr><td>503</td><td>Rain</td><td>very heavy rain</td><td><img src="http://openweathermap.org/img/wn/10d@2x.png" alt="img"> 10d</td></tr><tr><td>504</td><td>Rain</td><td>extreme rain</td><td><img src="http://openweathermap.org/img/wn/10d@2x.png" alt="img"> 10d</td></tr><tr><td>511</td><td>Rain</td><td>freezing rain</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>520</td><td>Rain</td><td>light intensity shower rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>521</td><td>Rain</td><td>shower rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>522</td><td>Rain</td><td>heavy intensity shower rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr><tr><td>531</td><td>Rain</td><td>ragged shower rain</td><td><img src="http://openweathermap.org/img/wn/09d@2x.png" alt="img"> 09d</td></tr></tbody></table><br><h3 id="Group-6xx-Snow"><a href="#Group-6xx-Snow" class="headerlink" title="Group 6xx: Snow"></a>Group 6xx: Snow</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>600</td><td>Snow</td><td>light snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>601</td><td>Snow</td><td>Snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>602</td><td>Snow</td><td>Heavy snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>611</td><td>Snow</td><td>Sleet</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>612</td><td>Snow</td><td>Light shower sleet</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>613</td><td>Snow</td><td>Shower sleet</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>615</td><td>Snow</td><td>Light rain and snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>616</td><td>Snow</td><td>Rain and snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>620</td><td>Snow</td><td>Light shower snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>621</td><td>Snow</td><td>Shower snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr><tr><td>622</td><td>Snow</td><td>Heavy shower snow</td><td><img src="http://openweathermap.org/img/wn/13d@2x.png" alt="img"> 13d</td></tr></tbody></table><br><h3 id="Group-7xx-Atmosphere"><a href="#Group-7xx-Atmosphere" class="headerlink" title="Group 7xx: Atmosphere"></a>Group 7xx: Atmosphere</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>701</td><td>Mist</td><td>mist</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>711</td><td>Smoke</td><td>Smoke</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>721</td><td>Haze</td><td>Haze</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>731</td><td>Dust</td><td>sand/ dust whirls</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>741</td><td>Fog</td><td>fog</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>751</td><td>Sand</td><td>sand</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>761</td><td>Dust</td><td>dust</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>762</td><td>Ash</td><td>volcanic ash</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>771</td><td>Squall</td><td>squalls</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr><tr><td>781</td><td>Tornado</td><td>tornado</td><td><img src="http://openweathermap.org/img/wn/50d@2x.png" alt="img"> 50d</td></tr></tbody></table><br><h3 id="Group-800-Clear"><a href="#Group-800-Clear" class="headerlink" title="Group 800: Clear"></a>Group 800: Clear</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>800</td><td>Clear</td><td>clear sky</td><td><img src="http://openweathermap.org/img/wn/01d@2x.png" alt="img"> 01d <img src="http://openweathermap.org/img/wn/01n@2x.png" alt="img"> 01n</td></tr></tbody></table><br><h3 id="Group-80x-Clouds"><a href="#Group-80x-Clouds" class="headerlink" title="Group 80x: Clouds"></a>Group 80x: Clouds</h3><table><thead><tr><th>ID</th><th>Main</th><th>Description</th><th>Icon</th></tr></thead><tbody><tr><td>801</td><td>Clouds</td><td>few clouds: 11-25%</td><td><img src="http://openweathermap.org/img/wn/02d@2x.png" alt="img"> 02d <img src="http://openweathermap.org/img/wn/02n@2x.png" alt="img"> 02n</td></tr><tr><td>802</td><td>Clouds</td><td>scattered clouds: 25-50%</td><td><img src="http://openweathermap.org/img/wn/03d@2x.png" alt="img"> 03d <img src="http://openweathermap.org/img/wn/03n@2x.png" alt="img"> 03n</td></tr><tr><td>803</td><td>Clouds</td><td>broken clouds: 51-84%</td><td><img src="http://openweathermap.org/img/wn/04d@2x.png" alt="img"> 04d <img src="http://openweathermap.org/img/wn/04n@2x.png" alt="img"> 04n</td></tr><tr><td>804</td><td>Clouds</td><td>overcast clouds: 85-100%</td><td><img src="http://openweathermap.org/img/wn/04d@2x.png" alt="img"> 04d <img src="http://openweathermap.org/img/wn/04n@2x.png" alt="img"> 04n</td></tr></tbody></table><br><h3 id="ICON-출력방법"><a href="#ICON-출력방법" class="headerlink" title="ICON 출력방법"></a>ICON 출력방법</h3><p>Weather ID 801에 해당하는 아이콘 code가 02d이므로 URL을 다음과 같이 지정하면</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://openweathermap.org/img/wn/10d.png</span><br></pre></td></tr></table></figure><p><img src="http://openweathermap.org/img/wn/10d.png"></p><p>ICON크기를 크게 출력하고 싶은 경우에는 아이콘 code에 <strong>@2x</strong>를 덧붙입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://openweathermap.org/img/wn/10d@2x.png</span><br></pre></td></tr></table></figure><p><img src="http://openweathermap.org/img/wn/10d@2x.png"></p><br><br><h1 id="1602-LCD에-날씨-정보-출력하기"><a href="#1602-LCD에-날씨-정보-출력하기" class="headerlink" title="1602 LCD에 날씨 정보 출력하기"></a>1602 LCD에 날씨 정보 출력하기</h1><p>여러가지 날씨 정보 중에서 현재 온도를 1602 LCD(I2C)에 출력해보겠습니다.</p><br><h2 id="라이브러리-설치하기"><a href="#라이브러리-설치하기" class="headerlink" title="라이브러리 설치하기"></a>라이브러리 설치하기</h2><p><strong>스케치</strong>&gt; <strong>라이브러리 포함하기</strong>&gt; <strong>라이브러리 관리</strong></p><ul><li>LiquidCrystal I2C (by Frank de Brabander) 검색하여 설치</li></ul><br><h3 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h3><p><img src="/image/owm-06.png"></p><br><h3 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;HTTPClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TimeLib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid     = <span class="string">&quot;your ssid&quot;</span>;                  <span class="comment">// 연결할 SSID</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;your password&quot;</span>;              <span class="comment">// 연결할 SSID의 비밀번호</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> String endpoint = <span class="string">&quot;https://api.openweathermap.org&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String ver = <span class="string">&quot;/data/2.5/weather?q=&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> String city = <span class="string">&quot;Shanghai,CN&quot;</span>;                 <span class="comment">// City,Country (띄어쓰기 금지)</span></span><br><span class="line"><span class="keyword">const</span> String appid = <span class="string">&quot;&amp;units=metric&amp;APPID=&quot;</span>;       <span class="comment">// Units: metric</span></span><br><span class="line"><span class="keyword">const</span> String key = <span class="string">&quot;1bf3d5e1bd2e5934aadd86..........&quot;</span>;    <span class="comment">// API Key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> offset_days = <span class="number">3</span>;                            <span class="comment">// 3 days for convert unix timestamp to datetime</span></span><br><span class="line"><span class="keyword">float</span> main_temp;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set the LCD</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;LiquidCrystal_I2C.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> lcdColumns = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">int</span> lcdRows = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set LCD address, number of columns and rows</span></span><br><span class="line"><span class="comment">// if you don&#x27;t know your display address, run an I2C scanner sketch</span></span><br><span class="line"><span class="function">LiquidCrystal_I2C <span class="title">lcd</span><span class="params">(<span class="number">0x27</span>, lcdColumns, lcdRows)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line"> </span><br><span class="line">  WiFi.<span class="built_in">begin</span>(ssid, password);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Connecting to WiFi..&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;Connected to the WiFi network&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// initialize LCD</span></span><br><span class="line">  lcd.<span class="built_in">init</span>();</span><br><span class="line">  <span class="comment">// turn on LCD backlight                      </span></span><br><span class="line">  lcd.<span class="built_in">backlight</span>();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ((WiFi.<span class="built_in">status</span>() == WL_CONNECTED)) &#123;            <span class="comment">// Check the current connection status</span></span><br><span class="line"> </span><br><span class="line">    HTTPClient http;</span><br><span class="line"> </span><br><span class="line">    http.<span class="built_in">begin</span>(endpoint + ver + city + appid + key); <span class="comment">// Specify the URL</span></span><br><span class="line">    <span class="keyword">int</span> httpCode = http.<span class="built_in">GET</span>();                       <span class="comment">// Make the request</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (httpCode &gt; <span class="number">0</span>) &#123;                              <span class="comment">// Check for the returning code</span></span><br><span class="line">      <span class="comment">// 데이터 파싱</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">size_t</span> capacity = <span class="built_in">JSON_ARRAY_SIZE</span>(<span class="number">1</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">1</span>) + <span class="number">2</span>*<span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">2</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">4</span>) + <span class="number">2</span>*<span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">5</span>) + <span class="built_in">JSON_OBJECT_SIZE</span>(<span class="number">13</span>) + <span class="number">270</span>;</span><br><span class="line">      <span class="function">DynamicJsonDocument <span class="title">doc</span><span class="params">(capacity)</span></span>;</span><br><span class="line"></span><br><span class="line">      String json = http.<span class="built_in">getString</span>();                <span class="comment">// get JSON format data</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">deserializeJson</span>(doc, json);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">float</span> coord_lon = doc[<span class="string">&quot;coord&quot;</span>][<span class="string">&quot;lon&quot;</span>]; <span class="comment">// 121.49</span></span><br><span class="line">      <span class="keyword">float</span> coord_lat = doc[<span class="string">&quot;coord&quot;</span>][<span class="string">&quot;lat&quot;</span>]; <span class="comment">// 31.23</span></span><br><span class="line"></span><br><span class="line">      JsonObject weather_0 = doc[<span class="string">&quot;weather&quot;</span>][<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">int</span> weather_0_id = weather_0[<span class="string">&quot;id&quot;</span>]; <span class="comment">// 804</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* weather_0_main = weather_0[<span class="string">&quot;main&quot;</span>]; <span class="comment">// &quot;Clouds&quot;</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* weather_0_description = weather_0[<span class="string">&quot;description&quot;</span>]; <span class="comment">// &quot;overcast clouds&quot;</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* weather_0_icon = weather_0[<span class="string">&quot;icon&quot;</span>]; <span class="comment">// &quot;04d&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      JsonObject weather_1 = weather[1];</span></span><br><span class="line"><span class="comment">      int weather_1_id = weather_1[&quot;id&quot;]; // 701</span></span><br><span class="line"><span class="comment">      const char* weather_1_main = weather_1[&quot;main&quot;]; // &quot;Mist&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_1_description = weather_1[&quot;description&quot;]; // &quot;mist&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_1_icon = weather_1[&quot;icon&quot;]; // &quot;50n&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      JsonObject weather_2 = weather[2];</span></span><br><span class="line"><span class="comment">      int weather_2_id = weather_2[&quot;id&quot;]; // 741</span></span><br><span class="line"><span class="comment">      const char* weather_2_main = weather_2[&quot;main&quot;]; // &quot;Fog&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_2_description = weather_2[&quot;description&quot;]; // &quot;fog&quot;</span></span><br><span class="line"><span class="comment">      const char* weather_2_icon = weather_2[&quot;icon&quot;]; // &quot;50n&quot;</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* base = doc[<span class="string">&quot;base&quot;</span>]; <span class="comment">// &quot;stations&quot;</span></span><br><span class="line"></span><br><span class="line">      JsonObject main = doc[<span class="string">&quot;main&quot;</span>];</span><br><span class="line">      <span class="keyword">float</span> main_temp = main[<span class="string">&quot;temp&quot;</span>]; <span class="comment">// 293.02</span></span><br><span class="line">      <span class="keyword">int</span> main_pressure = main[<span class="string">&quot;pressure&quot;</span>]; <span class="comment">// 1027</span></span><br><span class="line">      <span class="keyword">int</span> main_humidity = main[<span class="string">&quot;humidity&quot;</span>]; <span class="comment">// 55</span></span><br><span class="line">      <span class="keyword">float</span> main_temp_min = main[<span class="string">&quot;temp_min&quot;</span>]; <span class="comment">// 289.82</span></span><br><span class="line">      <span class="keyword">float</span> main_temp_max = main[<span class="string">&quot;temp_max&quot;</span>]; <span class="comment">// 298.71</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> visibility = doc[<span class="string">&quot;visibility&quot;</span>]; <span class="comment">// 10000</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> wind_speed = doc[<span class="string">&quot;wind&quot;</span>][<span class="string">&quot;speed&quot;</span>]; <span class="comment">// 3</span></span><br><span class="line">      <span class="keyword">int</span> wind_deg = doc[<span class="string">&quot;wind&quot;</span>][<span class="string">&quot;deg&quot;</span>]; <span class="comment">// 60</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> clouds_all = doc[<span class="string">&quot;clouds&quot;</span>][<span class="string">&quot;all&quot;</span>]; <span class="comment">// 94</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">long</span> dt = doc[<span class="string">&quot;dt&quot;</span>]; <span class="comment">// 1574303919</span></span><br><span class="line"></span><br><span class="line">      JsonObject sys = doc[<span class="string">&quot;sys&quot;</span>];</span><br><span class="line">      <span class="keyword">int</span> sys_type = sys[<span class="string">&quot;type&quot;</span>]; <span class="comment">// 1</span></span><br><span class="line">      <span class="keyword">int</span> sys_id = sys[<span class="string">&quot;id&quot;</span>]; <span class="comment">// 9659</span></span><br><span class="line">      <span class="comment">//float sys_message = sys[&quot;message&quot;]; // Internal parameter (0.0226)</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* sys_country = sys[<span class="string">&quot;country&quot;</span>]; <span class="comment">// &quot;CN&quot;</span></span><br><span class="line">      <span class="keyword">long</span> sys_sunrise = sys[<span class="string">&quot;sunrise&quot;</span>]; <span class="comment">// 1574288762</span></span><br><span class="line">      <span class="keyword">long</span> sys_sunset = sys[<span class="string">&quot;sunset&quot;</span>]; <span class="comment">// 1574326426</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> timezone = doc[<span class="string">&quot;timezone&quot;</span>]; <span class="comment">// 28800</span></span><br><span class="line">      <span class="keyword">long</span> id = doc[<span class="string">&quot;id&quot;</span>]; <span class="comment">// 1796236</span></span><br><span class="line">      <span class="keyword">const</span> <span class="keyword">char</span>* name = doc[<span class="string">&quot;name&quot;</span>]; <span class="comment">// &quot;Shanghai&quot;</span></span><br><span class="line">      <span class="keyword">int</span> cod = doc[<span class="string">&quot;cod&quot;</span>]; <span class="comment">// 200</span></span><br><span class="line"></span><br><span class="line">      dt = dt + timezone;                     <span class="comment">// for GMT+8 -&gt; +28800, for GMT+9 -&gt; +32400</span></span><br><span class="line">      sys_sunrise = sys_sunrise + timezone;</span><br><span class="line">      sys_sunset = sys_sunset + timezone;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//int main_sea_level = main[&quot;sea_level&quot;]; // Atmospheric pressure hPa on the sea level</span></span><br><span class="line">      <span class="comment">//int main_grnd_level = main[&quot;grnd_level&quot;]; // Atmospheric pressure hPa on the ground level     </span></span><br><span class="line">      <span class="comment">//int rain_1h = doc[&quot;rain&quot;][&quot;1h&quot;]; // Rain volume for the last 1 hour, mm</span></span><br><span class="line">      <span class="comment">//int rain_3h = doc[&quot;rain&quot;][&quot;3h&quot;]; // Rain volume for the last 3 hour, mm</span></span><br><span class="line">      <span class="comment">//int snow_1h = doc[&quot;snow&quot;][&quot;1h&quot;]; // Snow volume for the last 1 hour, mm</span></span><br><span class="line">      <span class="comment">//int snow_3h = doc[&quot;snow&quot;][&quot;3h&quot;]; // Snow volume for the last 3 hour, mm</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//데이터 출력</span></span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;UNIX Time of Weather: &quot;</span>); Serial.<span class="built_in">println</span>(dt);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Time of Weather: %4d-%02d-%02d %02d:%02d:%02d(%1d)\n&quot;</span>, <span class="built_in">year</span>(dt), <span class="built_in">month</span>(dt), <span class="built_in">day</span>(dt), <span class="built_in">hour</span>(dt), <span class="built_in">minute</span>(dt), <span class="built_in">second</span>(dt), <span class="built_in">weekday</span>(dt));</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather ID: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_id);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather Main: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_main);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather Description: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_description);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Weather Icon: &quot;</span>); Serial.<span class="built_in">println</span>(weather_0_icon);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Temperature(℃): &quot;</span>); Serial.<span class="built_in">println</span>(main_temp);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Temperature Max(℃): &quot;</span>); Serial.<span class="built_in">println</span>(main_temp_max);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Temperature Min(℃): &quot;</span>); Serial.<span class="built_in">println</span>(main_temp_min);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Pressure(hPa): &quot;</span>); Serial.<span class="built_in">println</span>(main_pressure);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Humidity(%): &quot;</span>); Serial.<span class="built_in">println</span>(main_humidity);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Visibility(m): &quot;</span>); Serial.<span class="built_in">println</span>(visibility);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Wind Speed(m/s): &quot;</span>); Serial.<span class="built_in">println</span>(wind_speed);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Wind Degree(º): &quot;</span>); Serial.<span class="built_in">println</span>(wind_deg);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Clouds: &quot;</span>); Serial.<span class="built_in">println</span>(clouds_all);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Sunrise: %02d:%02d:%02d\n&quot;</span>, <span class="built_in">hour</span>(sys_sunrise), <span class="built_in">minute</span>(sys_sunrise), <span class="built_in">second</span>(sys_sunrise));</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Sunset:  %02d:%02d:%02d\n&quot;</span>, <span class="built_in">hour</span>(sys_sunset), <span class="built_in">minute</span>(sys_sunset), <span class="built_in">second</span>(sys_sunset));</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;City/Country: &quot;</span>); Serial.<span class="built_in">print</span>(name); Serial.<span class="built_in">print</span>(<span class="string">&quot;/&quot;</span>); Serial.<span class="built_in">println</span>(sys_country);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;longitude/latidude: &quot;</span>); Serial.<span class="built_in">print</span>(coord_lon); Serial.<span class="built_in">print</span>(<span class="string">&quot;/&quot;</span>); Serial.<span class="built_in">println</span>(coord_lat);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;Timezone: GMT+&quot;</span>); Serial.<span class="built_in">println</span>(timezone/<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Sea Level(hPa): &quot;); Serial.println(main_sea_level);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Ground Level(hPa): &quot;); Serial.println(main_grnd_level);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Rain 1h(mm): &quot;); Serial.println(rain_1h);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Rain 3h(mm): &quot;); Serial.println(rain_3h);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Snow 1h(mm): &quot;); Serial.println(snow_1h);</span></span><br><span class="line"><span class="comment">      Serial.print(&quot;Snow 3h(mm): &quot;); Serial.println(snow_3h);</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      lcd.<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      lcd.<span class="built_in">print</span>(<span class="string">&quot;Temperature : &quot;</span>);</span><br><span class="line">      lcd.<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">      lcd.<span class="built_in">print</span>(main_temp);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;Error on HTTP request&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    http.<span class="built_in">end</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">30000</span>);</span><br><span class="line">  </span><br><span class="line">  lcd.<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">  lcd.<span class="built_in">print</span>(<span class="string">&quot;                &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Arduino IDE에서 컴파일시 *””경고: 라이브러리 LiquidCrystal_I2C가 avr 아키텍처에서 실행되며 esp32아키텍처에서 실행되는 현재보드에서는 호환되지 않을 수 있습니다.””*라는 메세지가 나타나지만, LCD 출력에는 문제가 없습니다.</p></blockquote><br><br><br><h2 id="공공데이터-활용하기"><a href="#공공데이터-활용하기" class="headerlink" title="공공데이터 활용하기"></a>공공데이터 활용하기</h2><p>위의 방법을 응용하면 국가별, 관련 업체별로 제공되는 여러가지 공공데이터를 활용할 수 있습니다.</p><ul><li>대기질 관련 데이터 : <a href="https://aqicn.org/api/">https://aqicn.org/api/</a></li><li>(한국)공공데이터포털 : <a href="https://www.data.go.kr/">https://www.data.go.kr/</a></li><li>(미국)공공데이터포털 : <a href="https://www.data.gov/">https://www.data.gov/</a></li></ul><p>그밖에 활용가능한 공공데이터가 어떤 것이 있는지, 살펴보세요~</p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">esp32</category>
      
      
      <category domain="http://stemwith.github.io/tags/iot/">iot</category>
      
      
      <comments>http://stemwith.github.io/2019/11/19/ESP32-OpenWeatherMap/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>esp32 AP mode &amp; Websocket</title>
      <link>http://stemwith.github.io/2019/11/15/ESP32-AP-mode-and-Websocket/</link>
      <guid>http://stemwith.github.io/2019/11/15/ESP32-AP-mode-and-Websocket/</guid>
      <pubDate>Fri, 15 Nov 2019 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;ESP32-AP-mode-amp-Websocket&quot;&gt;&lt;a href=&quot;#ESP32-AP-mode-amp-Websocket&quot; class=&quot;headerlink&quot; title=&quot;ESP32 AP mode &amp;amp; Websocket&quot;&gt;&lt;/a&gt;ESP</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="ESP32-AP-mode-amp-Websocket"><a href="#ESP32-AP-mode-amp-Websocket" class="headerlink" title="ESP32 AP mode &amp; Websocket"></a>ESP32 AP mode &amp; Websocket</h1><br><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><br><h3 id="AP-mode"><a href="#AP-mode" class="headerlink" title="AP mode"></a>AP mode</h3><p>ESP32를 AP mode로 설정하여 라우터(공유기) 장치 없이 Client가 ESP32에 직접 접속하는 방법으로 데이터를 주고받는 통신을 구현해보도록 하겠습니다. </p><br><p>ESP32는 기본적으로 블루투스와 wifi를 방식의 무선 통신을 지원합니다. 각각의 방식이 갖는 장단점이 있으므로 상황에 맞추어 적절한 통신 방식을 선택하면 됩니다.</p><table><thead><tr><th>ESP32 통신모드</th><th>블루투스</th><th>wifi Station Mode</th><th>wifi AP Mode</th></tr></thead><tbody><tr><td>라우터</td><td>불필요</td><td>필요</td><td>불필요</td></tr><tr><td>통신거리</td><td>10m 이내 (장애물에 약함)</td><td>일반적인 wifi 도달 거리와 동일</td><td>좌동</td></tr><tr><td>전력</td><td>저전력</td><td>블루투스 통신에 비해 사용량 큼</td><td>좌동</td></tr></tbody></table><br><p>학교에서 ESP32를 이용하는 경우,</p><ul><li>다양한 형태의 과학 실험에 대응할 수 있어야 함</li><li>과학실 내부 혹은 야외에서도 이용할 수 있도록 이동이 편리해야 함<ul><li>기본적으로 라우터에 종속되지 않는 것이 좋음</li></ul></li><li>디스플레이 장치는 학생이 본인의 스마트폰을 이용할 수 있어야 함<ul><li>별도의 OLED, LCD와 같은 디스플레이를 이용하는 경우, 실험장치의 배선이 복잡해짐</li><li>단, OLED나 LCD를 활용하는 경우 흥미 유발에 도움을 줌</li></ul></li></ul><br><p>위 사항을 고려할 때 ESP32를 통해 여러 가지 실험을 하고 결과를 도출하는 환경의 다양성을 수용하기 위하여, AP mode가 가장 적합하다고 판단하여 이를 사용해보고자 합니다.</p><br><br><h2 id="AP-mode-설정"><a href="#AP-mode-설정" class="headerlink" title="AP mode 설정"></a>AP mode 설정</h2><p>참고: <a href="https://randomnerdtutorials.com/esp32-access-point-ap-web-server/">https://randomnerdtutorials.com/esp32-access-point-ap-web-server/</a></p><ul><li><p>ssid, password 설정</p><ul><li>과학실에서 모둠별로 별도의 ESP32를 이용한다면, 각 모둠에서 사용하는 ESP32를 구분할 수 있도록 ssid에 각 모둠의 번호를 적어두는 것이 좋을 것입니다. 동일한 ssid가 설정되면 다른 모둠의 데이터 값을 받을 수 있으므로, 반드시 구분짓도록 안내해야 합니다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid = <span class="string">&quot;ESP32-AP-x&quot;</span>;      <span class="comment">// max 63 characters, x is team number</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;123456789&quot;</span>;   <span class="comment">// min 8 characters </span></span><br></pre></td></tr></table></figure></li><li><p>AP mode 실행: 위의 설정에 의해 다음의 라인을 통해 AP mode를 실행합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WiFi.softAP(ssid, password);</span><br></pre></td></tr></table></figure></li><li><p>AP mode 실행 옵션: ssid, password 이외의 다양한 옵션을 추가할 경우에는 아래의 방법으로 설정하고 AP mode를 실행합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WiFi.softAP(<span class="keyword">const</span> <span class="keyword">char</span>* ssid, <span class="keyword">const</span> <span class="keyword">char</span>* password, <span class="keyword">int</span> channel, <span class="keyword">int</span> ssid_hidden, <span class="keyword">int</span> max_connection)</span><br></pre></td></tr></table></figure><ul><li>channel: Wi-Fi channel number (1-13)</li><li>ssid_hidden: (0 = broadcast SSID, 1 = hide SSID)</li><li>max_connection: maximum simultaneous connected clients (1-4)</li></ul></li><li><p>AP mode 실행시 ESP32에 부여된 IP는 다음의 방법으로 확인할 수 있습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IPAddress IP = WiFi.softAPIP();</span><br><span class="line">Serial.print(<span class="string">&quot;AP IP address: &quot;</span>);</span><br><span class="line">Serial.println(IP);</span><br></pre></td></tr></table></figure><ul><li>AP mode를 사용할 경우, ESP32는 기본적으로 <strong>192.168.4.1</strong>의 주소를 부여 받습니다.</li></ul></li></ul><br><br><h2 id="Websocket-설정"><a href="#Websocket-설정" class="headerlink" title="Websocket 설정"></a>Websocket 설정</h2><p>참고: <a href="http://www.martyncurrey.com/esp8266-and-the-arduino-ide-part-10a-iot-website-temperature-and-humidity-monitor/">Martyn Currey Blog</a></p><br><h4 id="왜-웹소켓을-사용하는가"><a href="#왜-웹소켓을-사용하는가" class="headerlink" title="왜 웹소켓을 사용하는가?"></a>왜 웹소켓을 사용하는가?</h4><p>이 문서는 학생들의 스마트폰을 클라이언트로 활용하여 과학실험을 하는 상황을 전제로,  ESP32에 웹브라우저를 통해 접속하여 실험결과 값을 모니터링하려고 합니다. 실험의 성격에 따라 웹페이지를 refresh하면서 모니터링하는 것이 좋을 수도 있고, refresh하지 않아도 결과값이 update되는 것이 더 좋을 수도 있겠지만, 여기서는 후자의 방법을 택하여 결과값을 나타내보도록 하겠습니다. 이때 필요한 기술이 웹소켓입니다.</p><br><h3 id="웹소켓"><a href="#웹소켓" class="headerlink" title="웹소켓"></a>웹소켓</h3><p>WebSocket은 TCP 연결을 사용하여 서버와 클라이언트 사이의 지속적인 양방향 통신을 허용하는 방법입니다. 이를 통해 클라이언트에서 서버로, 서버에서 클라이언트로 데이터를 언제든지 보낼 수 있습니다.</p><p>WebSocket을 활용하기 이전에는, 일반적인 HTML 방식이나 AJAX(Asynchronous Javascript And XML)와 같은 비동기식 방법을 사용하여 센서값을 클라이언트에게 전송하는 방식을 사용했습니다. 단, 이 방법은 새로운 센서값이 발생하더라도 동시에 여러 개의 탭 (동일하거나 다른 장치에 있음)이 열려있다면 상태가 모두 업데이트되지 않는 다는 단점이 있습니다. 그렇기 때문에 웹페이지 전체를 refresh하거나 웹페이지의 일부분만이라도 새롭게 로드해야만 변경사항이 반영시켜야만 했습니다. </p><p>이를 보완하기 위해 WebSocket 프로토콜을 사용할 수 있습니다. WebSocket은 변경 사항이 발생하면 모든 클라이언트에 알림을 보내고 그에 따라 웹 페이지를 업데이트 합니다.</p><p>클라이언트는 WebSocket 핸드 셰이크라는 프로세스를 통해 서버와 WebSocket 연결을 설정합니다. 핸드 셰이크는 HTTP request와 response로 시작하여 서버가 동일한 포트에서 WebSocket 연결뿐만 아니라 HTTP 연결을 처리 할 수 있도록 합니다. 연결이 설정되면 클라이언트와 서버는 WebSocket 데이터를 full duplex 모드로 보낼 수 있습니다. 즉, WebSockets 프로토콜을 사용하여 서버 (ESP32 보드)는 요청없이 클라이언트 또는 모든 클라이언트에 정보를 보낼 수 있습니다. 이를 통해 변경 사항이 발생할 때 웹 브라우저에 정보를 보낼 수도 있습니다.</p><br><h3 id="라이브러리"><a href="#라이브러리" class="headerlink" title="라이브러리"></a>라이브러리</h3><p>ESP32에서는 Markus Sattler가 만든 <a href="https://github.com/Links2004/arduinoWebSockets">Websockets</a>라는 라이브러리를 통해 구현합니다.</p><p><img src="/image/websocket01.png"></p><br><br><h2 id="sketch-전체"><a href="#sketch-전체" class="headerlink" title="sketch: 전체"></a>sketch: 전체</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)</span></span><br><span class="line"><span class="comment">// and a content-type so the client knows what&#x27;s coming, then a blank line:</span></span><br><span class="line">String html_header = <span class="string">&quot;HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// HTTP main page</span></span><br><span class="line">String html_main = <span class="string">R&quot;=====(</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">  &lt;meta name=&#x27;viewport&#x27; content=&#x27;width=device-width, initial-scale=1.0&#x27;/&gt;</span></span><br><span class="line"><span class="string">  &lt;meta charset=&#x27;utf-8&#x27;&gt;</span></span><br><span class="line"><span class="string">  &lt;style&gt;</span></span><br><span class="line"><span class="string">    body     &#123; font-size:100%;&#125; </span></span><br><span class="line"><span class="string">    #main    &#123; display: table; width: 300px; margin: auto;  padding: 10px 10px 10px 10px; border: 3px solid blue; border-radius: 10px; text-align:center;&#125; </span></span><br><span class="line"><span class="string">    p        &#123; font-size: 100%; &#125;</span></span><br><span class="line"><span class="string">  &lt;/style&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">  &lt;title&gt;ESP32 Websockets Sensor Monitor&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">  &lt;div id=&#x27;main&#x27;&gt;</span></span><br><span class="line"><span class="string">    &lt;h3&gt;ESP32 Websockets Monitor&lt;/h3&gt;</span></span><br><span class="line"><span class="string">    &lt;div id=&#x27;content&#x27;&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;Potentiometer1 = &lt;span id=&#x27;potentiometer1&#x27;&gt;00&lt;/span&gt; Ohm&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;Potentiometer2 = &lt;span id=&#x27;potentiometer2&#x27;&gt;00&lt;/span&gt; Ohm&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;Touch Sensor   = &lt;span id=&#x27;touch&#x27;&gt;00&lt;/span&gt; Value&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;Brightness     = &lt;span id=&#x27;brightness&#x27;&gt;00&lt;/span&gt; Value&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;Data = &lt;span id=&#x27;recData&#x27;&gt;00&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;br /&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">  var Socket;</span></span><br><span class="line"><span class="string">    function init() &#123;</span></span><br><span class="line"><span class="string">      Socket = new WebSocket(&#x27;ws://&#x27; + window.location.hostname + &#x27;:81/&#x27;);</span></span><br><span class="line"><span class="string">      Socket.onmessage = function(event) &#123; processReceivedCommand(event); &#125;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">  function processReceivedCommand(evt) &#123;</span></span><br><span class="line"><span class="string">    var data = evt.data;</span></span><br><span class="line"><span class="string">    document.getElementById(&#x27;recData&#x27;).innerHTML = data;</span></span><br><span class="line"><span class="string">    var tmp = data.split(&#x27;|&#x27;);</span></span><br><span class="line"><span class="string">    document.getElementById(&#x27;potentiometer1&#x27;).innerHTML = tmp[0];  </span></span><br><span class="line"><span class="string">    document.getElementById(&#x27;potentiometer2&#x27;).innerHTML = tmp[1];</span></span><br><span class="line"><span class="string">    document.getElementById(&#x27;touch&#x27;).innerHTML = tmp[2];</span></span><br><span class="line"><span class="string">    document.getElementById(&#x27;brightness&#x27;).innerHTML = tmp[3];</span></span><br><span class="line"><span class="string">    //consol.log(evt.data);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">  function sendText(data) &#123; Socket.send(data); &#125;</span></span><br><span class="line"><span class="string">  window.onload = function(e) &#123; init(); &#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">)=====&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFiClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFiAP.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WebSocketsServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Sensors are connected to GPIO 32~35</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> potPin1 = <span class="number">34</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> potPin2 = <span class="number">33</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> touPin = <span class="number">35</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> briPin = <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// variable for storing the potentiometer value</span></span><br><span class="line"><span class="keyword">int</span> potentiometer1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> potentiometer2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> touch = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> brightness = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set these to your desired credentials.</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *ssid = <span class="string">&quot;ESP32-AP&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *password = <span class="string">&quot;123456789&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">WiFiServer <span class="title">server</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line">WebSocketsServer webSocket = WebSocketsServer(<span class="number">81</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.println(<span class="string">&quot;Configuring access point...&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// You can remove the password parameter if you want the AP to be open.</span></span><br><span class="line">  WiFi.softAP(ssid, password);</span><br><span class="line">  IPAddress myIP = WiFi.softAPIP();</span><br><span class="line">  Serial.print(<span class="string">&quot;AP IP address: &quot;</span>);</span><br><span class="line">  Serial.println(myIP);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// start a server</span></span><br><span class="line">  server.begin();</span><br><span class="line">  Serial.println(<span class="string">&quot;Server started&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// start the websocket</span></span><br><span class="line">  webSocket.begin();</span><br><span class="line">  Serial.println(<span class="string">&quot;websocket started&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// webSocketEvent is the function to call when there is a websocket event</span></span><br><span class="line">  webSocket.onEvent(webSocketEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// check the websocket status.</span></span><br><span class="line">  webSocket.loop();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// listen for incoming clients</span></span><br><span class="line">  WiFiClient client = server.available();   </span><br><span class="line"></span><br><span class="line">  <span class="comment">// if you get a client,</span></span><br><span class="line">  <span class="keyword">if</span> (client) &#123;</span><br><span class="line">    client.flush();</span><br><span class="line">    client.print( html_header );</span><br><span class="line">    client.print( html_main ); </span><br><span class="line">    Serial.println(<span class="string">&quot;New page served&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  updateSensors();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateSensors</span><span class="params">()</span></span>&#123;</span><br><span class="line">  potentiometer1 = analogRead(potPin1);</span><br><span class="line">  potentiometer2 = analogRead(potPin2);</span><br><span class="line">  touch = analogRead(touPin);</span><br><span class="line">  brightness = analogRead(briPin);</span><br><span class="line"></span><br><span class="line">  String data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  data = String(data + potentiometer1); </span><br><span class="line">  data = String(data + <span class="string">&quot;|&quot;</span>); </span><br><span class="line">  data = String(data + potentiometer2); </span><br><span class="line">  data = String(data + <span class="string">&quot;|&quot;</span>); </span><br><span class="line">  data = String(data + touch); </span><br><span class="line">  data = String(data + <span class="string">&quot;|&quot;</span>); </span><br><span class="line">  data = String(data + brightness); </span><br><span class="line"> </span><br><span class="line">  webSocket.broadcastTXT(data); <span class="comment">// send the data</span></span><br><span class="line">  Serial.println(data);         <span class="comment">// display the data in the serial monitor</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">webSocketEvent</span><span class="params">(byte num, WStype_t type, <span class="keyword">uint8_t</span> * payload, <span class="keyword">size_t</span> length)</span></span>&#123;</span><br><span class="line">    Serial.println();</span><br><span class="line">    Serial.print(<span class="string">&quot;WStype = &quot;</span>);   Serial.println(type);  </span><br><span class="line">    Serial.print(<span class="string">&quot;WS payload = &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123; Serial.print((<span class="keyword">char</span>) payload[i]); &#125;</span><br><span class="line">    Serial.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h4 id="Part1-웹페이지"><a href="#Part1-웹페이지" class="headerlink" title="Part1: 웹페이지"></a>Part1: 웹페이지</h4><h5 id="header"><a href="#header" class="headerlink" title="header"></a>header</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)</span></span><br><span class="line"><span class="comment">// and a content-type so the client knows what&#x27;s coming, then a blank line:</span></span><br><span class="line">String html_header = <span class="string">&quot;HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n&quot;</span>;</span><br></pre></td></tr></table></figure><br><h5 id="main-head"><a href="#main-head" class="headerlink" title="main_head"></a>main_head</h5><ul><li>style을 지정합니다.</li><li>웹브라우저의 탭에 표기될 title을 지정합니다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HTTP main page</span></span><br><span class="line">String html_main = <span class="string">R&quot;=====(</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">  &lt;meta name=&#x27;viewport&#x27; content=&#x27;width=device-width, initial-scale=1.0&#x27;/&gt;</span></span><br><span class="line"><span class="string">  &lt;meta charset=&#x27;utf-8&#x27;&gt;</span></span><br><span class="line"><span class="string">  &lt;style&gt;</span></span><br><span class="line"><span class="string">    body     &#123; font-size:100%;&#125; </span></span><br><span class="line"><span class="string">    #main    &#123; display: table; width: 300px; margin: auto;  padding: 10px 10px 10px 10px; border: 3px solid blue; border-radius: 10px; text-align:center;&#125; </span></span><br><span class="line"><span class="string">    p        &#123; font-size: 100%; &#125;</span></span><br><span class="line"><span class="string">  &lt;/style&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">  &lt;title&gt;ESP32 Websockets Sensor Monitor&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br></pre></td></tr></table></figure><ul><li>R은 <strong>이러한 구분 기호 사이의 모든 것을 원시 문자열로 처리</strong>하라는 것을 의미합니다. 즉, “===== (     ) =====”사이의 모든 것을 문자열로 처리합니다.<ul><li>여기서 사용한 ‘’=====’’는 특정 범위 내에서 다른 형태로 바꿔서 사용하는 것이 가능합니다.<ul><li>예를들어, This is “text”를 문자열로 할당하기 위해 R “-= (This is”text “) =-“를 사용할 수 있습니다.</li></ul></li><li>문자열 길고 다양한 형태의 기호나 특수문자를 포함하는 경우,  이러한 방식을 사용하는 것이 좋습니다.<ul><li>This is “text”를 문자열로 처리하려면, “ 앞에 각각 \를 덧붙여야 합니다. 즉 This is \“로 작성되어야합니다.</li></ul></li><li>주의할 점은 ===== 가 텍스트 어디에도 표시되지 않아야합니다.</li></ul></li></ul><br><h5 id="main-body"><a href="#main-body" class="headerlink" title="main_body"></a>main_body</h5><ul><li>웹브라우저에 표기될 내용을 만듭니다.</li><li>span id는 아두이노코드에서 사용하는 센서값 변수를 사용합니다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">&#x27;main&#x27;</span>&gt;</span><br><span class="line">    &lt;h3&gt;ESP32 Websockets Monitor&lt;/h3&gt;</span><br><span class="line">    &lt;div id=<span class="string">&#x27;content&#x27;</span>&gt;</span><br><span class="line">      &lt;p&gt;Potentiometer1 = &lt;span id=<span class="string">&#x27;potentiometer1&#x27;</span>&gt;<span class="number">00</span>&lt;/span&gt; Ohm&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;Potentiometer2 = &lt;span id=<span class="string">&#x27;potentiometer2&#x27;</span>&gt;<span class="number">00</span>&lt;/span&gt; Ohm&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;Touch Sensor   = &lt;span id=<span class="string">&#x27;touch&#x27;</span>&gt;<span class="number">00</span>&lt;/span&gt; Value&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;Brightness     = &lt;span id=<span class="string">&#x27;brightness&#x27;</span>&gt;<span class="number">00</span>&lt;/span&gt; Value&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;Data = &lt;span id=<span class="string">&#x27;recData&#x27;</span>&gt;<span class="number">00</span>&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br><h5 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h5><ul><li>데이터가 수신되어 Websocket 이벤트가 생기면 웹사이트의 자바스크립트를 통해 <strong>processReceivedCommand()</strong> 함수가 호출 됩니다. 이 함수는 수신된 데이터를 <strong>배열</strong> <strong>tmp</strong>로 분해한 다음 개별 배열 요소를 웹사이트의 각 부분에 복사합니다.</li><li>데이터가 <strong>potentiometer1|potentiometer2|touch|brightness</strong> 형식으로 수신되면, 막대 문자를 기준으로 데이터를 tmp[] 배열로 분할하여 저장합니다. 분할 기준인 막대문자는 <strong>var tmp = data.split (‘|’)</strong> 문을 통해 지정합니다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var Socket;</span><br><span class="line">    <span class="function">function <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Socket = <span class="keyword">new</span> WebSocket(<span class="string">&#x27;ws://&#x27;</span> + window.location.hostname + <span class="string">&#x27;:81/&#x27;</span>);</span><br><span class="line">      Socket.onmessage = function(event) &#123; processReceivedCommand(event); &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function">function <span class="title">processReceivedCommand</span><span class="params">(evt)</span> </span>&#123;</span><br><span class="line">    var data = evt.data;</span><br><span class="line">    document.getElementById(<span class="string">&#x27;recData&#x27;</span>).innerHTML = data;</span><br><span class="line">    var tmp = data.split(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">    document.getElementById(<span class="string">&#x27;potentiometer1&#x27;</span>).innerHTML = tmp[<span class="number">0</span>];  </span><br><span class="line">    document.getElementById(<span class="string">&#x27;potentiometer2&#x27;</span>).innerHTML = tmp[<span class="number">1</span>];</span><br><span class="line">    document.getElementById(<span class="string">&#x27;touch&#x27;</span>).innerHTML = tmp[<span class="number">2</span>];</span><br><span class="line">    document.getElementById(<span class="string">&#x27;brightness&#x27;</span>).innerHTML = tmp[<span class="number">3</span>];</span><br><span class="line">    <span class="comment">//consol.log(evt.data);</span></span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function">function <span class="title">sendText</span><span class="params">(data)</span> </span>&#123; Socket.send(data); &#125;</span><br><span class="line">  window.onload = function(e) &#123; init(); &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/html&gt;</span><br><span class="line">)=====<span class="string">&quot;;</span></span><br></pre></td></tr></table></figure><br><h5 id="html-분리-선택사항"><a href="#html-분리-선택사항" class="headerlink" title="html 분리 (선택사항)"></a>html 분리 (선택사항)</h5><p>String형태로 지정된 자바스크립트를 포함하는 html 페이지를 표현하는 코드의 전체 길이로 인해 스케치가 복잡해보이므로, 전체 스케치의 상단에 있는 html 부분을 분리해도 됩니다. 파일은 분리되지만 컴파일 될때마다 메인 스케치에 포함될 것입니다. (혹은 ESP32의 SPIFFS를 사용하여 별도의 파일 형태로 업로드해도 됩니다.)</p><ul><li><p>Arduino IDE의 오른쪽 상단에 있는 작은 아래방향 화살표 클릭한 뒤 <strong>New Tab</strong> 선택</p><p><img src="/image/websocket02.png"></p></li><li><p>콘솔의 텍스트 상자에 분리하여 저장할 html 파일이름을 입력한 뒤 확인 클릭</p><ul><li>확장자는 .h로 사용 (※ 단, <strong>.html</strong> 확장자는 사용할 수 없음)</li></ul><p><img src="/image/websocket03.png"></p></li><li><p>Arduino IDE에 새로운 탭이 열리면, html_header와 html_main을 포함한 두개의 String 문을 복사하여 mainpage.h 탭에 붙여넣기 한 뒤 저장 (스케치가 위치한 폴더에 별도로 저장됨)</p><p><img src="/image/websocket04.png"></p></li><li><p>분리된 html 파일을 메인 스케치에 include문을 사용하여 삽입한 뒤 저장</p><p><img src="/image/websocket05.png"></p></li><li><p>Arduino IDE에서 메인 스케치를 열면, 별도의 탭에 분리된 html 파일도 함께 열림</p></li></ul><br><br><h4 id="Part2-메인-스케치"><a href="#Part2-메인-스케치" class="headerlink" title="Part2: 메인 스케치"></a>Part2: 메인 스케치</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateSensors</span><span class="params">()</span></span>&#123;</span><br><span class="line">  potentiometer1 = analogRead(potPin1);</span><br><span class="line">  potentiometer2 = analogRead(potPin2);</span><br><span class="line">  touch = analogRead(touPin);</span><br><span class="line">  brightness = analogRead(briPin);</span><br><span class="line"></span><br><span class="line">  String data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  data = String(data + potentiometer1); </span><br><span class="line">  data = String(data + <span class="string">&quot;|&quot;</span>); </span><br><span class="line">  data = String(data + potentiometer2); </span><br><span class="line">  data = String(data + <span class="string">&quot;|&quot;</span>); </span><br><span class="line">  data = String(data + touch); </span><br><span class="line">  data = String(data + <span class="string">&quot;|&quot;</span>); </span><br><span class="line">  data = String(data + brightness); </span><br><span class="line"> </span><br><span class="line">  webSocket.broadcastTXT(data); <span class="comment">// send the data</span></span><br><span class="line">  Serial.println(data);         <span class="comment">// display the data in the serial monitor</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>센서값은 updateSensor() 함수를 통해 불러옵니다.</li><li>4종류의 센서값을 막대 문자(“|”)를 사용하여 연결한 뒤, <strong>String</strong> 형식의 data 변수에 모두 저장한 뒤, **webSocket.broadcastTXT(data)**을 사용하여 html로 보냅니다. String 형식은 메모리를 많이 사용하는 단점이 있지만, chars에 비해 데이터 처리가 간단해지므로 유용하게 사용할 수 있다. 더구나 ESP32의 내장 메모리는 일반적인 경우 충분히 큰 편에 속한다.</li></ul><br><br><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li><p>ESP32를 AP모드로 동작하도록 하였으므로, 클라이언트에서 ESP32의 SSID를 찾아 접속한다. 예를들면,</p><ul><li>SSID : ESP32-AP-1</li><li>PASS : 123456789</li></ul></li><li><p>클라이언트의 웹브라우저를 통해, ESP32에 접속한다.</p><ul><li>(주소창에) 192.168.4.1</li></ul></li><li><p>결과 확인</p><p><img src="../image/websocket06.png"></p><p>실시간으로 센서값이 변경되는 것을 확인할 수 있습니다.</p></li></ul>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">esp32</category>
      
      
      
      <comments>http://stemwith.github.io/2019/11/15/ESP32-AP-mode-and-Websocket/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>엑셀, 데이터 유효성 검사의 목록 구성시 동적 범위 설정</title>
      <link>http://stemwith.github.io/2019/11/01/%EC%97%91%EC%85%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%ED%9A%A8%EC%84%B1%EA%B2%80%EC%82%AC-%EB%8F%99%EC%A0%81%EB%B2%94%EC%9C%84%EC%84%A4%EC%A0%95/</link>
      <guid>http://stemwith.github.io/2019/11/01/%EC%97%91%EC%85%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%ED%9A%A8%EC%84%B1%EA%B2%80%EC%82%AC-%EB%8F%99%EC%A0%81%EB%B2%94%EC%9C%84%EC%84%A4%EC%A0%95/</guid>
      <pubDate>Fri, 01 Nov 2019 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;엑셀-데이터-유효성-검사의-목록-구성시-동적으로-범위-설정하기&quot;&gt;&lt;a href=&quot;#엑셀-데이터-유효성-검사의-목록-구성시-동적으로-범위-설정하기&quot; class=&quot;headerlink&quot; title=&quot;엑셀, 데이터 유효성 검사의 목록 구성시 동</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="엑셀-데이터-유효성-검사의-목록-구성시-동적으로-범위-설정하기"><a href="#엑셀-데이터-유효성-검사의-목록-구성시-동적으로-범위-설정하기" class="headerlink" title="엑셀, 데이터 유효성 검사의 목록 구성시 동적으로 범위 설정하기"></a>엑셀, 데이터 유효성 검사의 목록 구성시 동적으로 범위 설정하기</h1><p>데이터 유효성 검사를 할 때, 상황에 따라서 목록 구성이 다르게 표시되는 방법을 알아보겠습니다. 일단 다음의 경우를 예로 들면,</p><p><img src="/image/dynamic01.png"></p><p>학교급(초등, 중등, 고등 등)을 선택하였을 때, 초등을 선택하면 학년을 선택하는 셀에서 1<del>6학년까지 6개의 목록을 선택할 수 있도록 표시되고, 중등을 선택하면 7</del>9학년,  고등을 선택하면 10~12학년을 선택할 수 있는 목록이 표시되도록 하는 것을 의미합니다. 또 학년마다 학급수가 다르기 때문에 각 학년을 선택하였을 때, 그 학년의 학급수만큼 학급 목록이 뜨도록 하면 더 좋겠죠. 이렇게 상황에 따라 목록이 유동적으로 표시되도록 하면, 데이터를 취합하는 입장에서 오류를 줄일 수 있는 상황을 기대할 수 있습니다.</p><br><br><h2 id="목록-구성-설정"><a href="#목록-구성-설정" class="headerlink" title="목록 구성 설정"></a>목록 구성 설정</h2><p>먼저 <strong>설정</strong> 시트를 만들고 조건으로 사용할 목록을 구성해보겠습니다. 여기서는 두가지가 필요한데 </p><ul><li>학교급에 따른 학년범위 설정 :  초등은 1<del>6학년, 중등은 7</del>9학년, 고등은 10~12학년, 국제와 유치는 학년개념이 없으므로 그대로 국제와 유치로 설정</li><li>학년에 따른 학급범위 설정 : 국제는 국제반, 유치는 토끼/사슴/기린반으로 나뉘고 그밖의 1~12학년까지 각 학년별 학급수를 나타냅니다. </li></ul><p><img src="/image/dynamic02.png"></p><br><br><h2 id="이름-만들기"><a href="#이름-만들기" class="headerlink" title="이름 만들기"></a>이름 만들기</h2><p>예를 들어서 설명하는 것이 가장 좋을 것 같네요. <strong>수식</strong>&gt; <strong>이름 관리자</strong>를 클릭한 후 <strong>새로 만들기</strong>를 클릭</p><p><img src="/image/dynamic03.png"></p><ul><li>이름 : <strong>학교급_초등</strong></li><li>참조 대상 : <strong>설정&#33;&#36;C&#36;3&#58;&#36;C&#36;8</strong></li></ul><p>즉, C2셀을 이름으로 하고, 학년의 범위를 나타내는 C3~C8셀까지를 참조 대상으로 하는 이름을 만드는 것이죠.</p><br><h4 id="반복하여-이름-만들기"><a href="#반복하여-이름-만들기" class="headerlink" title="반복하여 이름 만들기"></a>반복하여 이름 만들기</h4><p>이제 같은 방법으로, A2, B2, D2, E2, A11~N11 셀을 이름으로 반복하여 새 이름을 만듭니다.</p><br><h4 id="※-이름-만들기-할-때-고려할-점"><a href="#※-이름-만들기-할-때-고려할-점" class="headerlink" title="※ 이름 만들기 할 때 고려할 점"></a>※ 이름 만들기 할 때 고려할 점</h4><p>예를 들어 6학년의 경우 1~4반까지 있지만, 차기 학년도에 학급수가 6개반으로 증가하게 되면 참조 대상을 다시 수정해주어야 하는 불편한 점이 생길 수 있습니다. 그러므로 학급수 같이 유동적인 데이터는 참조 대상을 여유있게 지정해두는 것이 좋습니다.</p><ul><li>이름 : <strong>학년6_반</strong></li><li>참조 대상 : <strong>설정&#33;&#36;H&#36;12&#58;&#36;H&#36;22</strong>   (<strong>설정&#33;&#36;H&#36;12&#58;&#36;H&#36;15</strong> 로 지정하지말고 여유있게 지정하는 것을 추천)</li></ul><br><br><h2 id="적용"><a href="#적용" class="headerlink" title="적용"></a>적용</h2><p>실제 적용될 부분을 만듭니다. 여기서는 J4~L6 부분이 되겠네요.</p><p><img src="/image/dynamic04.png"></p><br><h3 id="데이터-유효성-검사"><a href="#데이터-유효성-검사" class="headerlink" title="데이터 유효성 검사"></a>데이터 유효성 검사</h3><h4 id="학교급"><a href="#학교급" class="headerlink" title="학교급"></a>학교급</h4><ol><li>J4셀 : <strong>학교급</strong>이라는 제목을 쓰고</li><li>J5셀 : <strong>데이터</strong>&gt; <strong>데이터 유효성 검사</strong>를 클릭한 뒤</li></ol><p><img src="/image/dynamic05.png"></p><ul><li>제한 대상 : <strong>목록</strong></li><li>원본 : <strong>국제,유치,초등,중등,고등</strong> </li></ul><ol start="3"><li>J6셀 : <strong>=”학교급_”&amp;$J$5</strong>  (J5셀이 초등으로 선택이 되면, <strong>학교급_초등</strong> 으로 바꿔주는 수식입니다.)</li></ol><br><h4 id="학년"><a href="#학년" class="headerlink" title="학년"></a>학년</h4><ol><li>K4셀 : <strong>학년</strong>이라는 제목을 쓰고</li><li>K5셀 : <strong>데이터</strong>&gt; <strong>데이터 유효성 검사</strong>를 클릭한 뒤</li></ol><p><img src="/image/dynamic06.png"></p><ul><li>제한 대상 : <strong>목록</strong></li><li>원본 : <strong>=INDIRECT($J$6)</strong><pre><code>           - J5셀이 **초등**으로 선택되면 J6셀이 **학교급_초등**으로 바뀌는데, J6셀을 목록 원본으로 지정하므로 이름 지정시 **학교급_초등**의 참조범위인 C3~C8 부분을 목록으로 불러옵니다.</code></pre><ul><li>그러므로, 아래와 같은 형태로 목록이 뜨게 됩니다.</li></ul></li></ul><p><img src="/image/dynamic07.png"></p><ol start="3"><li>K6셀 : <strong>=”학교급_”&amp;$K$5</strong> (K5셀이 <strong>6</strong>으로 선택이 되면, <strong>학년6_반</strong> 으로 바꿔주는 수식입니다.)</li></ol><br><h4 id="반"><a href="#반" class="headerlink" title="반"></a>반</h4><ol><li>L4셀 : <strong>반</strong>이라는 제목을 쓰고</li><li>L5셀 : <strong>데이터</strong>&gt; <strong>데이터 유효성 검사</strong>를 클릭한 뒤</li></ol><p><img src="/image/dynamic08.png"></p><ul><li>제한 대상 : <strong>목록</strong></li><li>원본 : <strong>=INDIRECT($K$6)</strong><ul><li>K5셀이 <strong>6</strong>으로 선택되면 K6셀이 <strong>학년6_반</strong>으로 바뀌는데, K6셀을 목록 원본으로 지정하므로 이름 지정시 <strong>학년_반</strong>의 참조범위인 H12~H22 부분을 목록으로 불러옵니다.</li><li>그러므로, 아래와 같은 형태로 목록이 뜨게 됩니다.</li></ul></li></ul><p><img src="/image/dynamic09.png"></p><ol start="3"><li>(선택사항) L6셀 : <strong>=K6&amp;L5</strong> (K6셀이 <strong>6</strong>, L5셀이 <strong>1</strong>로 선택이 되면, <strong>학년6_반1</strong> 과 같이 바꿔주는 수식입니다.)</li></ol><br><br><h2 id="예시파일-첨부"><a href="#예시파일-첨부" class="headerlink" title="예시파일 첨부"></a>예시파일 첨부</h2><p> <a href="/image/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%ED%9A%A8%EC%84%B1%EA%B2%80%EC%82%AC-%EB%8F%99%EC%A0%81%EB%B2%94%EC%9C%84%EC%84%A4%EC%A0%95.xls">데이터유효성검사 동적범위설정.xls</a></p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/office/">office</category>
      
      
      
      <comments>http://stemwith.github.io/2019/11/01/%EC%97%91%EC%85%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%ED%9A%A8%EC%84%B1%EA%B2%80%EC%82%AC-%EB%8F%99%EC%A0%81%EB%B2%94%EC%9C%84%EC%84%A4%EC%A0%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>4WD Bluetooth</title>
      <link>http://stemwith.github.io/2019/10/30/4WD-Bluetooth/</link>
      <guid>http://stemwith.github.io/2019/10/30/4WD-Bluetooth/</guid>
      <pubDate>Wed, 30 Oct 2019 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;지금까지 배운 RC카, 블루투스 모듈 사용법, 컨트롤러 사용법을 종합하여 Bluetooth로 조종하는 4WD를 만들어 보겠습니다. IR리모트를 사용한 RC카를 베이스로 하여 IR수신부를 빼고, 블루투스 모듈인 HC-06만 연결하면 됩니다.&lt;/p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>지금까지 배운 RC카, 블루투스 모듈 사용법, 컨트롤러 사용법을 종합하여 Bluetooth로 조종하는 4WD를 만들어 보겠습니다. IR리모트를 사용한 RC카를 베이스로 하여 IR수신부를 빼고, 블루투스 모듈인 HC-06만 연결하면 됩니다.</p><br><h2 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h2><p><img src="/image/4wd-bt-17.png"></p><br><h2 id="Bluetooth-Serial-Controller-설정"><a href="#Bluetooth-Serial-Controller-설정" class="headerlink" title="Bluetooth Serial Controller 설정"></a>Bluetooth Serial Controller 설정</h2><p>여기서는 4WD를 블루투스로 조종하기 위한 콘트롤러를 만들어 봅니다.</p><br><ol><li>먼저 Bluetooth Serial Controller를 실행시키세요. (블루투스 페어링이나 앱 설치방법은 이전의 글을 참고하세요.)  아래화면은 TERMINAL Mode인 상태입니다. 여기서 스페너 모양 아이콘을 눌러 PREFERCE로 진입하세요.</li></ol><p>![](/image/4wd-bt-01.png =432x768)</p><br><ol start="2"><li>PREFERENCE 화면에서 아무곳이나 누른 뒤, 위로 스크롤하여</li></ol><p>![](/image/4wd-bt-02.png =432x768)</p><br><ol start="3"><li>9 BUTTON MODE를 활성화 시키고, TERMINAL MODE를 꺼주세요.</li></ol><p>![](/image/4wd-bt-03.png =432x768)</p><br><ol start="4"><li>그러면 이런 화면이 나타납니다. 이제 각각의 버튼을 정의해보겠습니다.</li></ol><p>![](/image/4wd-bt-04.png =432x768)</p><br><ol start="5"><li>다시 스페너 모양 아이콘을 눌러 PREFERENCE로 들어간 뒤, BUTTON-Name을 선택합니다.</li></ol><p>![](/image/4wd-bt-05.png =432x768)</p><br><ol start="6"><li>button2, button4, button5, button6, button8을 각각 누른 뒤, 각 버튼 별로 ‘전진’, ‘왼쪽’, ‘정지’, ‘오른쪽’, ‘후진’이라고 이름을 붙여줍니다.</li></ol><p>![](/image/4wd-bt-06.png =432x768)</p><br><ol start="7"><li>다시 PREFERENCE에서 Command를 누르세요.</li></ol><p>![](/image/4wd-bt-07.png =432x768)</p><br><ol start="8"><li>Command에서 정의해주는 값이 제일 중요한데요. 각 버튼을 누를때, 아두이노로 전달되는 값을 정의해주는 것이기 때문입니다. button2, button4, button5, button6, button8을 각각 누른 뒤, 각 버튼 별로 ‘F’, ‘L’, ‘O’, ‘R’, ‘B’이라고 입력값을 넣어주세요. 이 값은 스케치 작성시 사용해야 하므로 꼭 기억해두어야 합니다.</li></ol><p>![](/image/4wd-bt-08.png =432x768)</p><br><ol start="9"><li>이제 Visibility로 갑니다.</li></ol><p>![](/image/4wd-bt-09.png =432x768)</p><br><ol start="10"><li>여기서는 필요없는 버튼을 지워줄 수 있어요. 실제 사용되는 버튼에만 체크하고, 나머지 버튼은 체크 해제합니다.</li></ol><p>![](/image/4wd-bt-10.png =432x768)</p><br><ol start="11"><li>그러면, 아래와 같은 멋진 블루투스 컨트롤러가 나타납니다.</li></ol><p>![](/image/4wd-bt-11.png =432x768)</p><br><ol start="12"><li>이 상태에서 돋보기 모양 아이콘을 눌러 HC-06에 접속해 봅니다. 여기서부터는 블루투스 페어링 과정에서 설명했던 부분과 똑같습니다. </li></ol><p>![](/image/4wd-bt-12.png =432x768)</p><br><ol start="13"><li>모듈ID인 SKS100을 누르면 페어링을 시도하고요.</li></ol><p>![](/image/4wd-bt-13.png =432x768)</p><br><ol start="14"><li>만일 페어링할 모듈이 나타나지 않으면, Scan for devices로 모듈을 찾아 페어링을 해봅니다.</li></ol><p>![](/image/4wd-bt-14.png =432x768)</p><br><ol start="15"><li>페어링을 시도하는 중이네요.</li></ol><p>![](/image/4wd-bt-15.png =432x768)</p><br><ol start="16"><li>페어링 완료! 이제 컨트롤러 사용을 위한 모든 준비과정이 완료되었습니다.</li></ol><p>![](/image/4wd-bt-16.png =432x768)</p><br><br><h2 id="4WD-블루투스-초음파센서-자동차"><a href="#4WD-블루투스-초음파센서-자동차" class="headerlink" title="4WD 블루투스 초음파센서 자동차"></a>4WD 블루투스 초음파센서 자동차</h2><p>위 회로에 초음파 센서 하나만 덧붙여봅니다. 50cm 이내에 물체가 접근하면 후진했다가 정지하도록 되어있습니다. (실제로는 50cm보다 훨씬 짧은 거리내에서 후진을 시작하네요.)</p><br><h3 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h3><p><img src="/image/4wd-bt-18.png"></p><br><h3 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Initialize Bluetooth</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"><span class="function">SoftwareSerial <span class="title">BTSerial</span><span class="params">(<span class="number">7</span>, <span class="number">3</span>)</span></span>;  <span class="comment">// HC-06 TX,RX</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize TB6612FNG Motor drive</span></span><br><span class="line"><span class="keyword">int</span> STBY = <span class="number">10</span>;  <span class="comment">// STBY pin on TB6612FNG. Must be HIGH to enable motor</span></span><br><span class="line"><span class="keyword">int</span> A_PWM = <span class="number">5</span>;  <span class="comment">// Left motor speed control using analogWrite() function. Value between 0 - 255</span></span><br><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">9</span>;  <span class="comment">// Left motor - LOW should go forward</span></span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">8</span>;  <span class="comment">// Left motor - HIGH should go forward</span></span><br><span class="line"><span class="keyword">int</span> B_PWM = <span class="number">6</span>;  <span class="comment">// Right motor speed control using analogWrite() function. Value between 0 - 255</span></span><br><span class="line"><span class="keyword">int</span> B_IN1 = <span class="number">11</span>; <span class="comment">// Right motor - LOW should go forward</span></span><br><span class="line"><span class="keyword">int</span> B_IN2 = <span class="number">12</span>; <span class="comment">// Right motor - HIGH should go forward</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> L_MaxSpeed = <span class="number">255</span>;   <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> R_MaxSpeed = <span class="number">255</span>;   <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> L_TurnSpeed = <span class="number">128</span>;  <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> R_TurnSpeed = <span class="number">128</span>;  <span class="comment">//set motor speed to max speed</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> LR_Direct = <span class="number">0</span>;      <span class="comment">//for Direction (0:clockwise, 1:count-clockwise)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize Ultrasonic Sensor</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRIG 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ECHO 4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> val;</span><br><span class="line"><span class="keyword">long</span> val_distance;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  pinMode(A_PWM, OUTPUT);                        <span class="comment">// Motor</span></span><br><span class="line">  pinMode(A_IN1, OUTPUT);</span><br><span class="line">  pinMode(A_IN2, OUTPUT);</span><br><span class="line">  pinMode(B_PWM, OUTPUT);</span><br><span class="line">  pinMode(B_IN1, OUTPUT);</span><br><span class="line">  pinMode(B_IN2, OUTPUT);</span><br><span class="line">  pinMode(STBY, OUTPUT);</span><br><span class="line">  </span><br><span class="line">  pinMode(TRIG, OUTPUT);                         <span class="comment">// Ultrasonic Sensor</span></span><br><span class="line">  pinMode(ECHO, INPUT);</span><br><span class="line">  </span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  BTSerial.begin(<span class="number">9600</span>);                          <span class="comment">// Start Bluetooth</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (!BTSerial.available()) &#123;                <span class="comment">// 처음 입력이 있을때까지</span></span><br><span class="line">  stop();                                        <span class="comment">// 정지</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  distance();                                    <span class="comment">// 거리 측정</span></span><br><span class="line">  Serial.println(val_distance);                 <span class="comment">// 거리 출력</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (BTSerial.available()) &#123;                    <span class="comment">// Check for Bluetooth input</span></span><br><span class="line">    val = BTSerial.read();                       <span class="comment">// 입력값 val에 저장</span></span><br><span class="line">    Serial.println(val);                        <span class="comment">// 입력값 출력</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (val_distance &gt; <span class="number">50</span>) &#123;  <span class="comment">// 거리가 50cm 이상이면 입력값 실행</span></span><br><span class="line">    parseCommand(val);                           <span class="comment">// parse the input</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;                                       <span class="comment">// 거리가 50cm 이내이면 </span></span><br><span class="line">    stop();</span><br><span class="line">    delay(<span class="number">20</span>);</span><br><span class="line">    b_stop();                                    <span class="comment">// 거리가 50cm 이상이 될 때까지 후진 후, 정지</span></span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">parseCommand</span><span class="params">(<span class="keyword">char</span> input)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">switch</span> (input) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span>:</span><br><span class="line">      go_forward();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:  </span><br><span class="line">      go_backward();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:  </span><br><span class="line">      <span class="keyword">if</span>(LR_Direct==<span class="number">0</span>) &#123;</span><br><span class="line">        go_f_left();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LR_Direct==<span class="number">1</span>) &#123;</span><br><span class="line">        go_b_left();</span><br><span class="line">      &#125;     </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">      <span class="keyword">if</span>(LR_Direct==<span class="number">0</span>) &#123;</span><br><span class="line">        go_f_right();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LR_Direct==<span class="number">1</span>) &#123;</span><br><span class="line">        go_b_right();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;O&#x27;</span>:</span><br><span class="line">      stop();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">  delay(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">distance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  digitalWrite(TRIG, LOW);                       <span class="comment">// Start Ultrasonic sensor</span></span><br><span class="line">  delayMicroseconds(<span class="number">2</span>);</span><br><span class="line">  digitalWrite(TRIG, HIGH);</span><br><span class="line">  delayMicroseconds(<span class="number">10</span>);</span><br><span class="line">  digitalWrite(TRIG, LOW);</span><br><span class="line"></span><br><span class="line">  val_distance = pulseIn(ECHO, HIGH) / <span class="number">58.2</span>;     <span class="comment">// 거리 측정</span></span><br><span class="line">&#125;       </span><br><span class="line"></span><br><span class="line"><span class="comment">// Move specific motor at speed and direction</span></span><br><span class="line"><span class="comment">// motor: A(Left) -&gt; 0, B(Right) -&gt; 1</span></span><br><span class="line"><span class="comment">// speed: 0 is off, and 255 is full speed</span></span><br><span class="line"><span class="comment">// direction: 0 clockwise, 1 counter-clockwise</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> motorLR, <span class="keyword">int</span> speed, boolean inPin1, boolean inPin2)</span> </span>&#123;</span><br><span class="line">  digitalWrite(STBY, HIGH);        <span class="comment">// Disable Standby</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (motorLR == <span class="number">0</span>) &#123;</span><br><span class="line">    analogWrite(A_PWM, speed);</span><br><span class="line">    digitalWrite(A_IN1, inPin1);</span><br><span class="line">    digitalWrite(A_IN2, inPin2);   </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (motorLR == <span class="number">1</span>) &#123;</span><br><span class="line">    analogWrite(B_PWM, speed);</span><br><span class="line">    digitalWrite(B_IN1, inPin1);</span><br><span class="line">    digitalWrite(B_IN2, inPin2);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_forward</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;F&quot;</span>);</span><br><span class="line">  move(<span class="number">0</span>, L_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  move(<span class="number">1</span>, R_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  LR_Direct = <span class="number">0</span>;              <span class="comment">// Forward</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_backward</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">  move(<span class="number">0</span>, L_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line">  move(<span class="number">1</span>, R_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  LR_Direct = <span class="number">1</span>;              <span class="comment">// Backward</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_f_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;F_L&quot;</span>);</span><br><span class="line">  move(<span class="number">0</span>, L_TurnSpeed, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  move(<span class="number">1</span>, R_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_b_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;B_R&quot;</span>);</span><br><span class="line">  move(<span class="number">0</span>, L_TurnSpeed, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line">  move(<span class="number">1</span>, R_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_f_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;F_R&quot;</span>);</span><br><span class="line">  move(<span class="number">0</span>, L_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  move(<span class="number">1</span>, R_TurnSpeed, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_b_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;B_R&quot;</span>);</span><br><span class="line">  move(<span class="number">0</span>, L_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line">  move(<span class="number">1</span>, R_TurnSpeed, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">b_stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;B_STOP&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span> (val_distance &lt; <span class="number">50</span>) &#123;                    <span class="comment">// 거리가 50cm 이내인 경우 반복</span></span><br><span class="line">    go_backward();                               <span class="comment">// 후진</span></span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    distance();                                  <span class="comment">// 거리를 다시 측정</span></span><br><span class="line">    delay(<span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (!BTSerial.available()) &#123;                <span class="comment">// 입력이 없으면</span></span><br><span class="line">    stop();                                      <span class="comment">// 정지상태 유지</span></span><br><span class="line">  &#125;</span><br><span class="line">  LR_Direct = <span class="number">0</span>;                                 <span class="comment">// 앞으로 갈 준비</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;STOP&quot;</span>);</span><br><span class="line">  digitalWrite(STBY, LOW);                       <span class="comment">// Enable Standby</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/arduino/">arduino</category>
      
      
      <category domain="http://stemwith.github.io/tags/rc/">rc</category>
      
      
      <comments>http://stemwith.github.io/2019/10/30/4WD-Bluetooth/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DC모터 + 4WD 자동차 만들기 (TB6612FNG)</title>
      <link>http://stemwith.github.io/2019/10/29/DC%EB%AA%A8%ED%84%B0-4WD-%EC%9E%90%EB%8F%99%EC%B0%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>http://stemwith.github.io/2019/10/29/DC%EB%AA%A8%ED%84%B0-4WD-%EC%9E%90%EB%8F%99%EC%B0%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Tue, 29 Oct 2019 09:27:53 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;DC모터-사용하기&quot;&gt;&lt;a href=&quot;#DC모터-사용하기&quot; class=&quot;headerlink&quot; title=&quot;DC모터 사용하기&quot;&gt;&lt;/a&gt;DC모터 사용하기&lt;/h3&gt;&lt;p&gt;아두이노의 5V, 3.3V핀으로는 모터에 필요한 충분한 전압과 전류를 공급하</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="DC모터-사용하기"><a href="#DC모터-사용하기" class="headerlink" title="DC모터 사용하기"></a>DC모터 사용하기</h3><p>아두이노의 5V, 3.3V핀으로는 모터에 필요한 충분한 전압과 전류를 공급하기 어렵다. 그러므로 사용하려는 모터에 맞는 전압과 전류의 공급을 위한 모터드라이버를 사용해야 한다. 아두이노에서 주로 사용하는 모듈은 L293D, L298N와 TB6612FNG 등이 있으며, 여기서는 TB6612FNG 모터드라이버와 함께, 모터 및 아두이노 단독사용을 위하여 별도의 외부전원을 사용한다. <del>외부 전원으로는 모터를 위한 1.5V AA*4개와 함께 아두이노 단독사용을 위한 9V 사각전지(6F22)를 추가로 연결하였다.</del> </p><blockquote><p>1.5V AA 6개 혹은 3.7V 18650 2개를 직렬로 연결하여 사용하면, 9V 사각전지(6F22)가 필요하지 않으므로 이 방법을 추천한다. 또한 AA 건전지를 사용하는 경우 4WD기준 연속사용시간은 10분 정도뿐일 정도로 전지 소모가 매우 빠르므로, 충전이 가능한 18650 사용을 추천한다.</p></blockquote><br><h4 id="TB6612FNG"><a href="#TB6612FNG" class="headerlink" title="TB6612FNG"></a>TB6612FNG</h4><table><thead><tr><th align="center">VM<br/>VCC<br/>GND(*)<br/>AOUT1<br/>AOUT2<br/>BOUT2<br/>BOUT1<br/>GND</th><th align="center"><img src="/image/t/tb6612fng-01.png"></th><th align="center">PWMA<br/>AIN2<br/>AIN1<br/>STBY<br/>BIN1<br/>BIN2<br/>PWMB<br/>GND</th></tr></thead><tbody><tr><td align="center"></td><td align="center"><img src="/image/t/tb6612fng-02.png" style="zoom:80%;" /></td><td align="center"></td></tr></tbody></table><ul><li>VM (모터 전압) = 15V max</li><li>VCC (로직 전압) = 2.7 ~ 5.5V</li><li><strong>GND</strong><ul><li>TB6612fng 모듈을 여러개 테스트한 결과, <strong>3번핀 GND</strong>에 연결할 경우 <strong>작동이 안되는</strong> 몇몇 제품이 있었음</li><li>그러므로 <strong>8번핀, 9번핀의 GND 사용을 권장</strong>함</li></ul></li><li>출력전류: 정전류 1.2A (3.2A peak)까지 (모터 2개 사용시 합산 전류임)</li><li>모터 제어모드: CW, CCW, short-brake, STOP, stand-by</li><li>두개의 모터 출력을 개별 제어하며, <strong>100kHz</strong>의 PWM으로 속도 제어</li><li>써멀 셧다운 및 저전압 감지회로 내장</li></ul><br><h5 id="Pin의-사용"><a href="#Pin의-사용" class="headerlink" title="Pin의 사용"></a>Pin의 사용</h5><table><thead><tr><th>핀번호</th><th>모터드라이브1</th><th>아두이노</th><th>외부전원</th><th>모터 / 역할</th></tr></thead><tbody><tr><td>1</td><td>VM</td><td></td><td>(+) (DC모터에 사용하는 전압 사용)</td><td></td></tr><tr><td>2</td><td>VCC</td><td>+5V</td><td></td><td></td></tr><tr><td>3</td><td>GND (사용 비추천)</td><td></td><td></td><td></td></tr><tr><td>4</td><td>A_OUT1</td><td></td><td></td><td>모터A</td></tr><tr><td>5</td><td>A_OUT2</td><td></td><td></td><td>모터A</td></tr><tr><td>6</td><td>B_OUT2</td><td></td><td></td><td>모터B</td></tr><tr><td>7</td><td>B_OUT1</td><td></td><td></td><td>모터B</td></tr><tr><td>8</td><td>GND</td><td></td><td>(-)</td><td></td></tr><tr><td>9</td><td>GND</td><td>GND</td><td></td><td></td></tr><tr><td>10</td><td>B_PWM</td><td>6</td><td></td><td>모터B 속도제어</td></tr><tr><td>11</td><td>B_IN2</td><td>12</td><td></td><td>모터B 방향제어</td></tr><tr><td>12</td><td>B_IN1</td><td>11</td><td></td><td>모터B 방향제어</td></tr><tr><td>13</td><td>STBY</td><td>10</td><td></td><td>모터 상태신호</td></tr><tr><td>14</td><td>A_IN1</td><td>9</td><td></td><td>모터A 방향제어</td></tr><tr><td>15</td><td>A_IN2</td><td>8</td><td></td><td>모터A 방향제어</td></tr><tr><td>16</td><td>A_PWM</td><td>5</td><td></td><td>모터A 속도제어</td></tr></tbody></table><ul><li>속도제어에 사용하는 A_PWM, B_PWM은 아두이노의 PWM이 가능한 핀에 연결하여야 합니다. 여기서는 ~5, ~6번 핀 사용.</li></ul><br><h5 id="주의-Pin-Map이-다른-모듈의-경우"><a href="#주의-Pin-Map이-다른-모듈의-경우" class="headerlink" title="주의: Pin Map이 다른 모듈의 경우"></a>주의: Pin Map이 다른 모듈의 경우</h5><p>TB6612FNG를 여러 개 구입하여 사용해본 결과, 위의 핀맵과 조금 다른 모듈도 있었다. </p><table><thead><tr><th>핀번호</th><th>모터드라이브1</th><th>아두이노</th><th>외부전원</th><th>모터 / 역할</th></tr></thead><tbody><tr><td>1</td><td>GND</td><td>GND</td><td>(-)</td><td></td></tr><tr><td>2</td><td>VCC (2.7~5.5V)</td><td>+5V</td><td></td><td></td></tr><tr><td>3</td><td>A_OUT1</td><td></td><td></td><td>모터A</td></tr><tr><td>4</td><td>A_OUT2</td><td></td><td></td><td>모터A</td></tr><tr><td>5</td><td>B_OUT2</td><td></td><td></td><td>모터B</td></tr><tr><td>6</td><td>B_OUT1</td><td></td><td></td><td>모터B</td></tr><tr><td>7</td><td>VM (15V max)</td><td></td><td>(+) (DC모터 요구 전압 사용)</td><td></td></tr><tr><td>8</td><td>GND</td><td></td><td></td><td></td></tr><tr><td>9</td><td>GND</td><td></td><td></td><td></td></tr><tr><td>10</td><td>B_PWM</td><td>6</td><td></td><td>모터B 속도제어</td></tr><tr><td>11</td><td>B_IN2</td><td>12</td><td></td><td>모터B 방향제어</td></tr><tr><td>12</td><td>B_IN1</td><td>11</td><td></td><td>모터B 방향제어</td></tr><tr><td>13</td><td>NC(STBY)</td><td>10</td><td></td><td>모터 상태신호</td></tr><tr><td>14</td><td>A_IN1</td><td>9</td><td></td><td>모터A 방향제어</td></tr><tr><td>15</td><td>A_IN2</td><td>8</td><td></td><td>모터A 방향제어</td></tr><tr><td>16</td><td>A_PWM</td><td>5</td><td></td><td>모터A 속도제어</td></tr></tbody></table><br><h4 id="TB6612FNG와-DC모터의-연결"><a href="#TB6612FNG와-DC모터의-연결" class="headerlink" title="TB6612FNG와 DC모터의 연결"></a>TB6612FNG와 DC모터의 연결</h4><h5 id="Pin-Map"><a href="#Pin-Map" class="headerlink" title="Pin Map"></a>Pin Map</h5><p>TB6612FNG 모터드라이브는 2채널 형태이며, 만일 2WD 자동차를 만든다면 디지털핀 7개가 필요하다. 4개의 DC모터를 사용하여 4WD 자동차를 만드는 방법은 3가지로 나눠 생각해볼 수 있는데, 모든 바퀴를 각각 컨트롤 하는 방법, 왼쪽 바퀴와 오른쪽 바퀴로 나누어 컨트롤 하는 방법, 앞 바퀴와 뒷 바퀴로 나누어 컨트롤 하는 방법 등이 있다.</p><ul><li>모든 바퀴를 각각 컨트롤 하는 경우 : 모터드라이브 2개와 디지털핀 14개 사용<ul><li>그런데, 아두이노에서 실제 사용할 수 있는 디지털핀의 개수가 12개(2~13번)이므로, 2개의 디지털핀이 부족하다.<ul><li>아날로그핀을 디지털핀과 동일하게 사용할 수 있으므로, 2개의 아날로그핀을 추가로 사용한다.</li><li>또는 스케치 업로드시에만 0,1번 핀을 빼두었다가, 스케치 업로드가 끝나면 0,1번 핀을 사용한다. 이렇게 사용하면 0~13번까지 총 14개의 디지털핀을 확보할 수 있다.</li></ul></li></ul></li><li><strong>왼쪽과 오른쪽 바퀴로 나누어 컨트롤</strong> 하는 방법 : 디지털핀 7개 사용 (아래 본문에서 사용한 방법)</li><li>앞과 뒷 바퀴로 나누어 컨트롤 하는 방법 : 디지털핀 7개 사용. (단, 조향을 위한 추가적인 방법을 고려해야 함.)  </li></ul><br><h4 id="H-SW-Control-Function"><a href="#H-SW-Control-Function" class="headerlink" title="H-SW Control Function"></a>H-SW Control Function</h4><table><thead><tr><th>Input</th><th></th><th></th><th></th><th>Output</th><th></th><th></th></tr></thead><tbody><tr><td>IN1</td><td>IN2</td><td>PWM</td><td>STBY</td><td>OUT1</td><td>OUT2</td><td>Mode</td></tr><tr><td>H</td><td>H</td><td>H/L</td><td>H</td><td>L</td><td>L</td><td>Short Brake</td></tr><tr><td>L</td><td>H</td><td>H</td><td>H</td><td>L</td><td>H</td><td>Count-Clockwise</td></tr><tr><td>L</td><td>H</td><td>L</td><td>H</td><td>L</td><td>L</td><td>Short Brake</td></tr><tr><td>H</td><td>L</td><td>H</td><td>H</td><td>H</td><td>L</td><td>Clockwise</td></tr><tr><td>H</td><td>L</td><td>L</td><td>H</td><td>L</td><td>L</td><td>Short Brake</td></tr><tr><td>L</td><td>L</td><td>H</td><td>H</td><td>OFF(High impedance)</td><td>OFF(High impedance)</td><td>Stop</td></tr><tr><td>H/L</td><td>H/L</td><td>H/L</td><td>L</td><td>OFF(High impedance)</td><td>OFF(High impedance)</td><td>Standby</td></tr></tbody></table><br><p>출력 결과는 아래와 같으며,</p><ul><li>IN1이 LOW, IN2가 HIGH, PWM으로 신호를 출력할 경우 시계 반대 방향(CCW)으로 회전</li><li>IN1이 HIGH, IN2가 LOW, PWM으로 신호를 출력할 경우 시계 방향(CW)으로 회전</li><li>그 밖의 경우는 모두 stop 상태로 해석하면 된다.</li></ul><br><h3 id="모터-1개-컨트롤하기"><a href="#모터-1개-컨트롤하기" class="headerlink" title="모터 1개 컨트롤하기"></a>모터 1개 컨트롤하기</h3><p>여기서 사용하는 DC모터는 아래의 형태를 가진 기어드모터이며, 아두이노를 사용하여 자동차를 만드는데 많이 사용되는 저렴이 모터이다.</p><p><img src="/image/4wd-01.jpg"></p><br><h4 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h4><h5 id="UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우"><a href="#UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우" class="headerlink" title="UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우"></a>UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우</h5><p><img src="/image/4wd-02.png"></p><br><h5 id="UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우"><a href="#UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우" class="headerlink" title="UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우"></a>UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우</h5><ul><li>UNO 보드의 Vin에 외부전원(7.4V) (+)에 연결: 6.6V~12V 범위의 전원 연결 가능 (7.2V 이상 추천)</li><li>UNO 보드의 GND를 TB6612fng 모듈의 GND에 연결</li></ul><p><img src="/image/4wd-03.png"></p><br><h4 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> STBY = <span class="number">10</span>;            <span class="comment">// Standby</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Motor A</span></span><br><span class="line"><span class="keyword">int</span> A_PWM = <span class="number">5</span>;            <span class="comment">// Speed Control</span></span><br><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(STBY, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_PWM, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN2, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, <span class="number">128</span>, <span class="number">0</span>);          <span class="comment">// motor A(right wheels), half speed, moving forward</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);              <span class="comment">// go for 1 second</span></span><br><span class="line">  <span class="built_in">stop</span>();                   <span class="comment">// stop</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">250</span>);               <span class="comment">// hold for 250ms until move again</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, <span class="number">128</span>, <span class="number">1</span>);          <span class="comment">// motor A(right wheels), half speed, moving backward</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">stop</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">250</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> motor, <span class="keyword">int</span> speed, <span class="keyword">int</span> direction)</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- Move specific motor at speed and direction</span></span><br><span class="line"><span class="comment">- motor: A -&gt; 1</span></span><br><span class="line"><span class="comment">- speed: 0 is off, and 255 is full speed</span></span><br><span class="line"><span class="comment">= direction: 0 clockwise, 1 counter-clockwise</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, HIGH);        <span class="comment">// Disable Standby</span></span><br><span class="line"></span><br><span class="line">  boolean inPin1 = LOW;            <span class="comment">// Defalut(direction=0) - Clockwise</span></span><br><span class="line">  boolean inPin2 = HIGH;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(direction == <span class="number">1</span>) &#123;             <span class="comment">// Count-clockwise</span></span><br><span class="line">    inPin1 = HIGH;</span><br><span class="line">    inPin2 = LOW;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(motor == <span class="number">1</span>)&#123;                  <span class="comment">// if motor == 1, right wheel</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN2, inPin2);</span><br><span class="line">    <span class="built_in">analogWrite</span>(A_PWM, speed);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;                           <span class="comment">// if motor is not 1, left wheel</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">stop</span>() &#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, LOW);         <span class="comment">// Enable Standby</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h5 id="회전-방향이-생각했던-방향과-반대로-회전하는-경우"><a href="#회전-방향이-생각했던-방향과-반대로-회전하는-경우" class="headerlink" title="회전 방향이 (생각했던 방향과) 반대로 회전하는 경우"></a>회전 방향이 (생각했던 방향과) 반대로 회전하는 경우</h5><p>A_IN1핀과 A_IN2 핀의 번호를 바꿔준다. 즉, 위 스케치에서</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">9</span>;</span><br></pre></td></tr></table></figure><p>부분을</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">8</span>;</span><br></pre></td></tr></table></figure><p>로 바꿔준다.</p><br><h3 id="4WD-자동차-만들기"><a href="#4WD-자동차-만들기" class="headerlink" title="4WD 자동차 만들기"></a>4WD 자동차 만들기</h3><h4 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h4><h5 id="UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우-1"><a href="#UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우-1" class="headerlink" title="UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우"></a>UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우</h5><p><img src="/image/4wd-04.png"></p><br><h5 id="UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우-1"><a href="#UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우-1" class="headerlink" title="UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우"></a>UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우</h5><ul><li>UNO 보드의 Vin에 외부전원(7.4V) (+)에 연결: 6.6V~12V 범위의 전원 연결 가능 (7.2V 이상 추천)</li><li>UNO 보드의 GND를 TB6612fng 모듈의 GND에 연결</li></ul><p><img src="/image/4wd-05.png"></p><br><h4 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// front wheel : B1 - A1</span></span><br><span class="line"><span class="comment">// rear  wheel : B2 - A2 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> STBY = <span class="number">10</span>;            <span class="comment">// Standby</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Motor A 1 &amp; 2(Right)</span></span><br><span class="line"><span class="keyword">int</span> A_PWM = <span class="number">5</span>;             <span class="comment">// Speed Control</span></span><br><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Motor B 1 &amp; 2(Left)</span></span><br><span class="line"><span class="keyword">int</span> B_PWM = <span class="number">6</span>;             <span class="comment">// Speed Control</span></span><br><span class="line"><span class="keyword">int</span> B_IN1 = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">int</span> B_IN2 = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(STBY, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_PWM, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN2, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_PWM, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_IN2, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, <span class="number">128</span>, <span class="number">0</span>);                  <span class="comment">// motor A(right wheels), half speed, moving forward</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">2</span>, <span class="number">128</span>, <span class="number">0</span>);                  <span class="comment">// motor B(left wheels), half speed, moving forward</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);                      <span class="comment">// go for 1 second</span></span><br><span class="line">  <span class="built_in">stop</span>();                           <span class="comment">// stop</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">250</span>);                       <span class="comment">// hold for 250ms until move again</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, <span class="number">128</span>, <span class="number">1</span>);                  <span class="comment">// motor A(right wheels), half speed, moving backward</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">2</span>, <span class="number">128</span>, <span class="number">1</span>);                  <span class="comment">// motor B(left wheels), half speed, moving backward</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">stop</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">250</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> motor, <span class="keyword">int</span> speed, <span class="keyword">int</span> direction)</span> </span>&#123;   <span class="comment">//Move specific motor at speed and direction</span></span><br><span class="line"><span class="comment">//motor: A(Right) -&gt; 1, B(Left) -&gt; 2</span></span><br><span class="line"><span class="comment">//speed: 0 is off, and 255 is full speed</span></span><br><span class="line"><span class="comment">//direction: 0 clockwise, 1 counter-clockwise</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, HIGH);        <span class="comment">// Disable Standby</span></span><br><span class="line"></span><br><span class="line">  boolean inPin1 = LOW;            <span class="comment">// Defalut(direction=0) - Clockwise</span></span><br><span class="line">  boolean inPin2 = HIGH;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(direction == <span class="number">1</span>) &#123;             <span class="comment">// Count-clockwise</span></span><br><span class="line">    inPin1 = HIGH;</span><br><span class="line">    inPin2 = LOW;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(motor == <span class="number">1</span>)&#123;                  <span class="comment">// if motor == 1, right wheel</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN2, inPin2);</span><br><span class="line">    <span class="built_in">analogWrite</span>(A_PWM, speed);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;                         <span class="comment">// if motor is not 1, left wheel</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(B_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(B_IN2, inPin2);</span><br><span class="line">    <span class="built_in">analogWrite</span>(B_PWM, speed);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, LOW);        <span class="comment">// Enable Standby</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="IR-리모컨으로-4WD-컨트롤하기"><a href="#IR-리모컨으로-4WD-컨트롤하기" class="headerlink" title="IR 리모컨으로 4WD 컨트롤하기"></a>IR 리모컨으로 4WD 컨트롤하기</h3><p>IR리모컨을 사용하여 RC카를 컨트롤 하기 위해서는 모터와 회로에서 발생하는 노이즈를 제거하기 위한 104 케패시터(0.1uF)를 사용하는 것이 원칙입니다. 반드시 사용해야 하는 것은 아니지만, 회로보호를 위해 캐패시터가 있는 경우에는 IR 수신부의 (+)와 (-)에 병렬연결하세요. 이에 더하여 후진시 방향전환도 가능하도록 수정해 봅니다.</p><br><h4 id="schematic-2"><a href="#schematic-2" class="headerlink" title="schematic"></a>schematic</h4><h5 id="UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우-2"><a href="#UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우-2" class="headerlink" title="UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우"></a>UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우</h5><p><img src="/image/4wd-06.png"></p><br><h5 id="UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우-2"><a href="#UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우-2" class="headerlink" title="UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우"></a>UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우</h5><p><img src="/image/4wd-07.png"></p><br><br><h4 id="IRremote-라이브러리-추가하기"><a href="#IRremote-라이브러리-추가하기" class="headerlink" title="IRremote 라이브러리 추가하기"></a>IRremote 라이브러리 추가하기</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boarddefs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremote.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremoteInt.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ir_Lego_PF_BitStreamEncoder.h&gt;</span></span></span><br></pre></td></tr></table></figure><br><h4 id="사용할-리모컨-버튼-HEX값"><a href="#사용할-리모컨-버튼-HEX값" class="headerlink" title="사용할 리모컨 버튼 HEX값"></a>사용할 리모컨 버튼 HEX값</h4><table><thead><tr><th>Remote Button</th><th>unsigned int data</th><th>define</th></tr></thead><tbody><tr><td>▲ (전진 / 속도 증가)</td><td>0XFF18E7</td><td>BTN_U</td></tr><tr><td>▼ (후진 / 속도 감소)</td><td>0XFFA4B5</td><td>BTN_D</td></tr><tr><td>◀ (좌회전 / 좌회전각 증가)</td><td>0XFF10EF</td><td>BTN_L</td></tr><tr><td>▶ (우회전 / 우회전각 증가)</td><td>0XFF5AA5</td><td>BTN_R</td></tr><tr><td>OK (정지)</td><td>0XFF38C7</td><td>BTN_O</td></tr></tbody></table><p>보유하고 있는 리모컨의 종류마다 HEX값이 다르므로, HEX값은 다를 수 있습니다. HEX값을 알아내는 방법은 IR Remote를 다루는 페이지를 참고하세요.</p><br><h4 id="sketch-2"><a href="#sketch-2" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Initialize IR remote</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boarddefs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremote.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremoteInt.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ir_Lego_PF_BitStreamEncoder.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> RECV_PIN = <span class="number">13</span>;              <span class="comment">// IR Signal pin</span></span><br><span class="line"><span class="function">IRrecv <span class="title">irrecv</span><span class="params">(RECV_PIN)</span></span>;</span><br><span class="line">decode_results results;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_F 0xFF18E7  <span class="comment">// Forward Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_B 0xFF4AB5  <span class="comment">// Backward Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_L 0xFF10EF  <span class="comment">// Left Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_R 0xFF5AA5  <span class="comment">// Right Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_O 0xFF38C7  <span class="comment">// OK Button</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize TB6612FNG Motor drive</span></span><br><span class="line"><span class="keyword">int</span> STBY = <span class="number">10</span>;  <span class="comment">// STBY pin on TB6612FNG. Must be HIGH to enable motor</span></span><br><span class="line"><span class="keyword">int</span> A_PWM = <span class="number">5</span>;  <span class="comment">// Right motor speed control using analogWrite() function. Value between 0 - 255</span></span><br><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">9</span>;  <span class="comment">// Right motor - LOW should go forward</span></span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">8</span>;  <span class="comment">// Right motor - HIGH should go forward</span></span><br><span class="line"><span class="keyword">int</span> B_PWM = <span class="number">6</span>;  <span class="comment">// Left motor speed control using analogWrite() function. Value between 0 - 255</span></span><br><span class="line"><span class="keyword">int</span> B_IN1 = <span class="number">11</span>; <span class="comment">// Left motor - LOW should go forward</span></span><br><span class="line"><span class="keyword">int</span> B_IN2 = <span class="number">12</span>; <span class="comment">// Left motor - HIGH should go forward</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> R_MaxSpeed = <span class="number">255</span>;   <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> L_MaxSpeed = <span class="number">255</span>;   <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> R_TurnSpeed = <span class="number">128</span>;  <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> L_TurnSpeed = <span class="number">128</span>;  <span class="comment">//set motor speed to max speed</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> LR_Direct = <span class="number">0</span>;      <span class="comment">//for Direction</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(A_PWM, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN2, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_PWM, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_IN2, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(STBY, OUTPUT);</span><br><span class="line">  </span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  irrecv.<span class="built_in">enableIRIn</span>();                           <span class="comment">// Start the receiver</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (irrecv.<span class="built_in">decode</span>(&amp;results)) &#123;                 <span class="comment">// Read IR remote control</span></span><br><span class="line">    <span class="comment">//Serial.println(results.value, HEX);        // for debug</span></span><br><span class="line">    irrecv.<span class="built_in">resume</span>();                             <span class="comment">// Receive the next value</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in"><span class="keyword">switch</span></span>(results.value) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> BTN_F:</span><br><span class="line">      <span class="built_in">go_forward</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_B:  </span><br><span class="line">      <span class="built_in">go_backward</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_L:  </span><br><span class="line">      <span class="keyword">if</span>(LR_Direct==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">go_f_left</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LR_Direct==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">go_b_left</span>();</span><br><span class="line">      &#125;     </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_R:</span><br><span class="line">      <span class="keyword">if</span>(LR_Direct==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">go_f_right</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LR_Direct==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">go_b_right</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_O:</span><br><span class="line">      <span class="built_in">stop</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Move specific motor at speed and direction</span></span><br><span class="line"><span class="comment">// motor: A(Right) -&gt; 0, B(Left) -&gt; 1</span></span><br><span class="line"><span class="comment">// speed: 0 is off, and 255 is full speed</span></span><br><span class="line"><span class="comment">// direction: 0 clockwise, 1 counter-clockwise</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> motorLR, <span class="keyword">int</span> speed, boolean inPin1, boolean inPin2)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, HIGH);        <span class="comment">// Disable Standby</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (motorLR == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">analogWrite</span>(A_PWM, speed);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN2, inPin2);   </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (motorLR == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">analogWrite</span>(B_PWM, speed);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(B_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(B_IN2, inPin2);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_forward</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  LR_Direct = <span class="number">0</span>;              <span class="comment">// Forward</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_backward</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line">  LR_Direct = <span class="number">1</span>;              <span class="comment">// Backward</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_f_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F_L&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_TurnSpeed, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_b_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F_R&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_TurnSpeed, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_f_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F_R&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_TurnSpeed, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_b_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;B_R&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_TurnSpeed, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;STOP&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, LOW);    <span class="comment">// Enable Standby</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="초음파-센서-장착"><a href="#초음파-센서-장착" class="headerlink" title="초음파 센서 장착"></a>초음파 센서 장착</h3><p>초음파 센서를 장착하여 전진시 일정한 거리 내에  장애물이 있으면 자동차를 멈춰보도록 하겠습니다. Trig는 아두이노 2번핀, Echo는 4번핀에 연결하였습니다.</p><br><h4 id="schematic-3"><a href="#schematic-3" class="headerlink" title="schematic"></a>schematic</h4><h5 id="UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우-3"><a href="#UNO보드와-컴퓨터를-USB선으로-연결하여-사용할-경우-3" class="headerlink" title="UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우"></a>UNO보드와 컴퓨터를 USB선으로 연결하여 사용할 경우</h5><p><img src="/image/4wd-08.png"></p><br><h5 id="UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우-3"><a href="#UNO보드와-컴퓨터의-연결없이-Vin핀을-사용하여-단독으로-사용할-경우-3" class="headerlink" title="UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우"></a>UNO보드와 컴퓨터의 연결없이 Vin핀을 사용하여 단독으로 사용할 경우</h5><p><img src="/image/4wd-09.png"></p><br><h4 id="sketch-3"><a href="#sketch-3" class="headerlink" title="sketch"></a>sketch</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Initialize IR remote</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boarddefs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremote.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremoteInt.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ir_Lego_PF_BitStreamEncoder.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> RECV_PIN = <span class="number">13</span>;       <span class="comment">// IR Signal pin</span></span><br><span class="line"><span class="function">IRrecv <span class="title">irrecv</span><span class="params">(RECV_PIN)</span></span>;</span><br><span class="line">decode_results results;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_F 0xFF18E7  <span class="comment">// Forward Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_B 0xFF4AB5  <span class="comment">// Backward Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_L 0xFF10EF  <span class="comment">// Left Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_R 0xFF5AA5  <span class="comment">// Right Button</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN_O 0xFF38C7  <span class="comment">// OK Button</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize TB6612FNG Motor drive</span></span><br><span class="line"><span class="keyword">int</span> STBY = <span class="number">10</span>;  <span class="comment">// STBY pin on TB6612FNG. Must be HIGH to enable motor</span></span><br><span class="line"><span class="keyword">int</span> A_PWM = <span class="number">5</span>;  <span class="comment">// Right motor speed control using analogWrite() function. Value between 0 - 255</span></span><br><span class="line"><span class="keyword">int</span> A_IN1 = <span class="number">9</span>;  <span class="comment">// Right motor - LOW should go forward</span></span><br><span class="line"><span class="keyword">int</span> A_IN2 = <span class="number">8</span>;  <span class="comment">// Right motor - HIGH should go forward</span></span><br><span class="line"><span class="keyword">int</span> B_PWM = <span class="number">6</span>;  <span class="comment">// Left motor speed control using analogWrite() function. Value between 0 - 255</span></span><br><span class="line"><span class="keyword">int</span> B_IN1 = <span class="number">11</span>; <span class="comment">// Left motor - LOW should go forward</span></span><br><span class="line"><span class="keyword">int</span> B_IN2 = <span class="number">12</span>; <span class="comment">// Left motor - HIGH should go forward</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> R_MaxSpeed = <span class="number">255</span>;   <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> L_MaxSpeed = <span class="number">255</span>;   <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> R_TurnSpeed = <span class="number">128</span>;  <span class="comment">//set motor speed to max speed</span></span><br><span class="line"><span class="keyword">int</span> L_TurnSpeed = <span class="number">128</span>;  <span class="comment">//set motor speed to max speed</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> LR_Direct = <span class="number">0</span>;      <span class="comment">//for Direction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize Ultrasonic Sensor</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRIG 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ECHO 4</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(A_PWM, OUTPUT);                        <span class="comment">// Motor</span></span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(A_IN2, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_PWM, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_IN1, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(B_IN2, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span>(STBY, OUTPUT);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">pinMode</span>(TRIG, OUTPUT);                         <span class="comment">// Ultrasonic Sensor</span></span><br><span class="line">  <span class="built_in">pinMode</span>(ECHO, INPUT);</span><br><span class="line"></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  irrecv.<span class="built_in">enableIRIn</span>();                           <span class="comment">// Start the receiver</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(TRIG, LOW);                       <span class="comment">// Start Ultrasonic sensor</span></span><br><span class="line">  <span class="built_in">delayMicroseconds</span>(<span class="number">2</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(TRIG, HIGH);</span><br><span class="line">  <span class="built_in">delayMicroseconds</span>(<span class="number">10</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(TRIG, LOW);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">long</span> distance = <span class="built_in">pulseIn</span>(ECHO, HIGH) / <span class="number">58.2</span>;    <span class="comment">// 거리 측정</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (irrecv.<span class="built_in">decode</span>(&amp;results)) &#123;                 <span class="comment">// Read IR remote control</span></span><br><span class="line">    <span class="comment">//Serial.println(results.value, HEX);        // for debug</span></span><br><span class="line">    irrecv.<span class="built_in">resume</span>(); <span class="comment">// Receive the next value</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (distance &lt; <span class="number">10</span>) &#123;                            <span class="comment">// 거리가 10cm 이내이면 정지</span></span><br><span class="line">    <span class="built_in">stop</span>();</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;                                          <span class="comment">// 거리가 10cm 이상이면,</span></span><br><span class="line">  <span class="built_in"><span class="keyword">switch</span></span>(results.value) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> BTN_F:</span><br><span class="line">      <span class="built_in">go_forward</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_B:  </span><br><span class="line">      <span class="built_in">go_backward</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_L:  </span><br><span class="line">      <span class="keyword">if</span>(LR_Direct==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">go_f_left</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LR_Direct==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">go_b_left</span>();</span><br><span class="line">      &#125;     </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_R:</span><br><span class="line">      <span class="keyword">if</span>(LR_Direct==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">go_f_right</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LR_Direct==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">go_b_right</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">case</span> BTN_O:</span><br><span class="line">      <span class="built_in">stop</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Move specific motor at speed and direction</span></span><br><span class="line"><span class="comment">// motor: A(Right) -&gt; 0, B(Left) -&gt; 1</span></span><br><span class="line"><span class="comment">// speed: 0 is off, and 255 is full speed</span></span><br><span class="line"><span class="comment">// direction: 0 clockwise, 1 counter-clockwise</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> motorLR, <span class="keyword">int</span> speed, boolean inPin1, boolean inPin2)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, HIGH);        <span class="comment">// Disable Standby</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (motorLR == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">analogWrite</span>(A_PWM, speed);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(A_IN2, inPin2);   </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (motorLR == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">analogWrite</span>(B_PWM, speed);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(B_IN1, inPin1);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(B_IN2, inPin2);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_forward</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  LR_Direct = <span class="number">0</span>;              <span class="comment">// Forward</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_backward</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line"></span><br><span class="line">  LR_Direct = <span class="number">1</span>;              <span class="comment">// Backward</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_f_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F_L&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_TurnSpeed, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_b_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F_R&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_TurnSpeed, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_f_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;F_R&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_TurnSpeed, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// Right motor, Right Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// Left motor, Left Speed, forward(0,1)</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go_b_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;B_R&quot;</span>);</span><br><span class="line">  <span class="built_in">move</span>(<span class="number">0</span>, R_TurnSpeed, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// Right motor, Right Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">move</span>(<span class="number">1</span>, L_MaxSpeed, <span class="number">1</span>, <span class="number">0</span>);  <span class="comment">// Left motor, Left Speed, backward(1,0)</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;STOP&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(STBY, LOW);    <span class="comment">// Enable Standby</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/arduino/">arduino</category>
      
      
      <category domain="http://stemwith.github.io/tags/rc/">rc</category>
      
      
      <comments>http://stemwith.github.io/2019/10/29/DC%EB%AA%A8%ED%84%B0-4WD-%EC%9E%90%EB%8F%99%EC%B0%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Arduino, 라인트레이서, L298N</title>
      <link>http://stemwith.github.io/2019/10/28/Arduino-%EB%9D%BC%EC%9D%B8%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%84%9C-L298N/</link>
      <guid>http://stemwith.github.io/2019/10/28/Arduino-%EB%9D%BC%EC%9D%B8%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%84%9C-L298N/</guid>
      <pubDate>Mon, 28 Oct 2019 13:48:56 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;라인트레이서-만들기&quot;&gt;&lt;a href=&quot;#라인트레이서-만들기&quot; class=&quot;headerlink&quot; title=&quot;라인트레이서 만들기&quot;&gt;&lt;/a&gt;라인트레이서 만들기&lt;/h1&gt;&lt;p&gt;검은색 라인을 따라 움직이는 라인트레이서 자동차를 만들어보겠습니다.&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="라인트레이서-만들기"><a href="#라인트레이서-만들기" class="headerlink" title="라인트레이서 만들기"></a>라인트레이서 만들기</h1><p>검은색 라인을 따라 움직이는 라인트레이서 자동차를 만들어보겠습니다.</p><br><h2 id="TCRT5000-IR-reflective-sensor"><a href="#TCRT5000-IR-reflective-sensor" class="headerlink" title="TCRT5000 IR reflective sensor"></a>TCRT5000 IR reflective sensor</h2><p>라인트레이서 제작시 가장 널리 사용되는 IR 센서입니다. 감지하는 부분이 검은색으로 되어 있는 부분이라면 IR이 모두 흡수되고, 흰색으로 되어 있는 부분에서는 모두 반사되는 원리를 이용합니다.</p><p><img src="/image/LT-03.png"></p><ul><li>  장애물이 없는 경우: 1 반환</li><li>  센서와 12mm이내의 거리에 밝은색이 위치하는 경우: 0 반환</li><li>  센서와 12mm이내의 거리에 검은색이 위치하는 경우: 1 반환</li><li>  검은색의 경우도 아주 가까이 가져가면 적외선 수신량이 증가하여 0의 값을 반환할 수 있으므로, 라인트레이서 구성시 감지하는 적당한 거리를 찾는 것이 중요합니다.</li><li>  10~12mm 정도의 거리에서 측정하는 것을 추천</li><li>  AO 단자를 이용할 경우 아날로그 신호로 처리도 가능</li></ul><blockquote><p>(위 스펙과는 별도로) 라인트레이서 제작시에는 경험상 센서가 바닥면으로부터 2cm정도 떨어지도록 설치하는 것을 추천합니다. </p></blockquote><br><h3 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h3><p><img src="/image/tcrt5000.png"></p><br><h3 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pin_sensor = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(pin_sensor, INPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">i = <span class="built_in">digitalRead</span>(pin_sensor)</span><br><span class="line">    Serial.<span class="built_in">println</span>(i);                 <span class="comment">// 검은색(1), 밝은색(0) 출력</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="모터드라이버-L298N"><a href="#모터드라이버-L298N" class="headerlink" title="모터드라이버 L298N"></a>모터드라이버 L298N</h2><p>자동차 구동에 있어 가장 중요한 것이 모터일 것입니다. 그런데, 대부분의 모터는 구동을 위한 전력값이 커서 아두이노의 자체 출력으로는 구동이 불가능합니다. 그러므로 건전지, SMPS 등의 외부 전원을 사용하여 모터에 충분한 전력을 공급하고, 이를 제어하기위한 모터드라이버를 반드시 사용해야 합니다.</p><p>많은 종류의 모터드라이버가 있으나, 아두이노에서 사용하는 대표적인 모터드라이브는 L298N, TB6612FNG 등이 있으며, 여기서는 2CH의 2A출력이 가능한 L298N을 사용하여 간단한 라인트레이서를 제작해보겠습니다.</p><p>![](/image/LT-01.png =638x550)</p><br><h3 id="Pinout"><a href="#Pinout" class="headerlink" title="Pinout"></a>Pinout</h3><ul><li><p>모터A 출력 : 왼쪽 모터를 연결한다.</p></li><li><p>모터B 출력 : 오른쪽 모터를 연결한다.</p></li><li><p>12V (입력) : 외부전원을 입력한다. (5~35V)</p><ul><li>12V 이상의 외부전원을 입력하는 경우, 레귤레이터 보호를 위해 5V 점퍼선을 제거해야 함</li></ul></li><li><p>5V (입력/출력)</p><ul><li>  점퍼핀이 연결되어 있는 경우 5V 출력 (단, 5V출력으로 사용하려면 외부전원을 12V이하로 주어야 하며, 그 이상의 전압을 인가하는 경우 레귤레이터가 손상됨)</li><li>점퍼핀 없는 경우 5V 입력을 통해 L298N에 전원 인가</li></ul></li><li><p>Enable 모터A : 왼쪽 모터 PWM (점퍼를 제거하고, INPUT핀 양옆의 핀에 PWM신호 입력)</p></li><li><p>Enable 모터B : 오른쪽 모터 PWM (점퍼를 제거하고, INPUT핀 양옆의 핀에 PWM신호 입력)</p></li><li><p>PWM을 사용하는 경우 모터에 인가하는 전원이 6V(AA*4개)인 경우 PWM값이 낮으면 모터가 회전하지 않으므로 코딩시 주의한다.</p></li><li><p>INPUT : IN1, IN2, IN3, IN4</p><table><thead><tr><th>Direction</th><th>IN1</th><th>IN2</th><th>IN3</th><th>IN4</th></tr></thead><tbody><tr><td>Go</td><td>HIGH</td><td>HIGH</td><td>LOW</td><td>LOW</td></tr><tr><td>Back</td><td>LOW</td><td>LOW</td><td>HIGH</td><td>HIGH</td></tr><tr><td>Brake</td><td>LOW</td><td>LOW</td><td>LOW</td><td>LOW</td></tr><tr><td>Left_Turn</td><td>HIGH</td><td>LOW</td><td>LOW</td><td>LOW</td></tr><tr><td>Right_Turn</td><td>LOW</td><td>HIGH</td><td>LOW</td><td>LOW</td></tr><tr><td>Left_Back_Turn</td><td>LOW</td><td>LOW</td><td>HIGH</td><td>LOW</td></tr><tr><td>Right_Back_Turm</td><td>LOW</td><td>LOW</td><td>LOW</td><td>HIGH</td></tr></tbody></table></li></ul><br><h3 id="Jumper"><a href="#Jumper" class="headerlink" title="Jumper"></a>Jumper</h3><ul><li>Enable 모터A<ul><li>  점퍼를 연결시키지 않으면 PWM사용</li><li>  점퍼 연결시 왼쪽 모터에 5V (즉, PWM을 사용하지 않는 경우에만 연결)</li></ul></li><li>Enable 모터B<ul><li>  점퍼를 연결시키지 않으면 PWM사용</li><li>  점퍼 연결시 오른쪽 모터 5V (즉, PWM을 사용하지 않는 경우에만 연결)</li></ul></li><li>  5V (※ Pinout의 5V 부분 참고)</li></ul><br><h2 id="전원"><a href="#전원" class="headerlink" title="전원"></a>전원</h2><ul><li>  대부분의 초보자를 위한 4WD 제작 키트는 AA건전지 4개를 직렬연결할 수 있는 전지소켓을 포함하여 판매하는 경우가 많지만</li><li>  But, 제작 경험으로 볼 때 AA건전지 4개로 얻을 수 있는 전력만으로는 원활한 구동이 불가능합니다.</li><li>  AA건전지 6개를 직렬로 연결하여 9V정도를 공급하는 것을 추천하며 (사용시간 10~15분정도 가능)</li><li>  18650 리튬이온전지 2개를 연결하여 7.4V를 공급하면 가장 좋습니다.</li></ul><br><h2 id="모터"><a href="#모터" class="headerlink" title="모터"></a>모터</h2><p>아두이노 기초 실습용으로 많이 쓰이는 이름없는 중국산 모터입니다.</p><p><img src="/image/LT-02.jpg"></p><table><thead><tr><th>기어비 48:1</th><th>RPM(무부하)</th><th>전류 mA (무부하)</th><th>토크(kg·cm)</th></tr></thead><tbody><tr><td>3V</td><td>120</td><td>40</td><td>3.2</td></tr><tr><td>6V</td><td>240</td><td>70</td><td>5.5</td></tr></tbody></table><br><br><h1 id="프레임-조립"><a href="#프레임-조립" class="headerlink" title="프레임 조립"></a>프레임 조립</h1><br><h2 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h2><p><img src="/image/LT-04.png"></p><br><h2 id="조립과정"><a href="#조립과정" class="headerlink" title="조립과정"></a>조립과정</h2><ol><li>모터 4개와 M-F형태의 8가닥 리드선을 준비하고 모터에 리드선을 납땜할 준비를 합니다.</li></ol><p><img src="/image/LT-05.jpg"></p><br><ol start="2"><li>DC모터를 보면 양쪽에 (+)(-)극을 연결하는 단자가 있습니다.</li></ol><p><img src="/image/LT-06.jpg"></p><br><ol start="3"><li>준비한 8가닥의 M-F리드선을 2가닥씩 묶어 4갈래로 전체 길이의 1/2의 길이만큼 나누어 준비한뒤,</li></ol><p><img src="/image/LT-07.jpg"></p><br><ol start="4"><li>2개의 가닥 중 한 부분을 모터의 (+)(-)단자에 끼우고,</li></ol><p><img src="/image/LT-08.jpg"></p><br><ol start="5"><li>각각을 납땜합니다. 총 4개의 모터를 납땜하여 아래 모습처럼 만듭니다.</li></ol><p><img src="/image/LT-09.jpg"></p><br><p>  ※ (주의) 납땜시, 아래 그림처럼 리드선이 모터의 본체에 닿으면 안됩니다.</p><p><img src="/image/LT-10.jpg"></p><br><p>​     처음 납땜할 때부터 닿지 않도록 하는 것이 좋지만, 납땜을 이미 진행한 후에 리드선이 본체에 닿아 있다면 아래의 그림처럼 끝 부분을 살짝 휘어두거나, 니퍼로 잘라내도록 합니다.</p><p><img src="/image/LT-11.jpg"></p><br><ol start="6"><li>외부 전원으로 사용할 건전지소켓을 준비합니다. (사진상에는 1.5V AA건전지 4개가 직렬로 연결되는 건전지소켓을 사용하였지만, 4개의 모터를 구동하기 위해서는 1.5V AA건전지를 6개 직렬로 연결하여 9V 전압을 사용하는 것을 추천합니다. 단, 9V사각전지(6F22) 1개로 사용하는 것은 전류가 약하므로 사용불가!)</li></ol><p><img src="/image/LT-12.jpg"></p><br><p>​    건전지소켓에 나와있는 리드선의 끝부분을 스트리퍼를 사용하여 피복을 조금더 벗겨냅니다. 또한 빨간색과 검은색 점퍼선 2개를 별로로 준비한뒤, 한쪽 단자를 잘라내고, 스트리퍼로 피복을 벗겨냅니다.</p><br><ol start="7"><li>건전지소켓의 리드선과 점퍼선을 붙여 떨어지지 않도록 단단히 납땜한 후,</li></ol><p><img src="/image/LT-13.jpg"></p><br><ol start="8"><li>합선되지 않도록 절연테이프나 열수축튜브로 각각을 잘 감싸둡니다.</li></ol><p><img src="/image/LT-14.jpg"></p><br><ol start="9"><li>이제 아크릴판을 준비합니다.</li></ol><p><img src="/image/LT-15.jpg"></p><br><ol start="10"><li>아래 그림의 Step1~2과정과 같이 모터를 고정할 아크릴 조각을 끼울 것입니다.</li></ol><p><img src="/image/LT-16.png"></p><br><p>​    우선, 모터를 고정할 아크릴 조각 2개를 고정할 위치를 확인합니다. 총 4개의 모터를 고정할 것이므로 아크릴 조각 8개가 필요합니다.</p><p><img src="/image/LT-17.jpg"></p><br><ol start="11"><li>모터고정 아크릴 조각을 아래 사진처럼 끼웁니다. 하나는 구멍에 집어 넣고, 나머지 하나는 측면의 홈에 살짝 걸쳐둡니다.</li></ol><p><img src="/image/LT-18.jpg"></p><br><ol start="12"><li>이제 모터를 설치하겠습니다.</li></ol><p><img src="/image/LT-19.png"></p><br><p><img src="/image/LT-20.png"></p><br><p>​    나사와 너트를 2개씩 준비한 후</p><p><img src="/image/LT-21.jpg"></p><br><p>​    아크릴 조각 2개 사이에 모터를 위치시킨 후, 모터 몸체이 있는 나사 구멍에 나사 2개를 통과시켜</p><p><img src="/image/LT-22.jpg"></p><br><p>​    아래 사진 같이 고정합니다.</p><p><img src="/image/LT-23.jpg"></p><br><p>13. 모터를 고정한 후, 바퀴축의 안쪽 부분에 바퀴의 균형을 잡아줄 동그란 아크릴 조각을 끼워줍니다.</p><p><img src="/image/LT-24.jpg"></p><br><p>​     4개의 모터를 같은 방법으로 고정시켜 아래와 같은 형태를 만듭니다. 주의할 것은 모터의 단자가 위치한 은색부분의 모터본체 부분이 서로 맞닿는 형태로 조립을 해야 합니다.</p><p><img src="/image/LT-25.jpg"></p><br><ol start="14"><li>바퀴를 끼웁니다.</li></ol><p><img src="/image/LT-26.png"></p><br><ol start="15"><li>금속기둥을 세우고 상판을 덮습니다. (아크릴상판이 없는 경우는 생략 가능)</li></ol><p><img src="/image/LT-27.png"></p><br><p><img src="/image/LT-28.png"></p><br><ol start="16"><li>기판 아래면에 모터가 위치하도록 위아래를 뒤집은 후에, 기판 윗면에 TCRT5000 IR Reflective Sensor, 아두이노, 브레드보드, L298N 모터드라이브, 9V 전지소켓을 차례대로 올리고 나사볼트와 절연테이프 등으로 고정합니다. 대략 아래 사진과 비슷하게 고정하면 됩니다.</li></ol><p><img src="/image/LT-29.jpg"></p><br><h2 id="아두이노와의-연결"><a href="#아두이노와의-연결" class="headerlink" title="아두이노와의 연결"></a>아두이노와의 연결</h2><br><h3 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h3><p><img src="/image/LT-30.png"></p><br><h3 id="회로연결"><a href="#회로연결" class="headerlink" title="회로연결"></a>회로연결</h3><br><h4 id="모터-↔-모터드라이버"><a href="#모터-↔-모터드라이버" class="headerlink" title="모터 ↔ 모터드라이버"></a>모터 ↔ 모터드라이버</h4><table><thead><tr><th></th><th>L/F 모터 U단자</th><th>L/F 모터 D단자</th><th>L/R 모터 U단자</th><th>L/R 모터 D단자</th><th>R/F 모터 U단자</th><th>R/F 모터 D단자</th><th>R/R 모터 U단자</th><th>R/R모터 D단자</th></tr></thead><tbody><tr><td>L298N OUT1</td><td></td><td>○</td><td></td><td>○</td><td></td><td></td><td></td><td></td></tr><tr><td>L298N OUT2</td><td>○</td><td></td><td>○</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>L298N OUT3</td><td></td><td></td><td></td><td></td><td></td><td>○</td><td></td><td>○</td></tr><tr><td>L298N OUT4</td><td></td><td></td><td></td><td></td><td>○</td><td></td><td>○</td><td></td></tr></tbody></table><br><h4 id="모터드라이버-↔-전지소켓-↔-아두이노"><a href="#모터드라이버-↔-전지소켓-↔-아두이노" class="headerlink" title="모터드라이버 ↔ 전지소켓 ↔ 아두이노"></a>모터드라이버 ↔ 전지소켓 ↔ 아두이노</h4><table><thead><tr><th></th><th>전지소켓 (+)</th><th>전지소켓(-)</th><th>아두이노</th></tr></thead><tbody><tr><td>L298N 12V</td><td>○</td><td></td><td>Vin</td></tr><tr><td>L298N GND</td><td></td><td>GND (아두이노)</td><td>GND</td></tr><tr><td>L298N 5V</td><td></td><td></td><td>5V</td></tr></tbody></table><br><h4 id="모터드라이브-ENABLE-amp-INPUT-↔-아두이노"><a href="#모터드라이브-ENABLE-amp-INPUT-↔-아두이노" class="headerlink" title="모터드라이브 ENABLE &amp; INPUT ↔ 아두이노"></a>모터드라이브 ENABLE &amp; INPUT ↔ 아두이노</h4><table><thead><tr><th></th><th>아두이노</th></tr></thead><tbody><tr><td>L298N EN(A)</td><td>5</td></tr><tr><td>L298N IN1</td><td>8</td></tr><tr><td>L298N IN2</td><td>9</td></tr><tr><td>L298N IN3</td><td>10</td></tr><tr><td>L298N IN4</td><td>11</td></tr><tr><td>L298N EN(B)</td><td>6</td></tr></tbody></table><br><h4 id="TCRT5000-Sensor-↔-아두이노"><a href="#TCRT5000-Sensor-↔-아두이노" class="headerlink" title="TCRT5000 Sensor ↔ 아두이노"></a>TCRT5000 Sensor ↔ 아두이노</h4><table><thead><tr><th></th><th>아두이노</th></tr></thead><tbody><tr><td>#1 TCRT5000 VCC</td><td>5V</td></tr><tr><td>#1 TCRT5000 GND</td><td>GND</td></tr><tr><td>#1 TCRT5000 DO</td><td>2</td></tr><tr><td>#1 TCRT5000 AO</td><td>–</td></tr><tr><td>#2 TCRT5000 VCC</td><td>5V</td></tr><tr><td>#2 TCRT5000 GND</td><td>GND</td></tr><tr><td>#2 TCRT5000 DO</td><td>3</td></tr><tr><td>#2 TCRT5000 AO</td><td>–</td></tr></tbody></table><br><h3 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* L298N - 2CH Motor Driver</span></span><br><span class="line"><span class="comment">Direction         IN1    IN2    IN3    IN4</span></span><br><span class="line"><span class="comment">-------------------------------------------</span></span><br><span class="line"><span class="comment">GO                HIGH   HIGH   LOW    LOW</span></span><br><span class="line"><span class="comment">BACK              LOW    LOW    HIGH   HIGH</span></span><br><span class="line"><span class="comment">BRAKE             LOW    LOW    LOW    LOW</span></span><br><span class="line"><span class="comment">LEFT_TURN         HIGH   LOW    LOW    LOW</span></span><br><span class="line"><span class="comment">RIGHT_TURN        LOW    HIGH   LOW    LOW</span></span><br><span class="line"><span class="comment">LEFT_BACK_TURN    LOW    LOW    HIGH   LOW</span></span><br><span class="line"><span class="comment">RIGHT_BACK_TURN   LOW    LOW    LOW    HIGH</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PWM: 6V시 최소값 200이상은 되야 바퀴회전 가능 (너무 낮은 전압에서 회전 안됨)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 모터_전진컨트롤</span></span><br><span class="line"><span class="keyword">int</span> Left_motor_IN1 = <span class="number">8</span>;       <span class="comment">// IN1</span></span><br><span class="line"><span class="keyword">int</span> Right_motor_IN2 = <span class="number">9</span>;      <span class="comment">// IN2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 모터_후진컨트롤</span></span><br><span class="line"><span class="keyword">int</span> Left_motor_IN3 = <span class="number">10</span>;      <span class="comment">// IN3</span></span><br><span class="line"><span class="keyword">int</span> Right_motor_IN4 = <span class="number">11</span>;     <span class="comment">// IN4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 모터_속도컨트롤</span></span><br><span class="line"><span class="keyword">int</span> Left_PWM = <span class="number">5</span>;               <span class="comment">// 왼쪽모터 속도</span></span><br><span class="line"><span class="keyword">int</span> Right_PWM = <span class="number">6</span>;              <span class="comment">// 오른쪽모터 속도</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// IR Sensor</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Left_Sensor = <span class="number">2</span>;    <span class="comment">// 왼쪽센서</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Right_Sensor = <span class="number">3</span>;   <span class="comment">// 오른쪽센서</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Left_Sensor_Value;        <span class="comment">// 검은색:1</span></span><br><span class="line"><span class="keyword">int</span> Right_Sensor_Value;       <span class="comment">// 흰색:0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  pinMode(Left_motor_IN1, OUTPUT);      <span class="comment">// PIN 8</span></span><br><span class="line">  pinMode(Right_motor_IN2, OUTPUT);     <span class="comment">// PIN 9</span></span><br><span class="line">  </span><br><span class="line">  pinMode(Left_motor_IN3, OUTPUT);      <span class="comment">// PIN 10</span></span><br><span class="line">  pinMode(Right_motor_IN4, OUTPUT);     <span class="comment">// PIN 11</span></span><br><span class="line"></span><br><span class="line">  pinMode(Left_PWM, OUTPUT);            <span class="comment">// PIN 5</span></span><br><span class="line">  pinMode(Right_PWM, OUTPUT);           <span class="comment">// PIN 6</span></span><br><span class="line">  </span><br><span class="line">  pinMode(Left_Sensor, INPUT);          <span class="comment">// 왼쪽센서</span></span><br><span class="line">  pinMode(Right_Sensor, INPUT);         <span class="comment">// 오른쪽센서</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 전진</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  digitalWrite(Left_motor_IN1, HIGH);   <span class="comment">// 왼쪽모터   전진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN2, HIGH);  <span class="comment">// 오론쪽모터 전진_정지</span></span><br><span class="line">  </span><br><span class="line">  digitalWrite(Left_motor_IN3, LOW);    <span class="comment">// 왼쪽모터   후진_회전</span></span><br><span class="line">  digitalWrite(Right_motor_IN4, LOW);   <span class="comment">// 오른쪽모터 후진_회전</span></span><br><span class="line">  </span><br><span class="line">  analogWrite(Left_PWM, <span class="number">255</span>);           <span class="comment">// PWM값(0~255), 모터 회전속도 조절</span></span><br><span class="line">  analogWrite(Right_PWM, <span class="number">255</span>);          <span class="comment">// PWM값(0~255), 모터 회전속도 조절</span></span><br><span class="line">  delay(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 후진</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">back</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  digitalWrite(Left_motor_IN1, LOW);    <span class="comment">// 왼쪽모터   전진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN2, LOW);   <span class="comment">// 오론쪽모터 전진_정지</span></span><br><span class="line">  </span><br><span class="line">  digitalWrite(Left_motor_IN3, HIGH);   <span class="comment">// 왼쪽모터   후진_회전</span></span><br><span class="line">  digitalWrite(Right_motor_IN4, HIGH);  <span class="comment">// 오른쪽모터 후진_회전</span></span><br><span class="line">  </span><br><span class="line">  analogWrite(Left_PWM, <span class="number">255</span>);           <span class="comment">// PWM값(0~255), 모터 회전속도 조절</span></span><br><span class="line">  analogWrite(Right_PWM, <span class="number">255</span>);          <span class="comment">// PWM값(0~255), 모터 회전속도 조절</span></span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 정지</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">brake</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  digitalWrite(Left_motor_IN1, LOW);    <span class="comment">// 왼쪽모터   전진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN2, LOW);   <span class="comment">// 오론쪽모터 전진_정지</span></span><br><span class="line">  </span><br><span class="line">  digitalWrite(Left_motor_IN3, LOW);    <span class="comment">// 왼쪽모터   후진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN4, LOW);   <span class="comment">// 오른쪽모터 후진_정지</span></span><br><span class="line">  delay(<span class="number">5</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 좌회전</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">turn_left</span><span class="params">()</span></span>&#123;</span><br><span class="line">  digitalWrite(Left_motor_IN1, LOW);    <span class="comment">// 왼쪽모터   전진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN2, HIGH);  <span class="comment">// 오론쪽모터 전진_회전</span></span><br><span class="line">  </span><br><span class="line">  digitalWrite(Left_motor_IN3, LOW);    <span class="comment">// 왼쪽모터   후진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN4, LOW);   <span class="comment">// 오른쪽모터 후진_정지</span></span><br><span class="line"></span><br><span class="line">  analogWrite(Right_PWM, <span class="number">255</span>);           <span class="comment">// PWM값(0~255), 모터 회전속도 조절</span></span><br><span class="line">  delay(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 우회전</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">turn_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  digitalWrite(Left_motor_IN1, HIGH);   <span class="comment">// 왼쪽모터   전진_회전</span></span><br><span class="line">  digitalWrite(Right_motor_IN2, LOW);   <span class="comment">// 오론쪽모터 전진_정지</span></span><br><span class="line">  </span><br><span class="line">  digitalWrite(Left_motor_IN3, LOW);    <span class="comment">// 왼쪽모터   후진_정지</span></span><br><span class="line">  digitalWrite(Right_motor_IN4, LOW);   <span class="comment">// 오른쪽모터 후진_정지</span></span><br><span class="line"></span><br><span class="line">  analogWrite(Left_PWM, <span class="number">255</span>);           <span class="comment">// PWM값(0~255), 모터 회전속도 조절</span></span><br><span class="line">  delay(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//신호가 있으면(흰색) LOW,  신호가 없으면(검은색) HIGH</span></span><br><span class="line">  Right_Sensor_Value = digitalRead(Right_Sensor);</span><br><span class="line">  Left_Sensor_Value = digitalRead(Left_Sensor);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 전진: 왼쪽센서 검은색, 오른쪽센서 검은색</span></span><br><span class="line">  <span class="keyword">if</span> (Left_Sensor_Value == HIGH &amp;&amp; Right_Sensor_Value == HIGH)</span><br><span class="line">    go();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 좌회전: 왼쪽센서 검은색, 오른쪽센서 흰색</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (Left_Sensor_Value == HIGH &amp; Right_Sensor_Value == LOW)</span><br><span class="line">    turn_left();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 우회전: 왼쪽센서 흰색, 오른쪽센서 검은색</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (Left_Sensor_Value == LOW &amp; Right_Sensor_Value == HIGH) </span><br><span class="line">    turn_right();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 정지: 왼쪽센서 흰색, 오른쪽센서 흰색</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    brake();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="센서-감도-조정"><a href="#센서-감도-조정" class="headerlink" title="센서 감도 조정"></a>센서 감도 조정</h3><ul><li>  센서 반응을 살피면서 TCRT5000 모듈에 붙어 있는 감도조절기를 십자드라이버로 돌려 라인트레이싱에 가장 최적인 감도를 찾아야 한다.</li></ul>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/arduino/">arduino</category>
      
      
      <category domain="http://stemwith.github.io/tags/rc/">rc</category>
      
      
      <comments>http://stemwith.github.io/2019/10/28/Arduino-%EB%9D%BC%EC%9D%B8%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%84%9C-L298N/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Arduino, Bluetooth 페어링</title>
      <link>http://stemwith.github.io/2019/10/26/Arduino-Bluetooth-%ED%8E%98%EC%96%B4%EB%A7%81/</link>
      <guid>http://stemwith.github.io/2019/10/26/Arduino-Bluetooth-%ED%8E%98%EC%96%B4%EB%A7%81/</guid>
      <pubDate>Sat, 26 Oct 2019 14:24:07 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;아두이노에서 블루투스를 이용하는 방법을 알아보겠습니다.&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&quot;Bluetooth-module-선택&quot;&gt;&lt;a href=&quot;#Bluetooth-module-선택&quot; class=&quot;headerlink&quot; title=&quot;Bluetooth </description>
        
      
      
      
      <content:encoded><![CDATA[<p>아두이노에서 블루투스를 이용하는 방법을 알아보겠습니다.</p><br><h2 id="Bluetooth-module-선택"><a href="#Bluetooth-module-선택" class="headerlink" title="Bluetooth module 선택"></a>Bluetooth module 선택</h2><ul><li><p><strong>아이폰</strong> : MLT-BT05(AT-09) BLE 모듈 사용 (이 모듈은 안드로이도에서도 사용 가능)</p><p>HC-06, HC-05는 아이폰에서 SPP(Serial Port Profile) 통신이 지원하지 않는 이유로 사용할 수 없습니다. 그러므로 아이폰으로 블루투스 통신을 하기 위해서는 MLT-BT-BT05, AT-09, CC2541, HM-10, HC-02, RN-42 같은 BLE(Bluetooth Low Energy) 모듈을 사용합니다. 연결방법이나 AT명령어 세트는 HC-06과 비슷해요. 주의 할 점은, 시리얼 모니터에서 <strong>Both NL &amp; CR</strong> 모드를 선택해주어야 하는 것입니다.</p></li></ul><p><img src="/image/BT-01.jpg"></p><ul><li>  <strong>안드로이드</strong> : HC-06(or HC-05) 블루투스 모듈 사용 (이 모듈은 아이폰에서 사용 불가)</li></ul><p><img src="/image/BT-02.jpg"></p><blockquote><p>※ 요즘은 잘 사용하지 않지만, HC-05를 사용하기도 합니다. 생김새가 거의 비슷하지만, 몇가지 차이점이 있는데요. 보통 HC-06과 구별하기 위하여, HC-05에는 칩 위에 V형태로 체크를 해두거나, 화이트로 하얀색 점을 찍어두는 경우가 많습니다. 그리고, 가장 큰 차이점은 HC-05의 경우 6개의 핀이 모두 존재해요.</p><p><img src="/image/BT-05.jpg"></p></blockquote><blockquote><p>※ 예전에는 HC-05는 Master, HC-06은 Slave로 나누어 쓰는 경우가 많았지만, HC-06의 버전이 1.7이상인 경우 Master, Slave를 선택하여 사용할 수 있게 되면서 HC-05는 잘 사용하지 않게 되었습니다.</p></blockquote><br><h2 id="MLT-BT05-HC-06을-사용하는-경우"><a href="#MLT-BT05-HC-06을-사용하는-경우" class="headerlink" title="MLT-BT05, HC-06을 사용하는 경우"></a>MLT-BT05, HC-06을 사용하는 경우</h2><br><h3 id="Pin-Map"><a href="#Pin-Map" class="headerlink" title="Pin Map"></a>Pin Map</h3><table><thead><tr><th></th><th></th><th align="center"></th><th>Arduino Uno</th></tr></thead><tbody><tr><td>1</td><td>STATE</td><td align="center">(실제 핀 없거나 미사용)</td><td></td></tr><tr><td>2</td><td>RXD</td><td align="center">Receive Data (수신)</td><td>3</td></tr><tr><td>3</td><td>TXD</td><td align="center">Transmit Data (송신)</td><td>2</td></tr><tr><td>4</td><td>GND</td><td align="center">GND</td><td>GND</td></tr><tr><td>5</td><td>VCC</td><td align="center">+5V</td><td>+5V</td></tr><tr><td>6</td><td>KEY</td><td align="center">(실제 핀 없거나 미사용)</td><td></td></tr></tbody></table><br><h3 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h3><p><img src="/image/BT-03.jpg"></p><br><h3 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">SoftwareSerial <span class="title">BTSerial</span><span class="params">(<span class="number">2</span>, <span class="number">3</span>)</span></span>; <span class="comment">//Connect MLT-BT05 or HC-06 TX,RX </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">   Serial.begin(<span class="number">9600</span>);</span><br><span class="line">   Serial.println(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set the data rate for the BT port</span></span><br><span class="line">   BTSerial.begin(<span class="number">9600</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (BTSerial.available())</span><br><span class="line">    Serial.write(BTSerial.read());</span><br><span class="line">  <span class="keyword">if</span> (Serial.available())</span><br><span class="line">    BTSerial.write(Serial.read());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="HC-05를-사용하는-경우"><a href="#HC-05를-사용하는-경우" class="headerlink" title="HC-05를 사용하는 경우"></a>HC-05를 사용하는 경우</h2><br><h3 id="Pin-Map-1"><a href="#Pin-Map-1" class="headerlink" title="Pin Map"></a>Pin Map</h3><table><thead><tr><th>HC-05 Pin</th><th></th><th align="center"></th><th>Arduino Uno</th></tr></thead><tbody><tr><td>1</td><td>STATE</td><td align="center"></td><td></td></tr><tr><td>2</td><td>RXD</td><td align="center">Receive Data</td><td>3</td></tr><tr><td>3</td><td>TXD</td><td align="center">Transmit Date</td><td>7</td></tr><tr><td>4</td><td>GND</td><td align="center">GND</td><td>GND</td></tr><tr><td>5</td><td>VCC</td><td align="center">+5V</td><td>+5V</td></tr><tr><td>6</td><td>KEY (ENABLE)</td><td align="center">AT command 진입을 위한 핀</td><td>8</td></tr></tbody></table><blockquote><p>※ TXD로 UNO의 7번핀을 사용했으나, HC-06처럼 2번핀을 사용해도 됩니다. 단, schematic과 sketch도 2번 핀에 맞추어 수정해주세요.</p></blockquote><br><h3 id="schematic-1"><a href="#schematic-1" class="headerlink" title="schematic"></a>schematic</h3><p><img src="/image/BT-04.jpg"></p><br><h3 id="sketch-1"><a href="#sketch-1" class="headerlink" title="sketch"></a>sketch</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY 8</span></span><br><span class="line"><span class="function">SoftwareSerial <span class="title">BTSerial</span><span class="params">(<span class="number">7</span>, <span class="number">3</span>)</span></span>; <span class="comment">//Connect HC-05 TX,RX </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">   pinMode(KEY, OUTPUT);       <span class="comment">//for HC-05</span></span><br><span class="line">   digitalWrite(KEY, HIGH);</span><br><span class="line">   Serial.begin(<span class="number">9600</span>);</span><br><span class="line">   Serial.println(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set the data rate for the BT port</span></span><br><span class="line">   BTSerial.begin(<span class="number">38400</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (BTSerial.available())</span><br><span class="line">     Serial.write(BTSerial.read());</span><br><span class="line">   <span class="keyword">if</span> (Serial.available())</span><br><span class="line">     BTSerial.write(Serial.read());</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><br><h2 id="블루투스-모듈을-처음-사용하는-경우"><a href="#블루투스-모듈을-처음-사용하는-경우" class="headerlink" title="블루투스 모듈을 처음 사용하는 경우"></a>블루투스 모듈을 처음 사용하는 경우</h2><p>모듈을 처음 사용한다면, AT 명령어 세트를 사용하여 세팅을 해주어야 합니다. 또한 이전에 사용한 경험이 있더라도 블루투스 모듈ID, 페어링 암호 등을 새롭게 세팅할 필요가 있는 경우에도 동일합니다.</p><br><h3 id="MLT-BT05-AT-09-의-AT-Command"><a href="#MLT-BT05-AT-09-의-AT-Command" class="headerlink" title="MLT-BT05(AT-09)의 AT Command"></a>MLT-BT05(AT-09)의 AT Command</h3><table><thead><tr><th>명령어</th><th align="center">Serial Monitor 출력 결과</th><th>의미</th></tr></thead><tbody><tr><td>AT</td><td align="center">OK</td><td>접속상태 확인</td></tr><tr><td>AT+NAMESKS100</td><td align="center">OKsetname</td><td>블루투스 모듈ID 지정 (default MLT-BT05)</td></tr><tr><td>AT+PIN</td><td align="center">PASSWORD 출력</td><td>패스워드 확인</td></tr><tr><td>AT+PIN1234</td><td align="center">OKsetPIN</td><td>페어링 암호 설정 (default: <strong>123456</strong>)</td></tr><tr><td>AT+BAUD4</td><td align="center">OK9600</td><td>통신속도 설정 (4 → 9600bps) (default: 0 → 115200bps)</td></tr><tr><td>AT+VERSION</td><td align="center">OKVERSION=4.0</td><td>MLT-BT05 버전 확인</td></tr><tr><td>AT+LADDR</td><td align="center">+LADDR=(MAC Address)</td><td>MAC Address 확인</td></tr><tr><td>AT+ROLE=0</td><td align="center">OK+ROLE:0</td><td>SLAVE mode (default)</td></tr><tr><td>AT+ROLE=1</td><td align="center">OK+ROLE:1</td><td>MASTER mode</td></tr><tr><td>AT+ROLE=2</td><td align="center">OK+ROLE:2</td><td>sensor mode</td></tr><tr><td>AT+ROLE=3</td><td align="center">OK+ROLE:3</td><td>iBeacon mode</td></tr><tr><td>AT+ROLE=4</td><td align="center">OK+ROLE:4</td><td>WeChat mode</td></tr><tr><td>AT+ROLE</td><td align="center">OK+ROLE:</td><td>Role 확인</td></tr></tbody></table><p>※ <a href="/attach/MLT-BT05.pdf">AT Command set 다운로드</a></p><br><h3 id="HC-06의-AT-Command"><a href="#HC-06의-AT-Command" class="headerlink" title="HC-06의 AT Command"></a>HC-06의 AT Command</h3><table><thead><tr><th>명령어</th><th align="center">Serial Monitor 출력 결과</th><th>의미</th></tr></thead><tbody><tr><td>AT</td><td align="center">OK</td><td>접속상태 확인</td></tr><tr><td>AT+NAMESKS100</td><td align="center">OKsetname</td><td>블루투스 모듈ID 지정 (SKS100)</td></tr><tr><td>AT+PIN</td><td align="center">PASSWORD출력</td><td>패스워드 확인</td></tr><tr><td>AT+PIN1234</td><td align="center">OKsetPIN</td><td>페어링 암호 설정 (default: <strong>1234</strong>)</td></tr><tr><td>AT+BAUD4</td><td align="center">OK9600</td><td>통신속도 설정 (4 → 9600bps) (default: 4 → 9600bps)</td></tr><tr><td>AT+VERSION</td><td align="center">OKlinvorV1.8</td><td>HC-06 버전 확인</td></tr><tr><td>AT+ROLE=S</td><td align="center">OK+ROLE:S</td><td>SLAVE 역할</td></tr><tr><td>AT+ROLE=M</td><td align="center">OK+ROLE:M</td><td>MASTER 역할 (v1.7 이상만 가능)</td></tr><tr><td>AT+ROLE</td><td align="center">OK+ROLE:</td><td>MASTER/SLAVE 확인</td></tr></tbody></table><br><h3 id="HC-05의-AT-Command"><a href="#HC-05의-AT-Command" class="headerlink" title="HC-05의 AT Command"></a>HC-05의 AT Command</h3><blockquote><p>※ HC-05는 AT Command를 사용하는 경우, KEY(Enable) 핀을 연결해주어야 합니다. (schematic 참고)</p></blockquote><table><thead><tr><th>명령어</th><th align="center">Serial Monitor 출력 결과</th><th>의미</th></tr></thead><tbody><tr><td>AT</td><td align="center">OK</td><td>접속상태 확인</td></tr><tr><td>AT+NAMESKS100</td><td align="center">OKsetname</td><td>블루투스 모듈ID 지정 (SKS100)</td></tr><tr><td>AT+PSWD=0000</td><td align="center">OKsetPIN</td><td>페어링 암호 설정 (0000)</td></tr><tr><td>AT+BAUD6</td><td align="center">OK9600</td><td>통신속도 설정 (6 → 38400bps)</td></tr><tr><td>AT+VERSION</td><td align="center">OKlinvorV1.8</td><td>HC-06 버전 확인</td></tr><tr><td>AT+ROLE=0</td><td align="center">OK+ROLE:0</td><td>SLAVE 역할</td></tr><tr><td>AT+ROLE=1</td><td align="center">OK+ROLE:1</td><td>MASTER 역할</td></tr><tr><td>AT+ROLE=?</td><td align="center">OK+ROLE:</td><td>MASTER/SLAVE 확인</td></tr></tbody></table><br><br><h1 id="스마트폰과의-페어링-과정"><a href="#스마트폰과의-페어링-과정" class="headerlink" title="스마트폰과의 페어링 과정"></a>스마트폰과의 페어링 과정</h1><br><h2 id="시리얼모니터에서"><a href="#시리얼모니터에서" class="headerlink" title="시리얼모니터에서"></a>시리얼모니터에서</h2><p>HC-06과의 페어링 과정을 보도록 하겠습니다. (다른 블루투스 모듈도 유사하게 진행하면 됩니다.)</p><br><ol><li>먼저 아두이노IDE의 시리얼 모니터를 엽니다.</li></ol><blockquote><p>※ 이때, 주의할 점이 있는데요. <strong>시리얼 모니터를 열기 전에 스마트폰과 HC-06의 블루투스 연결은 해제된 상태</strong>여야 합니다. 기존에 HC-06과 스마트폰을 연결한 적이 있다면, 자기도 모르게 블루투스 연결이 자동으로 되어 있을 수 있는데요. 이런 경우에는 시리얼 모니터가 열리지 않아요.</p></blockquote><ul><li>  <strong>MLT-BT05</strong>: 시리얼모니터의 하단에 “<strong>Both NL &amp; CR</strong>”, “9600 보드레이트” 선택</li><li>  <strong>HC-06</strong>: 시리얼창의 하단에 “<strong>line ending 없음</strong>”, “9600 보드레이트 선택</li><li>  <strong>HC-05</strong>: 시리얼창의 하단에 “<strong>Both NL &amp; CR</strong>”, “9600 보드레이트” 선택</li></ul><br><ol start="2"><li>위 스케치를 <strong>사용하는 모듈에 맞게 선택하여</strong> 아두이노에 업로드 한 상태에서 시리얼 모니터를 열면, Hello! 라는 글자가 뜹니다. (업로드한 스케치에 따라 Hello!는 안나올 수도 있음)<br><img src="/image/BT-06.jpg"></li></ol><br><ol start="3"><li>AT를 입력하고,<br><img src="/image/BT-07.jpg"></li></ol><br><ol start="4"><li>전송을 누르면 OK가 뜹니다. 이것은 아두이노IDE를 통해 블루투스 모듈과 연결이 정상적으로 되었음을 의미해요.<br><img src="/image/BT-08.jpg"></li></ol><br><ol start="5"><li>블루투스 모듈ID를 설정해보겠습니다. SKS100이라는 ID로 지정하기 위해 <strong>AT+NAMESKS100</strong>이라고 입력한 뒤, 전송을 누릅니다. (모듈ID는 본인이 사용할 이름으로 바꾸어 지정합니다.)<br><img src="/image/BT-09.jpg"></li></ol><br><ol start="6"><li>그러면 OKsetname이라고 출력이 되면서, 블루투스 모듈ID가 SKS100으로 셋팅이 됩니다.<br><img src="/image/BT-09-1.jpg"></li></ol><br><ol start="7"><li>이번에는 페어링 암호 설정입니다. AT+PIN0000을 입력하고 전송을 누르면<br><img src="/image/BT-10.jpg"></li></ol><br><ol start="8"><li>OKsetPIN이 출력되면서 페어링 암호가 0000으로 설정됩니다.<br><img src="/image/BT-11.jpg"></li></ol><br><ol start="9"><li>통신속도 설정입니다. HC-06은 주로 9600bps를 사용하며, 이를 위해 AT+BAUD4를 입력한 뒤 전송을 누릅니다. (HC-06의 경우 default 속도가 9600bps이므로 이 과정은 생략 가능하며, 다른 모듈을 사용하는 경우에는 각 모듈의 AT Command를 확인하여 통신속도를 변경해주어야 합니다.)<br><img src="/image/BT-12.jpg"></li></ol><br><ol start="10"><li>OK9600이 출력되요.<br><img src="/image/BT-13.jpg"></li></ol><br><p>여기까지 진행하면 대체적으로 HC-06을 사용할 준비가 된 것입니다.</p><br><h2 id="스마트폰에서"><a href="#스마트폰에서" class="headerlink" title="스마트폰에서"></a>스마트폰에서</h2><ol><li>이제 스마트폰에서 블루투스 모드를 켜세요. (아래 화면은 스마트폰 기종마다 조금은 다를 수 있습니다. 화면이 다르더라도 거의 비슷할 거에요.) 그리고 새로고침을 통해 블루투스 기기를 찾습니다.<br>![](/image/BT-14.png =432x768)</li></ol><br><ol start="2"><li>‘거의 이용하지 않는 기기’ 하나를 찾았네요. 그곳을 누르면 조금전에 설정한 블루투스 모듈ID인 SKS100이 보입니다. 여기를 누르세요.<br>![](/image/BT-15.png =432x768)</li></ol><br><ol start="3"><li>블루투스 모듈과 페어링을 하기 위한 암호 입력화면이 나오고, 여기에 AT명령어를 통해 입력한 암호를 넣어줍니다.<br>![](/image/BT-14-1.png =432x768)</li></ol><br><ol start="4"><li>그러면 스마트폰이 SKS100 모듈에 페어링을 시도합니다.<br>![](/image/BT-16.png =432x768)</li></ol><br><ol start="5"><li>거의 이용하지 않는 블루투스 기기 부분을 누르면<br>![](/image/BT-17.png =432x768)</li></ol><br><ol start="6"><li>페어링된 기기 목록에 SKS100이 뜹니다. 여기까지 진행하면, 스마트폰과 블루투스 모듈이 페어링 완료된 거에요.<br>![](/image/BT-18.png =432x768)</li></ol>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/arduino/">arduino</category>
      
      
      
      <comments>http://stemwith.github.io/2019/10/26/Arduino-Bluetooth-%ED%8E%98%EC%96%B4%EB%A7%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>esp32 BLE, Blynk Gauge</title>
      <link>http://stemwith.github.io/2019/10/23/ESP32-BLE-Blynk-Gauge/</link>
      <guid>http://stemwith.github.io/2019/10/23/ESP32-BLE-Blynk-Gauge/</guid>
      <pubDate>Wed, 23 Oct 2019 12:33:48 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;ESP32에서-Blynk로-센서값-보내기&quot;&gt;&lt;a href=&quot;#ESP32에서-Blynk로-센서값-보내기&quot; class=&quot;headerlink&quot; title=&quot;ESP32에서 Blynk로 센서값 보내기&quot;&gt;&lt;/a&gt;ESP32에서 Blynk로 센서값 보</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="ESP32에서-Blynk로-센서값-보내기"><a href="#ESP32에서-Blynk로-센서값-보내기" class="headerlink" title="ESP32에서 Blynk로 센서값 보내기"></a>ESP32에서 Blynk로 센서값 보내기</h1><p>Blynk App의 GAUGE 위젯을 사용하여 ESP32에 연결된 Potentiometer의 저항값을 읽어 Blynk App에 전압(V), 저항(㏀) 값을 표시해본다. (ESP32 → Blynk App)</p><ul><li>  ESP32의 Potentiometer 값을 읽기 위해 BLYNK_READ(Vpin)을 사용한다.</li><li>  새로운 프로젝트를 만드는 경우, 새로운 auth token을 받아서 사용해야 한다.</li></ul><br><h2 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h2><p><img src="/image/blynk-adc-01.png"></p><br><h2 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLYNK_PRINT Serial</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLYNK_USE_DIRECT_CONNECT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BlynkSimpleEsp32_BLE.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BLEDevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BLEServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// You should get Auth Token in the Blynk App.</span></span><br><span class="line"><span class="comment">// Go to the Project Settings (nut icon).</span></span><br><span class="line"><span class="keyword">char</span> auth[] = <span class="string">&quot;WUAeS6P57T3XNaIGyLK1-OUv........&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Potentiometer Pin</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN_POTENTIOMETER A0                       <span class="comment">// Potentiometer GPIO 36</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Resist, Voltage</span></span><br><span class="line"><span class="keyword">int</span> value_Potentiometer; </span><br><span class="line"><span class="keyword">int</span> value_R;</span><br><span class="line"><span class="keyword">float</span> value_V;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Debug console</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Waiting for connections...&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for Blynk </span></span><br><span class="line">  Blynk.setDeviceName(<span class="string">&quot;Blynk-t&quot;</span>);</span><br><span class="line">  Blynk.begin(auth);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  value_Potentiometer = analogRead(PIN_POTENTIOMETER);  <span class="comment">// 12bit ADC (0~4095)</span></span><br><span class="line">  value_V = <span class="built_in">map</span>(value_Potentiometer, <span class="number">0</span>, <span class="number">4095</span>, <span class="number">3300</span>, <span class="number">0</span>); <span class="comment">// 0~3300mV</span></span><br><span class="line">  value_R = <span class="built_in">map</span>(value_V, <span class="number">0</span>, <span class="number">3300</span>, <span class="number">10000</span>, <span class="number">0</span>);            <span class="comment">// 0~10kΩ</span></span><br><span class="line">  </span><br><span class="line">  Blynk.run();</span><br><span class="line">  </span><br><span class="line">  Serial.print(<span class="string">&quot;Resist : &quot;</span>); Serial.print(value_R); Serial.println(<span class="string">&quot;Ω&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Voltage: &quot;</span>); Serial.print(value_V); Serial.println(<span class="string">&quot;mV&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BLYNK_READ(V1)           <span class="comment">// ESP32 -&gt; widget virtual pin1</span></span><br><span class="line">&#123;</span><br><span class="line">  Blynk.virtualWrite(V1, value_R);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BLYNK_READ(V2)           <span class="comment">// ESP32 -&gt; widget virtual pin1</span></span><br><span class="line">&#123;</span><br><span class="line">  Blynk.virtualWrite(V2, value_V);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>  Blynk에서 2개의 Gauge를 사용하기 위해 BLYNK)READ(Vpin)을 2번 사용한다.</li><li>  Blynk.virtualWrite(Vpin, value)를 통해 Blynk App의 Gauge 위젯에서 지정한 virtual pin에 value값을 표시한다.</li></ul><br><h2 id="Blynk-설정"><a href="#Blynk-설정" class="headerlink" title="Blynk 설정"></a>Blynk 설정</h2><ol><li>새로운 프로젝트를 생성한다.<ul><li>NAME : ESP32_Potentiometer</li><li>CHOOSE DEVICE : ESP32 Dev Board</li><li>CONNECTION TYPE : BLE</li></ul></li></ol><p>![](/image/blynk-adc-02.png =432x768)</p><br><ol start="2"><li>이메일로 발송된 토큰을 복사한다.</li></ol><p>![](/image/blynk-adc-03.png =432x768)</p><br><ol start="3"><li>+버튼을 눌러 위젯을 추가할 수 있는 화면으로 진입한다.</li></ol><p>![](/image/blynk-adc-04.png =432x768)</p><br><ol start="4"><li>먼저 BLE 위젯을 선택하여 ESP32와 Blynk간의 통신 방법을 지정한다.</li></ol><p>![](/image/blynk-adc-05.png =432x768)</p><br><ol start="5"><li>블루투스 모양의 위젯 버튼을 눌러 Blynk와의 통신을 준비한다.</li></ol><p>![](/image/blynk-adc-06.png =432x768)</p><br><ol start="6"><li>Connect BLE device</li></ol><p>![](/image/blynk-adc-07.png =432x768)</p><br><ol start="7"><li>연결하고자 하는 BLE 장비를 선택하면,</li></ol><p>![](/image/blynk-adc-08.png =432x768)</p><br><ol start="8"><li>연결 확인!</li></ol><p>![](/image/blynk-adc-09.png =432x768)</p><br><ol start="9"><li>+버튼을 눌러 출력 위젯 2개를 추가한다. (Gauge, Labeled value)</li></ol><p>![](/image/blynk-adc-10.png =432x768)</p><br><ol start="10"><li>먼저 Gauge 위젯을 선택한다.</li></ol><p>![](/image/blynk-adc-11.png =432x768)</p><br><ol start="11"><li>Gauge 위젯이 추가되면 육각형 모양의 아이콘을 눌러 GAUGE Setting 화면으로 진입한다.</li></ol><p>![](/image/blynk-adc-12.png =432x768)</p><br><p>![](/image/blynk-adc-13.png =432x768)</p><br><ol start="12"><li>설정화면에서 다음 4가지를 설정한다.<ul><li>NAME : 저항</li><li>INPUT : V1, 0~1000</li><li>LABEL : (단위를 표시하기 위해) x10 Ohm 을 적는다.</li><li>READING RATE : 1sec (PUSH 위젯은 실행되지 않음)</li></ul></li></ol><p>![](/image/blynk-adc-14.png =432x768)</p><br><ol start="13"><li>Labeled Value 위젯을 추가하고, 다음과 같이 설정한다.<ul><li>NAME : 저항</li><li>INPUT : V2, 0~3300</li><li>LABEL : (단위를 표시하기 위해) mV 를 적는다.</li><li>READING RATE : 1sec (PUSH 위젯은 실행되지 않음)</li></ul></li></ol><p>![](/image/blynk-adc-15.png =432x768)</p><br><ol start="14"><li>상단의 뒤로가기 화살표를 눌러 프로젝트 바탕화면으로 돌아간다.</li></ol><p>![](/image/blynk-adc-16.png =432x768)</p><br><ol start="15"><li>여기서 플레이버튼을 누르면,</li></ol><p>![](/image/blynk-adc-17.png =432x768)</p><br><p>저항과 전압의 측정이 시작된다. (시리얼 모니터에서도 관찰 가능)</p><p>![](/image/blynk-adc-18.png =432x768)</p><br><p>![](/image/blynk-adc-19.png =432x768)</p><br><ol start="16"><li>가변 저항을 돌릴 때마다 저항과 전압이 바뀐다.</li></ol><p>![](/image/blynk-adc-20.png =432x768)</p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">esp32</category>
      
      
      <category domain="http://stemwith.github.io/tags/iot/">iot</category>
      
      
      <comments>http://stemwith.github.io/2019/10/23/ESP32-BLE-Blynk-Gauge/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>esp32 BLE, Blynk Slider (PWM)</title>
      <link>http://stemwith.github.io/2019/10/22/ESP32-BLE-Blynk-Slider-PWM/</link>
      <guid>http://stemwith.github.io/2019/10/22/ESP32-BLE-Blynk-Slider-PWM/</guid>
      <pubDate>Tue, 22 Oct 2019 14:55:21 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;ESP32와-Blynk에서의-PWM-사용&quot;&gt;&lt;a href=&quot;#ESP32와-Blynk에서의-PWM-사용&quot; class=&quot;headerlink&quot; title=&quot;ESP32와 Blynk에서의 PWM 사용&quot;&gt;&lt;/a&gt;ESP32와 Blynk에서의 PWM </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="ESP32와-Blynk에서의-PWM-사용"><a href="#ESP32와-Blynk에서의-PWM-사용" class="headerlink" title="ESP32와 Blynk에서의 PWM 사용"></a>ESP32와 Blynk에서의 PWM 사용</h1><p>Blynk app에서 Slider 위젯을 사용하여 App → ESP32로 PWM 신호를 보내 LED의 밝기를 조절해본다.</p><ul><li>  Blynk에서 Slider는 Virtual pin을 사용해야한다. (Digital핀을 선택하는 것이 불가능)</li><li>  Virtual pin을 사용하기 위해 BLYNK_WRITE(Vpin)을 사용한다.</li><li>  ESP32에서 PWM을 사용하기 위한 절차에 따라 코딩을 진행한다.</li></ul><br><h2 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h2><p><img src="/image/blynk-pwm-01.png"></p><p>※ LED모듈을 사용하는 경우 저항이 필요없다.</p><br><h2 id="sketch"><a href="#sketch" class="headerlink" title="sketch"></a>sketch</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLYNK_PRINT Serial</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLYNK_USE_DIRECT_CONNECT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BlynkSimpleEsp32_BLE.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BLEDevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BLEServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// You should get Auth Token in the Blynk App.</span></span><br><span class="line"><span class="comment">// Go to the Project Settings (nut icon).</span></span><br><span class="line"><span class="keyword">char</span> auth[] = <span class="string">&quot;rc77E7UrbQHhoLE-LV1Ajxz20k8eLBrk&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// setting PWM properties</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_FREQ        5000 <span class="comment">// Hz</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_CHANNEL_0   0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_RESOLUTION  12   <span class="comment">// 10bit (0~1023) 12bit(0~4095) 16bit(0~65535)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// led Pin</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> pin_ledR = <span class="number">19</span>;</span><br><span class="line">    </span><br><span class="line">BLYNK_WRITE(V5)           <span class="comment">// widget virtual pin5 -&gt; ESP32</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> value_V5 = param.asInt();</span><br><span class="line">  ledcWrite(LEDC_CHANNEL_0, value_V5);</span><br><span class="line">  Serial.print(<span class="string">&quot;V5 value: &quot;</span>); Serial.println(value_V5);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Debug console</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Waiting for connections...&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// configure LED PWM functionalitites</span></span><br><span class="line">  ledcSetup(LEDC_CHANNEL_0, LEDC_FREQ, LEDC_RESOLUTION);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// attach the same channel to the GPIO to be controlled</span></span><br><span class="line">  ledcAttachPin(pin_ledR, LEDC_CHANNEL_0);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for Blynk </span></span><br><span class="line">  Blynk.setDeviceName(<span class="string">&quot;Blynk-t&quot;</span>);</span><br><span class="line">  Blynk.begin(auth);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Blynk.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="sketch-분석"><a href="#sketch-분석" class="headerlink" title="sketch 분석"></a>sketch 분석</h2><p>Button 위젯 사용을 위해 사용하였던 예제 sketch에 다음의 라인을 추가하여야 한다.</p><br><ol><li>LED가 연결되어 있는 ESP32 핀</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> pin_ledR = <span class="number">19</span>;</span><br></pre></td></tr></table></figure><br><ol start="2"><li>Blynk App에서 ESP32로 신호를 보내는 Virtual 핀</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BLYNK_WRITE(V5) &#123;                          <span class="comment">// widget virtual pin(V5) -&gt; ESP32</span></span><br><span class="line">  <span class="keyword">int</span> value_V5 = param.asInt();            <span class="comment">// V5로 지정된 위젯의 값을 읽고</span></span><br><span class="line">  ledcWrite(LEDC_CHANNEL_0, value_V5);     <span class="comment">// PWM 채널0으로 보냄</span></span><br><span class="line">  Serial.print(<span class="string">&quot;V5 value: &quot;</span>); Serial.println(value_V5);     <span class="comment">// 시리얼모니터에 출력</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ol start="3"><li>LED에 PWM 신호 출력 (밝기 조절)</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// configure LED PWM functionalitites</span></span><br><span class="line">ledcSetup(LEDC_CHANNEL_0, LEDC_FREQ, LEDC_RESOLUTION);</span><br><span class="line"></span><br><span class="line"><span class="comment">// attach the same channel to the GPIO to be controlled</span></span><br><span class="line">ledcAttachPin(pin_ledR, LEDC_CHANNEL_0);</span><br></pre></td></tr></table></figure><br><h2 id="Blynk-App-설정"><a href="#Blynk-App-설정" class="headerlink" title="Blynk App 설정"></a>Blynk App 설정</h2><ol><li>Button 위젯을 삭제한다. (그냥 두어도 관계없음)</li></ol><p>![](/image/blynk-pwm-02.png =432x768)</p><br><p>![](/image/blynk-pwm-03.png =432x768)</p><br><p>![](/image/blynk-pwm-04.png =432x768)</p><br><ol start="2"><li>프로젝트 바탕화면에서 ⊕버튼을 누른 후, Slider 위젯을 추가한다.</li></ol><p>![](/image/blynk-pwm-05.png =432x768)</p><br><ol start="3"><li>프로젝트 바탕화면의 Slider 위젯을 누른다.</li></ol><p>![](/image/blynk-pwm-06.png =432x768)</p><br><ol start="4"><li>Slider 설정화면이 나오면,</li></ol><p>![](/image/blynk-pwm-07.png =432x768)</p><br><p>PIN을 누르고 사용할 Virual 핀을 선택한 뒤 OK버튼을 누른다. (여기서는 V5선택)</p><p>![](/image/blynk-pwm-08.png =432x768)</p><br><p>![](/image/blynk-pwm-09.png =432x768)</p><br><ol start="5"><li>다음 3가지를 추가로 설정한다.<ul><li>OUTPUT 범위 : 0 ~ 4095 (12bit 사용시)</li><li>SEND ON RELEASE : OFF (OFF 선택시 Slide를 조절하는 즉시 실시간으로 출력값 반영되며, ON 선택시 Slide에서 손가락을 떼면 출력값이 반영된다.)</li><li>WRITE INTERVAL : SEND ON RELEASE를 OFF로 선택시 나타나며, 100ms가 가장 작은 값이다.</li></ul></li></ol><br><p>![](/image/blynk-pwm-10.png =432x768)</p><br><p>설정을 모두 마치면 상단의 뒤로가기 화살표를 눌러 프로젝트 바탕화면으로 돌아간다.</p><br><ol start="6"><li>Slider 위젯을 1초이상 누르고 있으면 위젯의 위치와 크기를 조절할 수 있다. 위젯의 위치를 아래로 내리고 가로폭의 크기를 늘려본다.</li></ol><p>![](/image/blynk-pwm-11.png =432x768)</p><br><p>![](/image/blynk-pwm-12.png =432x768)</p><br><ol start="7"><li>이제 플레이(▷) 버튼을 누르고 Slide를 조절해본다.</li></ol><p>![](/image/blynk-pwm-13.png =432x768)</p><br><p>Slide값에 따라 LED의 밝기가 조절된다.</p><p>![](/image/blynk-pwm-14.png =432x768)</p><br><p>![](/image/blynk-pwm-15.png =432x768)</p><br><ol start="8"><li>Slider를 조절하는 동안 Arduino IDE의 시리얼 모니터값을 확인해볼 수 있다.</li></ol><p><img src="/image/blynk-pwm-16.png"></p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">esp32</category>
      
      
      <category domain="http://stemwith.github.io/tags/iot/">iot</category>
      
      
      <comments>http://stemwith.github.io/2019/10/22/ESP32-BLE-Blynk-Slider-PWM/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>esp32 BLE, Blynk Button</title>
      <link>http://stemwith.github.io/2019/10/21/ESP32-BLE-Blynk-Button/</link>
      <guid>http://stemwith.github.io/2019/10/21/ESP32-BLE-Blynk-Button/</guid>
      <pubDate>Mon, 21 Oct 2019 14:12:58 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Blynk를-처음-사용하는-경우&quot;&gt;&lt;a href=&quot;#Blynk를-처음-사용하는-경우&quot; class=&quot;headerlink&quot; title=&quot;Blynk를 처음 사용하는 경우&quot;&gt;&lt;/a&gt;Blynk를 처음 사용하는 경우&lt;/h1&gt;&lt;br&gt;


&lt;h2 id</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Blynk를-처음-사용하는-경우"><a href="#Blynk를-처음-사용하는-경우" class="headerlink" title="Blynk를 처음 사용하는 경우"></a>Blynk를 처음 사용하는 경우</h1><br><h2 id="Blynk-라이브러리-설치하기"><a href="#Blynk-라이브러리-설치하기" class="headerlink" title="Blynk 라이브러리 설치하기"></a>Blynk 라이브러리 설치하기</h2><ol><li> docs.blynk.cc 접속 – Downloads – Blynk Library</li><li><a href="https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1">https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1</a><ul><li>  Blynk_Release_v0.6.1.zip 다운로드</li></ul></li><li> 압축을 풀면 libraries, tools 폴더가 보임</li><li>이 두 폴더를 아두이노IDE의 기본 스케치북 위치로 복사하여 붙여넣기 함<ul><li>  기존의 libraries 폴더와 합쳐짐</li><li>기본 스케치북 위치 확인 방법<ul><li>  아두이노IDE – 파일 – 환경설정 – 설정탭 – 스케치북 위치</li></ul></li></ul></li></ol><br><h2 id="스마트폰에-Blynk-App-설치하기"><a href="#스마트폰에-Blynk-App-설치하기" class="headerlink" title="스마트폰에 Blynk App 설치하기"></a>스마트폰에 Blynk App 설치하기</h2><ul><li>  아이폰 : 애플 앱스토어</li><li>  안드로이드 : 구글 플레이스토어</li></ul><br><br><h1 id="버튼-위젯을-이용한-LED-On-Off-하기"><a href="#버튼-위젯을-이용한-LED-On-Off-하기" class="headerlink" title="버튼 위젯을 이용한 LED On/Off 하기"></a>버튼 위젯을 이용한 LED On/Off 하기</h1><br><h2 id="schematic"><a href="#schematic" class="headerlink" title="schematic"></a>schematic</h2><p><img src="/image/blynk-01.png"></p><p>※ RGB LED 모듈을 사용하는 경우에는 저항을 연결하지 않는다.</p><br><h2 id="Blynk-설정"><a href="#Blynk-설정" class="headerlink" title="Blynk 설정"></a>Blynk 설정</h2><ol><li>Blynk App 실행</li></ol><p>![](/image/blynk-02.png =432x768)</p><br><ol start="2"><li>Create New Account : 주로 사용하는 e-mail을 사용하여 계정 생성 (계정이 이미 생성되어 있는 경우에는 Log In)</li></ol><p>![](/image/blynk-03.png =432x768)</p><br><p>![](/image/blynk-04.png =432x768)</p><br><ol start="3"><li>New Project 생성 : ESP32_LED</li></ol><p>![](/image/blynk-05.png =432x768)</p><br><ul><li>  프로젝트명 : ESP32_LED</li><li>  CHOOSE DEVICE : ESP32 Dev Board</li><li>  CONNECTION TYPE : BLE</li></ul><br><p>![](/image/blynk-06.png =432x768)</p><br><ol start="4"><li>Create를 누르면 Blynk 가입시 계정으로 사용한 이메일로 Auth Token 발송된다.</li></ol><p>![](/image/blynk-07.png =432x768)</p><br><ol start="5"><li>OK버튼을 누르면 프로젝트가 생성된다.</li></ol><p>![](/image/blynk-08.png =432x768)</p><br><ol start="6"><li>컴퓨터를 사용하여 이메일 계정에 로그인 한 후, Auth Token을 복사한다. (복잡한 형태의 토큰을 코딩시 사용할 것이므로, 스마트폰인 아닌 컴퓨터에서 확인하여 복사하는 것이 좋다.)</li></ol><p><img src="/image/blynk-09.png"></p><br><ol start="7"><li>Blynk 위젯 설정 : 생성된 프로젝트(ESP32_LED) 바탕화면으로 진입하면 Blynk App 상단의 초록색 메뉴바의 이름이 “ESP32_LED”로 바뀐다.</li></ol><p>![](/image/blynk-10.png =432x768)</p><br><p>만약, 아래와 같이 초록색 메뉴바의 이름이 “Blynk”로 되어있다면, 프로젝트 바탕화면으로 진입하지 못한 것이다. 이때에는 검은색 바탕화면의 “ESP32_LED”프로젝트명을 확인한 후 터치하면 해당프로젝트로 진입할 수 있다. 기존에 다른 프로젝트를 만들어 둔 적이 있다면 검은색 바탕화면의 프로젝트명이 “ESP32_LED”가 아닐 수도 있다. 이런 경우에는 스마트폰 화면을 좌우로 스크롤하여 프로젝트명을 변경한 후 진입한다.</p><p>![](/image/blynk-11.png =432x768)</p><br><ol start="8"><li>프로젝트 바탕화면에서 ⊕버튼을 누른 후, Button 위젯과 BLE 위젯을 눌러 추가한다.</li></ol><p>![](/image/blynk-12.png =432x768)</p><br><p>![](/image/blynk-13.png =432x768)</p><br><p>![](/image/blynk-14.png =432x768)</p><br><ol start="9"><li>프로젝트 바탕화면에 두개의 위젯이 표시된다.</li></ol><p>![](/image/blynk-15.png =432x768)</p><br><ol start="10"><li>BUTTON 위젯을 누르면 Buttom Settings 화면이 나타난다. 여기서 PIN부분을 누른다.</li></ol><p>![](/image/blynk-16.png =432x768)</p><br><ol start="11"><li>LED를 연결한 PIN을 선택한다. 여기서는 Digital GP19를 선택하였다.</li></ol><p>![](/image/blynk-17.png =432x768)</p><br><ol start="12"><li>OK버튼을 누르면 OUTPUT 버튼이 GP19로 설정된다. Mode는 SWITCH로 설정한다.</li></ol><p>![](/image/blynk-18.png =432x768)</p><br><ol start="13"><li>Blynk App 상단의 뒤로가기 버튼을 누른뒤 프로젝트 바탕화면으로 간다.</li></ol><p>![](/image/blynk-19.png =432x768)</p><br><h2 id="Blynk-연결하기"><a href="#Blynk-연결하기" class="headerlink" title="Blynk 연결하기"></a>Blynk 연결하기</h2><ol><li>Arduino IDE에서 예제를 로드한다. <strong>파일</strong>&gt; <strong>예제</strong>&gt; <strong>Blynk</strong>&gt; <strong>Boards_Bluetooth</strong>&gt; <strong>ESP32_BLE</strong></li></ol><p><img src="/image/blynk-20.png"></p><br><ol start="2"><li>예제의 char auth[] = “YourAuthToken”; 부분을 찾아서 쌍따옴표 사이의 YourAuthToken을 지운 뒤, 이메일에서 복사한 AuthToken 붙여넣은 뒤, 다른 이름으로 저장한다.</li></ol><p><img src="/image/blynk-21.png"></p><br><p><img src="/image/blynk-22.png"></p><br><ol start="3"><li>예제의 <strong>Blynk.setDeviceName(“Blynk”);</strong> 부분을 찾아 따옴표 안의 BLE Device 이름을 적당한 이름으로 바꿔준다. (※이름을 바꿔주지 않으면 주변의 다른 기기와 중복되어 오작동할 소지가 있으므로 반드시 다른 이름으로 바꿔주어야 한다.)</li></ol><p><img src="/image/blynk-23.png"></p><br><p>Device Name을 “Blynk-t”로 수정하였다.</p><p><img src="/image/blynk-24.png"></p><br><ol start="4"><li>ESP32에 스케치를 업로드한다. (업로드 시간이 Arduino에 비해 오래 걸림)</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLYNK_PRINT Serial</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLYNK_USE_DIRECT_CONNECT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BlynkSimpleEsp32_BLE.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BLEDevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;BLEServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// You should get Auth Token in the Blynk App.</span></span><br><span class="line"><span class="comment">// Go to the Project Settings (nut icon).</span></span><br><span class="line"><span class="keyword">char</span> auth[] = <span class="string">&quot;rc77E7UrbQHhoLE-LV1Ajxz.........&quot;</span>;    <span class="comment">// Edit Your Auth Token!!</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Debug console</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Waiting for connections...&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Blynk.setDeviceName(<span class="string">&quot;Blynk-t&quot;</span>);                     <span class="comment">// Edit Your ESP32 Name!!!</span></span><br><span class="line">  Blynk.begin(auth);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Blynk.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><img src="/image/blynk-25.png"></p><br><ol start="5"><li>이제 스마트폰의 Bluetooth기능을 키고, 위의 코드에서 수정한 Device Name을 찾아 연결한다.</li></ol><p>![](/image/blynk-26.png =432x768)</p><br><p>![](/image/blynk-27.png =432x768)</p><br><ol start="6"><li>Blynk App에서 BLE버튼(블루투스 아이콘 모양)을 누른다.</li></ol><p>![](/image/blynk-28.png =432x768)</p><br><ol start="7"><li>Connect BLE device 버튼을 누른다.</li></ol><p>![](/image/blynk-29.png =432x768)</p><br><ol start="8"><li>연결할 Device(여기서는 Blynk-t)를 선택하고 OK를 누른다.</li></ol><p>![](/image/blynk-30.png =432x768)</p><br><ol start="9"><li>Connected 메세지가 나오면 연결 설정이 완료된 것이다.</li></ol><p>![](/image/blynk-31.png =432x768)</p><br><ol start="10"><li>Blynk App 상단의 뒤로 돌아가기 버튼을 눌러 프로젝트 바탕화면으로 돌아간다.</li></ol><p>![](/image/blynk-32.png =432x768)</p><br><ol start="11"><li>App 오른쪽 상단의 ▷(플레이버튼)버튼을 누른다.</li></ol><p>![](/image/blynk-33.png =432x768)</p><br><p>플레이버튼을 눌렀을 때, App상단에 빨간색 숫자1이 보이면 아직 연결이 되지 않았다는 것을 의미한다. 잠시 기다리면 빨간색 숫자1이 사라지고, 이 상태가 작동 준비가 완료된다.</p><p>![](/image/blynk-34.png =432x768)</p><br><ol start="12"><li>현재 Button은 OFF 되어 있으며, 이에 따라 GPIO 19에 연결되어 있는 LED도 OFF되어 있다.</li></ol><p>![](/image/blynk-35.png =432x768)</p><br><ol start="13"><li>Button을 누르면 ON 상태로 바뀌면서, LED가 ON 상태로 점등된다.</li></ol><p>![](/image/blynk-36.png =432x768)</p><br><ol start="14"><li>다시 Button을 누르면 OFF 상태로 바뀌면서, LED가 OFF 상태로 소등된다.</li></ol><p>![](/image/blynk-37.png =432x768)</p><br><ol start="15"><li>정지버튼을 누르면 플레이상태가 정지상태로 바뀌면서 프로젝트 바탕화면으로 돌아간다.</li></ol><p>![](/image/blynk-38.png =432x768)</p><br><p>![](/image/blynk-39.png =432x768)</p>]]></content:encoded>
      
      
      <category domain="http://stemwith.github.io/categories/esp32/">esp32</category>
      
      
      <category domain="http://stemwith.github.io/tags/iot/">iot</category>
      
      
      <comments>http://stemwith.github.io/2019/10/21/ESP32-BLE-Blynk-Button/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
