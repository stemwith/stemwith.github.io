<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Esp32 on stemwith</title>
    <link>http://localhost:1313/categories/esp32/</link>
    <description>Recent content in Esp32 on stemwith</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 02 Dec 2021 18:27:53 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/esp32/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ESP32, RC카</title>
      <link>http://localhost:1313/posts/esp32-rc%EC%B9%B4/</link>
      <pubDate>Thu, 02 Dec 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-rc%EC%B9%B4/</guid>
      <description>&lt;h3 id=&#34;샤시-조립&#34;&gt;샤시 조립&lt;a class=&#34;anchor&#34; href=&#34;#%ec%83%a4%ec%8b%9c-%ec%a1%b0%eb%a6%bd&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;샤시-부품&#34;&gt;샤시 부품&lt;a class=&#34;anchor&#34; href=&#34;#%ec%83%a4%ec%8b%9c-%eb%b6%80%ed%92%88&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;번호&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;부품&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;사진&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;수량&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;용도 및 참고사항&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;전륜 회전축&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-14.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;베어링(대)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-18.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;스티어링 컵&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-08.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;커플러 고정핀&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-16.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;베어링(중)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-19.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(전륜) 육각 커플러&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-15.png&#34; width=&#34;80%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;휠&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-01.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;나이록 너트(M4)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-22.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;십자형 육각 복스&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-17.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼 조인트 커넥팅 로드&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-09.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;홀 간격 80.5mm 유지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼 조인트 커넥팅 로드&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-35.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;홀 간격 51mm 유지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;12&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;서보모터&lt;br&gt;MG996R&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-54.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;13&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;ㄴ자 서보모터 브라켓&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-11.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;휠 베이스 고정판&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-12.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;15&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;서보 혼&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-25.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(볼트 포함)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;16&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;나이록 너트&lt;br&gt;(M2.5)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-23.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;17&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤시 하판&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-03.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;18&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;DC엔코더 모터 &amp;amp; 커넥터&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-04.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;19&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;모터 브라켓&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-07.png&#34; width=&#34;67%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;20&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤프트&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-10.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;21&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;써클립&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-24.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;22&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤프트 베어링&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-21.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;기어&lt;br&gt;(무두볼트(Set Screw) 포함)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-05.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;24&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;육각 샤프트 커플링 커넥터&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-06.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;25&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;범퍼&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-02.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;26&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤시 상판&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-34.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;27&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;락스위치&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-20.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;28&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;황동 육각 스터드&lt;br&gt;(M3×22mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-26.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;휠 베이스 고정용 4개, 상판 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;29&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;황동 육각 스터드&lt;br/&gt;(M3×16mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-27.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;범퍼 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;30&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br/&gt;(Pan head, M4×6mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-32.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;모터 브라켓과 샤시 하판 고정용 6개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br&gt;(Bind-Washer head, M3×6mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-28.png&#34; alt=&#34;&#34; /&gt;  &lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-28.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;서보모터와 서보모터 브라켓 고정용 4개, 서보모터 브라켓과 샤시하판 고정용 4개, 범퍼 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;32&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br&gt;(Bind head, M3×8mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;`&#34; /&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;&#34; /&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;&#34; /&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;육각 스터드 고정용 12개, 범퍼 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br/&gt;(Pan head, M2.5×10mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-29.png&#34; alt=&#34;&#34; /&gt;  &lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-29.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;커넥팅 로드 연결용 3개, 휠 베이스 연결용 4개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;34&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br&gt;(Flat head, M2.5×5mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-31.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;모터와 모터브라켓 고정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;35&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;육각렌치&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-33.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;기어 무두볼트용&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;저항&lt;br&gt;1K or 5.1K&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-13.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(선택사항) 인코더 풀업저항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;홀센서 칩&lt;br&gt;SH41F(SOT-23타입)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(선택사항) 홀 센서를 이중채널로 사용할 필요가 있는 경우에, 각 모터마다 1개씩 추가함&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;총&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36종&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;전륜-조향-휠-조립&#34;&gt;전륜 조향 휠 조립&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a0%84%eb%a5%9c-%ec%a1%b0%ed%96%a5-%ed%9c%a0-%ec%a1%b0%eb%a6%bd&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;사진 오른쪽부터 차례대로 8개의 부품을 끼워 휠을 조립한다. (왼쪽휠/오른쪽휠 각각 1개씩, 총 2개 조립)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, DC모터, TB6612FNG</title>
      <link>http://localhost:1313/posts/esp32-dc%EB%AA%A8%ED%84%B0/</link>
      <pubDate>Mon, 01 Nov 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-dc%EB%AA%A8%ED%84%B0/</guid>
      <description>&lt;h3 id=&#34;dc모터-사용하기&#34;&gt;DC모터 사용하기&lt;a class=&#34;anchor&#34; href=&#34;#dc%eb%aa%a8%ed%84%b0-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;아두이노의 경우와 마찬가지로 ESP32에서도 TB6612FNG 모터드라이버와 함께, 모터 및 아두이노 단독사용을 위하여 3.7V 18650 2개를 직렬로 연결한 외부전원을 사용한다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;tb6612fng&#34;&gt;TB6612FNG&lt;a class=&#34;anchor&#34; href=&#34;#tb6612fng&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;h5 id=&#34;기본-핀-배열&#34;&gt;기본 핀 배열&lt;a class=&#34;anchor&#34; href=&#34;#%ea%b8%b0%eb%b3%b8-%ed%95%80-%eb%b0%b0%ec%97%b4&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;VM&lt;br/&gt;VCC&lt;br/&gt;GND(*)&lt;br/&gt;AOUT1&lt;br/&gt;AOUT2&lt;br/&gt;BOUT2&lt;br/&gt;BOUT1&lt;br/&gt;GND&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-01.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;PWMA&lt;br/&gt;AIN2&lt;br/&gt;AIN1&lt;br/&gt;STBY&lt;br/&gt;BIN1&lt;br/&gt;BIN2&lt;br/&gt;PWMB&lt;br/&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-02.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;핀-배열이-다른-경우&#34;&gt;핀 배열이 다른 경우&lt;a class=&#34;anchor&#34; href=&#34;#%ed%95%80-%eb%b0%b0%ec%97%b4%ec%9d%b4-%eb%8b%a4%eb%a5%b8-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;GND&lt;br/&gt;VCC&lt;br/&gt;AOUT1&lt;br/&gt;AOUT2&lt;br/&gt;BOUT2&lt;br/&gt;BOUT1&lt;br/&gt;VM&lt;br/&gt;GND&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-03.png&#34; width=&#34;75%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;PWMA&lt;br/&gt;AIN2&lt;br/&gt;AIN1&lt;br/&gt;NC (=STBY)&lt;br/&gt;BIN1&lt;br/&gt;BIN2&lt;br/&gt;PWMB&lt;br/&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-04.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;VM (모터 전압) = 15V max&lt;/li&gt;&#xA;&lt;li&gt;VCC (로직 전압) = 2.7 ~ 5.5V&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;GND&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TB6612FNG 모듈을 여러개 테스트한 결과, 기본 핀 배열을 가진 모듈의 &lt;strong&gt;3번핀 GND&lt;/strong&gt;에 연결할 경우 &lt;strong&gt;작동이 안되는&lt;/strong&gt; 몇몇 제품이 있었음&lt;/li&gt;&#xA;&lt;li&gt;그러므로 &lt;strong&gt;8번핀, 9번핀의 GND 사용을 권장&lt;/strong&gt;함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;출력전류: 정전류 1.2A (3.2A peak)까지 (모터 2개 사용시 합산 전류임)&lt;/li&gt;&#xA;&lt;li&gt;모터 제어모드: CW, CCW, short-brake, STOP, stand-by&lt;/li&gt;&#xA;&lt;li&gt;두개의 모터 출력을 개별 제어하며, &lt;strong&gt;100kHz&lt;/strong&gt;의 PWM으로 속도 제어&lt;/li&gt;&#xA;&lt;li&gt;써멀 셧다운 및 저전압 감지회로 내장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;pin의-사용&#34;&gt;Pin의 사용&lt;a class=&#34;anchor&#34; href=&#34;#pin%ec%9d%98-%ec%82%ac%ec%9a%a9&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;p&gt;ESP32와 TB6612FNG모듈을 브레드보드를 통해 연결하기 쉽도록 핀을 구성한 Pinmap이므로, 필요에 따라 수정하여 사용할 수 있다. (아래표는 참고만 할 것!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, nRF24L01 무선통신</title>
      <link>http://localhost:1313/posts/esp32-nrf24l01/</link>
      <pubDate>Sun, 10 Oct 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-nrf24l01/</guid>
      <description>&lt;h3 id=&#34;nrf24l01&#34;&gt;nRF24L01&lt;a class=&#34;anchor&#34; href=&#34;#nrf24l01&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;library&#34;&gt;library&lt;a class=&#34;anchor&#34; href=&#34;#library&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;스케치&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 포함하기&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 관리&lt;/strong&gt;&amp;gt; &lt;strong&gt;nRF24L01&lt;/strong&gt; 검색한 후, &lt;strong&gt;RF24 by TMRh20, Avamander&lt;/strong&gt; 설치&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/n/ESP32-nRF24L01-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic-nrf24l01-receiver-with-esp32&#34;&gt;schematic: nRF24L01 receiver with ESP32&lt;a class=&#34;anchor&#34; href=&#34;#schematic-nrf24l01-receiver-with-esp32&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/n/ESP32-nRF24L01-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;※ nRF24L01 모듈에 따라 10uF 캐페시터가 없으면 통신이 안되는 경우가 있음. 이런 경우에만 사용할 것.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;pinmap-안테나를-위로-향하게-두고-모듈을-위에서-내려다-볼때의-핀배열&#34;&gt;pinmap: (안테나를 위로 향하게 두고, 모듈을 위에서 내려다 볼때의 핀배열)&lt;a class=&#34;anchor&#34; href=&#34;#pinmap-%ec%95%88%ed%85%8c%eb%82%98%eb%a5%bc-%ec%9c%84%eb%a1%9c-%ed%96%a5%ed%95%98%ea%b2%8c-%eb%91%90%ea%b3%a0-%eb%aa%a8%eb%93%88%ec%9d%84-%ec%9c%84%ec%97%90%ec%84%9c-%eb%82%b4%eb%a0%a4%eb%8b%a4-%eb%b3%bc%eb%95%8c%ec%9d%98-%ed%95%80%eb%b0%b0%ec%97%b4&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ESP32&lt;/th&gt;&#xA;          &lt;th&gt;3V3&lt;/th&gt;&#xA;          &lt;th&gt;IO5&lt;/th&gt;&#xA;          &lt;th&gt;IO23&lt;/th&gt;&#xA;          &lt;th&gt;None&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;nRF24L01&lt;/td&gt;&#xA;          &lt;td&gt;VCC + 10uF&lt;/td&gt;&#xA;          &lt;td&gt;CSN&lt;/td&gt;&#xA;          &lt;td&gt;MOSI&lt;/td&gt;&#xA;          &lt;td&gt;IRQ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;(위에서 보이는 핀배열)&lt;/td&gt;&#xA;          &lt;td&gt;GND + 10uF&lt;/td&gt;&#xA;          &lt;td&gt;CE&lt;/td&gt;&#xA;          &lt;td&gt;SCK&lt;/td&gt;&#xA;          &lt;td&gt;MISO&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ESP32&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;GND&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;IO4&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;IO18&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;IO19&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch-11-chat-room&#34;&gt;sketch: 1:1 Chat Room&lt;a class=&#34;anchor&#34; href=&#34;#sketch-11-chat-room&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;양방향 송수신을 위하여 위 회로도를 보고 2개의 모듈을 만든 뒤, 다음 스케치를 업로드한다.&lt;/li&gt;&#xA;&lt;li&gt;시리얼 모니터를 띄운 뒤, 메세지를 전송해본다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Libraries for NRF24L01+ module.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;SPI.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;nRF24L01.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;RF24.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//RF24 object with two pins defined with arguments. CE: 4, CSN: 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;RF24 &lt;span style=&#34;color:#a6e22e&#34;&gt;radio&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Address of the pipe. 40 bit long, you can choose this freely.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Remember to use different address in different projects.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; address &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x1234ABCDEFLL&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; stext[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; spos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; rtext[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; rpos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sendText&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; text, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; tlen)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.stopListening();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.openWritingPipe(address);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.write(stext, tlen);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SEND: &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.println(text);    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  memset(stext, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.openReadingPipe(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, address);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.startListening();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;//Start the radio&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.begin(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.begin();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;//Open reading pipe with given address and start listening for incoming data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  radio.openReadingPipe(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, address);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.setPALevel(RF24_PA_MIN); &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.startListening();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; Serial.available()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stext[spos] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Serial.read();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(stext[spos] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x0a&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      sendText(stext, spos);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      spos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      spos &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (radio.available()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (radio.available()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      radio.read(rtext, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Serial.print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RECV: &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Serial.println(rtext);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch-11-chat-room-1&#34;&gt;sketch: 1:1 Chat Room&lt;a class=&#34;anchor&#34; href=&#34;#sketch-11-chat-room-1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;다음은 처음 실행 후 시리얼모니터에 입력한 ID를 이용하여 Chat Room을 만드는 코드이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, OLED (한글 출력 하기)</title>
      <link>http://localhost:1313/posts/esp32-oled/</link>
      <pubDate>Sun, 26 Sep 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-oled/</guid>
      <description>&lt;h3 id=&#34;oled&#34;&gt;OLED&lt;a class=&#34;anchor&#34; href=&#34;#oled&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;종류&#34;&gt;종류&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a2%85%eb%a5%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;ESP32나 Arduino에서 사용할 수 있는  oled의 종류는 매우 많지만, 주로 128*64 픽셀을 가진 0.96인치, 1.3인치의 SSD1306, SH1106 컨트롤러를 사용한 oled가 판매되고 있으며, 통신 프로토콜은 I2C나 SPI를 사용한다. oled 모듈 구입시 픽셀수, 컨트롤러 및 통신프로토콜을 잘 알아두어야 스케치 작성시 참고할 수 있음에 유의한다. I2C 방식은 GPIO를 2개만 사용하여 구성이 쉽다는 장점이 있고, SPI방식은 4~5개의 GPIO를 사용하지만 속도가 빠르다는 장점이 있다. 겉모습만으로는 컨트롤러를 확인하기는 어렵다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;I2C&lt;/th&gt;&#xA;          &lt;th&gt;SPI&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-i2c-01.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-spi-01.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-i2c-02.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-spi-02.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;이밖에도 U8g2 라이브러리에서 사용가능한 다양한 oled의 종류를 아래 링크에서 확인할 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, 스텝모터</title>
      <link>http://localhost:1313/posts/esp32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</link>
      <pubDate>Sat, 25 Sep 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</guid>
      <description>&lt;h3 id=&#34;스텝-모터-28byj-48&#34;&gt;스텝 모터, 28BYJ-48&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%85%9d-%eb%aa%a8%ed%84%b0-28byj-48&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;specification&#34;&gt;Specification&lt;a class=&#34;anchor&#34; href=&#34;#specification&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-02.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;정격전압: 5VDC&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;기어비: 1/64&#xA;$$&#xA;\frac {32}{9} \times \frac {22}{11} \times \frac {26}{9} \times \frac {31}{10} = 63.68395 \fallingdotseq 64&#xA;$$&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-01.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;스트라이드 각도&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;스펙상 5.625º / 64&lt;/strong&gt; = 0.087890625&#xA;&lt;ul&gt;&#xA;&lt;li&gt;그러므로,  360º / 0.087890625 = 4096 스텝&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;실제로는 11.25º / 64&lt;/strong&gt; = 0.17578125&#xA;&lt;ul&gt;&#xA;&lt;li&gt;그러므로,  360º / 0.17578125 = &lt;strong&gt;2048 스텝으로 1회전&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Frequency: 100Hz&lt;/li&gt;&#xA;&lt;li&gt;토크: 34.3mN,m&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;모터드라이브-uln2003&#34;&gt;모터드라이브 ULN2003&lt;a class=&#34;anchor&#34; href=&#34;#%eb%aa%a8%ed%84%b0%eb%93%9c%eb%9d%bc%ec%9d%b4%eb%b8%8c-uln2003&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-03.png&#34; width=&#34;67%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;스텝-모터의-구동&#34;&gt;스텝 모터의 구동&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%85%9d-%eb%aa%a8%ed%84%b0%ec%9d%98-%ea%b5%ac%eb%8f%99&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pin-map&#34;&gt;Pin Map&lt;a class=&#34;anchor&#34; href=&#34;#pin-map&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;외부전원&lt;/th&gt;&#xA;          &lt;th&gt;모터드라이브&lt;/th&gt;&#xA;          &lt;th&gt;ESP32&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT1&lt;/td&gt;&#xA;          &lt;td&gt;19&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT2&lt;/td&gt;&#xA;          &lt;td&gt;18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT3&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT4&lt;/td&gt;&#xA;          &lt;td&gt;17&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;(+) 5V&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;(-)&lt;/td&gt;&#xA;          &lt;td&gt;VCC&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;※ 모터드라이브에 연결하는 전원(VCC)는 &lt;strong&gt;외부전원 5V를 사용&lt;/strong&gt;한다. (ESP32의 5V는, 전류가 부족하여 ESP32와 연결한 노트북에 영향을 줄 수 있으므로, 사용하지 않는 것이 좋다.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, 온도측정(DS18b20), PLX_DAQ</title>
      <link>http://localhost:1313/posts/esp32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-ds18b20/</link>
      <pubDate>Fri, 17 Sep 2021 00:41:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-ds18b20/</guid>
      <description>&lt;h3 id=&#34;ds18b20-온도센서&#34;&gt;DS18b20 온도센서&lt;a class=&#34;anchor&#34; href=&#34;#ds18b20-%ec%98%a8%eb%8f%84%ec%84%bc%ec%84%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;DS18b20 온도 센서를 이용하여 온도를 측정한다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;one-wire 버스 통신&lt;/li&gt;&#xA;&lt;li&gt;공급전압: 3.0V ~ 5.5V&lt;/li&gt;&#xA;&lt;li&gt;작동온도: -55ºC ~ +125ºC&lt;/li&gt;&#xA;&lt;li&gt;오차: +/-0.5 ºC (-10ºC ~ 85ºC 범위에서)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pinout&#34;&gt;Pinout&lt;a class=&#34;anchor&#34; href=&#34;#pinout&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/DS18b20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;DS18b20 센서는 두 가지 연결방법을 제공하는데, 하나는 VCC를 5V에 연결하는 Normal Mode이고 다른 하나는 VCC를 GND에 연결하는 Parasite Mode이다. 두가지 방법 모두 지원되지만 (경험상) Normal를 추천하며 (원인은 잘 모르겠지만) Parasite Mode에서는 온도센서가 작동이 되지 않는 경우도 가끔 있었다. 회로 구성을 위해 &lt;strong&gt;4.7㏀ 저항 1개&lt;/strong&gt;가 필요하며 Normal Mode 구성을 위해 다음 그림과 같이 연결한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 서보모터 PWM제어</title>
      <link>http://localhost:1313/posts/esp32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</link>
      <pubDate>Mon, 19 Oct 2020 23:41:02 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</guid>
      <description>&lt;h3 id=&#34;sg90-mg90s--mg966r-서보모터&#34;&gt;SG90, MG90S,  MG966R 서보모터&lt;a class=&#34;anchor&#34; href=&#34;#sg90-mg90s--mg966r-%ec%84%9c%eb%b3%b4%eb%aa%a8%ed%84%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;datasheet&#34;&gt;datasheet&lt;a class=&#34;anchor&#34; href=&#34;#datasheet&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/SG90_Datasheet.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;사용법&#34;&gt;사용법&lt;a class=&#34;anchor&#34; href=&#34;#%ec%82%ac%ec%9a%a9%eb%b2%95&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ESP32는 16개의 PWM채널이 있으므로, 최대 16개의 서보모터를 동시에 제어할 수 있다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;서보모터 데이터 시트의 스펙상으로는&amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;대부분의 서보모터(&lt;strong&gt;SG90, MG90S, MG966R&lt;/strong&gt; 등 포함)는 위의 그림처럼 20ms가 1주기가 되므로, PWM frequency를 50Hz로 설정한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;20ms가 1주기이고, HIGH 펄스가 2ms 지속될 때 180º 회전을 한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;그러므로, 전체 펄스 폭의 1/10만큼 HIGH 펄스가 주어지면 180º 회전을 한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Resolution이 16비트라면 65535의 1/10에 해당하는 &lt;del&gt;6554&lt;/del&gt;의 값이 duty값으로 주어지면 서보모터는 180º 회전을 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 OpenWeatherMap에서 실시간 날씨 정보 받기</title>
      <link>http://localhost:1313/posts/esp32-openweathermap/</link>
      <pubDate>Tue, 19 Nov 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-openweathermap/</guid>
      <description>&lt;h3 id=&#34;openweathermaporg&#34;&gt;OpenWeatherMap.org&lt;a class=&#34;anchor&#34; href=&#34;#openweathermaporg&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;a href=&#34;https://openweathermap.org/&#34;&gt;OpenWeatherMap&lt;/a&gt;은 세계 각 지역의 현재 날씨, 예보, 과거 날씨 데이터를 제공하는 사이트입니다. (몇가지 제약이 있긴 하지만) 회원가입을 통해서 API Key를 생성하고 이를 통해 무료로 실시간 날씨 정보를 얻을 수 있습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;free-current-weather-and-forecasts-collection&#34;&gt;Free Current weather and forecasts collection&lt;a class=&#34;anchor&#34; href=&#34;#free-current-weather-and-forecasts-collection&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;60 Calls per minute (no more than)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/current&#34;&gt;Current weather API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/forecast5&#34;&gt;5 days/3 hour forecast API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/api/weathermaps&#34;&gt;Weather maps 1.0&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/api/uvi&#34;&gt;UV index&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/triggers&#34;&gt;Weather alerts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Availability 95%&lt;/li&gt;&#xA;&lt;li&gt;Weather API data update  &amp;lt; 2 hours&lt;/li&gt;&#xA;&lt;li&gt;Weather maps data update  &amp;lt; 3 hours&lt;/li&gt;&#xA;&lt;li&gt;API lifetime support :  Current version&lt;/li&gt;&#xA;&lt;li&gt;Historical weather collection은 모두 Starter 이상(유료)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;current-weather-collections-api-key-생성&#34;&gt;Current weather collections API Key 생성&lt;a class=&#34;anchor&#34; href=&#34;#current-weather-collections-api-key-%ec%83%9d%ec%84%b1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sign Up을 클릭하여 회원가입을 하고,&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 AP mode &amp; Websocket</title>
      <link>http://localhost:1313/posts/esp32-ap-mode-and-websocket_draft/</link>
      <pubDate>Fri, 15 Nov 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ap-mode-and-websocket_draft/</guid>
      <description>&lt;h3 id=&#34;ap-mode&#34;&gt;AP mode&lt;a class=&#34;anchor&#34; href=&#34;#ap-mode&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;ESP32를 AP mode로 설정하여 라우터(공유기) 장치 없이 Client가 ESP32에 직접 접속하는 방법으로 데이터를 주고받는 통신을 구현해보도록 하겠습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;ESP32는 기본적으로 블루투스와 wifi를 방식의 무선 통신을 지원합니다. 각각의 방식이 갖는 장단점이 있으므로 상황에 맞추어 적절한 통신 방식을 선택하면 됩니다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ESP32 통신모드&lt;/th&gt;&#xA;          &lt;th&gt;블루투스&lt;/th&gt;&#xA;          &lt;th&gt;wifi Station Mode&lt;/th&gt;&#xA;          &lt;th&gt;wifi AP Mode&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;라우터&lt;/td&gt;&#xA;          &lt;td&gt;불필요&lt;/td&gt;&#xA;          &lt;td&gt;필요&lt;/td&gt;&#xA;          &lt;td&gt;불필요&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;통신거리&lt;/td&gt;&#xA;          &lt;td&gt;10m 이내 (장애물에 약함)&lt;/td&gt;&#xA;          &lt;td&gt;일반적인 wifi 도달 거리와 동일&lt;/td&gt;&#xA;          &lt;td&gt;좌동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;전력&lt;/td&gt;&#xA;          &lt;td&gt;저전력&lt;/td&gt;&#xA;          &lt;td&gt;블루투스 통신에 비해 사용량 큼&lt;/td&gt;&#xA;          &lt;td&gt;좌동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;학교에서 ESP32를 이용하는 경우,&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 BLE, Blynk Gauge</title>
      <link>http://localhost:1313/posts/esp32-ble-blynk-gauge/</link>
      <pubDate>Wed, 23 Oct 2019 21:33:48 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ble-blynk-gauge/</guid>
      <description>&lt;h3 id=&#34;esp32에서-blynk로-센서값-보내기&#34;&gt;ESP32에서 Blynk로 센서값 보내기&lt;a class=&#34;anchor&#34; href=&#34;#esp32%ec%97%90%ec%84%9c-blynk%eb%a1%9c-%ec%84%bc%ec%84%9c%ea%b0%92-%eb%b3%b4%eb%82%b4%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Blynk App의 GAUGE 위젯을 사용하여 ESP32에 연결된 Potentiometer의 저항값을 읽어 Blynk App에 전압(V), 저항(㏀) 값을 표시해본다. (ESP32 → Blynk App)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ESP32의 Potentiometer 값을 읽기 위해 BLYNK_READ(Vpin)을 사용한다.&lt;/li&gt;&#xA;&lt;li&gt;새로운 프로젝트를 만드는 경우, 새로운 auth token을 받아서 사용해야 한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_PRINT Serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_USE_DIRECT_CONNECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BlynkSimpleEsp32_BLE.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEDevice.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEServer.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// You should get Auth Token in the Blynk App.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Go to the Project Settings (nut icon).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; auth[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WUAeS6P57T3XNaIGyLK1-OUv........&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Potentiometer Pin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define PIN_POTENTIOMETER A0                       &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Potentiometer GPIO 36&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Resist, Voltage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value_Potentiometer; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value_R;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; value_V;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Debug console&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Waiting for connections...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// for Blynk &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;setDeviceName&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blynk-t&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(auth);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  value_Potentiometer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;analogRead&lt;/span&gt;(PIN_POTENTIOMETER);  &lt;span style=&#34;color:#75715e&#34;&gt;// 12bit ADC (0~4095)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  value_V &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(value_Potentiometer, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4095&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3300&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 0~3300mV&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  value_R &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(value_V, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3300&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);            &lt;span style=&#34;color:#75715e&#34;&gt;// 0~10kΩ&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resist : &amp;#34;&lt;/span&gt;); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(value_R); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ω&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Voltage: &amp;#34;&lt;/span&gt;); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(value_V); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mV&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_READ&lt;/span&gt;(V1)           &lt;span style=&#34;color:#75715e&#34;&gt;// ESP32 -&amp;gt; widget virtual pin1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;virtualWrite&lt;/span&gt;(V1, value_R);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_READ&lt;/span&gt;(V2)           &lt;span style=&#34;color:#75715e&#34;&gt;// ESP32 -&amp;gt; widget virtual pin1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;virtualWrite&lt;/span&gt;(V2, value_V);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Blynk에서 2개의 Gauge를 사용하기 위해 BLYNK)READ(Vpin)을 2번 사용한다.&lt;/li&gt;&#xA;&lt;li&gt;Blynk.virtualWrite(Vpin, value)를 통해 Blynk App의 Gauge 위젯에서 지정한 virtual pin에 value값을 표시한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;blynk-설정&#34;&gt;Blynk 설정&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;새로운 프로젝트를 생성한다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NAME : ESP32_Potentiometer&lt;/li&gt;&#xA;&lt;li&gt;CHOOSE DEVICE : ESP32 Dev Board&lt;/li&gt;&#xA;&lt;li&gt;CONNECTION TYPE : BLE&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-02.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;이메일로 발송된 토큰을 복사한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-03.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;+버튼을 눌러 위젯을 추가할 수 있는 화면으로 진입한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-04.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;먼저 BLE 위젯을 선택하여 ESP32와 Blynk간의 통신 방법을 지정한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-05.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;블루투스 모양의 위젯 버튼을 눌러 Blynk와의 통신을 준비한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-06.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;Connect BLE device&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-07.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;연결하고자 하는 BLE 장비를 선택하면,&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-08.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;연결 확인!&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-09.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;+버튼을 눌러 출력 위젯 2개를 추가한다. (Gauge, Labeled value)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-10.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;먼저 Gauge 위젯을 선택한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-11.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;11&#34;&gt;&#xA;&lt;li&gt;Gauge 위젯이 추가되면 육각형 모양의 아이콘을 눌러 GAUGE Setting 화면으로 진입한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-12.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-13.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;12&#34;&gt;&#xA;&lt;li&gt;설정화면에서 다음 4가지를 설정한다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NAME : 저항&lt;/li&gt;&#xA;&lt;li&gt;INPUT : V1, 0~1000&lt;/li&gt;&#xA;&lt;li&gt;LABEL : (단위를 표시하기 위해) x10 Ohm 을 적는다.&lt;/li&gt;&#xA;&lt;li&gt;READING RATE : 1sec (PUSH 위젯은 실행되지 않음)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-14.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;13&#34;&gt;&#xA;&lt;li&gt;Labeled Value 위젯을 추가하고, 다음과 같이 설정한다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NAME : 저항&lt;/li&gt;&#xA;&lt;li&gt;INPUT : V2, 0~3300&lt;/li&gt;&#xA;&lt;li&gt;LABEL : (단위를 표시하기 위해) mV 를 적는다.&lt;/li&gt;&#xA;&lt;li&gt;READING RATE : 1sec (PUSH 위젯은 실행되지 않음)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-15.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;14&#34;&gt;&#xA;&lt;li&gt;상단의 뒤로가기 화살표를 눌러 프로젝트 바탕화면으로 돌아간다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-16.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;15&#34;&gt;&#xA;&lt;li&gt;여기서 플레이버튼을 누르면,&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-17.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;p&gt;저항과 전압의 측정이 시작된다. (시리얼 모니터에서도 관찰 가능)&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 BLE, Blynk Slider (PWM)</title>
      <link>http://localhost:1313/posts/esp32-ble-blynk-slider-pwm/</link>
      <pubDate>Tue, 22 Oct 2019 23:55:21 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ble-blynk-slider-pwm/</guid>
      <description>&lt;h3 id=&#34;esp32와-blynk에서의-pwm-사용&#34;&gt;ESP32와 Blynk에서의 PWM 사용&lt;a class=&#34;anchor&#34; href=&#34;#esp32%ec%99%80-blynk%ec%97%90%ec%84%9c%ec%9d%98-pwm-%ec%82%ac%ec%9a%a9&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Blynk app에서 Slider 위젯을 사용하여 App → ESP32로 PWM 신호를 보내 LED의 밝기를 조절해본다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Blynk에서 Slider는 Virtual pin을 사용해야한다. (Digital핀을 선택하는 것이 불가능)&lt;/li&gt;&#xA;&lt;li&gt;Virtual pin을 사용하기 위해 BLYNK_WRITE(Vpin)을 사용한다.&lt;/li&gt;&#xA;&lt;li&gt;ESP32에서 PWM을 사용하기 위한 절차에 따라 코딩을 진행한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-pwm-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;※ LED모듈을 사용하는 경우 저항이 필요없다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_PRINT Serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_USE_DIRECT_CONNECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BlynkSimpleEsp32_BLE.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEDevice.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEServer.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// You should get Auth Token in the Blynk App.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Go to the Project Settings (nut icon).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; auth[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rc77E7UrbQHhoLE-LV1Ajxz20k8eLBrk&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// setting PWM properties&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LEDC_FREQ        5000 &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Hz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LEDC_CHANNEL_0   0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LEDC_RESOLUTION  12   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 10bit (0~1023) 12bit(0~4095) 16bit(0~65535)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// led Pin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pin_ledR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_WRITE&lt;/span&gt;(V5)           &lt;span style=&#34;color:#75715e&#34;&gt;// widget virtual pin5 -&amp;gt; ESP32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value_V5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; param.&lt;span style=&#34;color:#a6e22e&#34;&gt;asInt&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ledcWrite&lt;/span&gt;(LEDC_CHANNEL_0, value_V5);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;V5 value: &amp;#34;&lt;/span&gt;); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(value_V5);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Debug console&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Waiting for connections...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// configure LED PWM functionalitites&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ledcSetup&lt;/span&gt;(LEDC_CHANNEL_0, LEDC_FREQ, LEDC_RESOLUTION);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// attach the same channel to the GPIO to be controlled&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ledcAttachPin&lt;/span&gt;(pin_ledR, LEDC_CHANNEL_0);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// for Blynk &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;setDeviceName&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blynk-t&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(auth);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch-분석&#34;&gt;sketch 분석&lt;a class=&#34;anchor&#34; href=&#34;#sketch-%eb%b6%84%ec%84%9d&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;Button 위젯 사용을 위해 사용하였던 예제 sketch에 다음의 라인을 추가하여야 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 BLE, Blynk Button</title>
      <link>http://localhost:1313/posts/esp32-ble-blynk-button/</link>
      <pubDate>Mon, 21 Oct 2019 23:12:58 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ble-blynk-button/</guid>
      <description>&lt;h3 id=&#34;blynk를-처음-사용하는-경우&#34;&gt;Blynk를 처음 사용하는 경우&lt;a class=&#34;anchor&#34; href=&#34;#blynk%eb%a5%bc-%ec%b2%98%ec%9d%8c-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;blynk-라이브러리-설치하기&#34;&gt;Blynk 라이브러리 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;docs.blynk.cc 접속 – Downloads – Blynk Library&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1&#34;&gt;https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Blynk_Release_v0.6.1.zip 다운로드&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;압축을 풀면 libraries, tools 폴더가 보임&lt;/li&gt;&#xA;&lt;li&gt;이 두 폴더를 아두이노IDE의 기본 스케치북 위치로 복사하여 붙여넣기 함&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기존의 libraries 폴더와 합쳐짐&lt;/li&gt;&#xA;&lt;li&gt;기본 스케치북 위치 확인 방법&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아두이노IDE – 파일 – 환경설정 – 설정탭 – 스케치북 위치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;스마트폰에-blynk-app-설치하기&#34;&gt;스마트폰에 Blynk App 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%eb%a7%88%ed%8a%b8%ed%8f%b0%ec%97%90-blynk-app-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아이폰 : 애플 앱스토어&lt;/li&gt;&#xA;&lt;li&gt;안드로이드 : 구글 플레이스토어&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;버튼-위젯을-이용한-led-onoff-하기&#34;&gt;버튼 위젯을 이용한 LED On/Off 하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%b2%84%ed%8a%bc-%ec%9c%84%ec%a0%af%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-led-onoff-%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 ADC</title>
      <link>http://localhost:1313/posts/esp32-adc/</link>
      <pubDate>Sun, 20 Oct 2019 01:59:54 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-adc/</guid>
      <description>&lt;h3 id=&#34;esp32-adc&#34;&gt;ESP32 ADC&lt;a class=&#34;anchor&#34; href=&#34;#esp32-adc&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ESP32는 18개의 12bit ADC 입력핀을 사용할 수 있다. (0~4095)&lt;/li&gt;&#xA;&lt;li&gt;아두이노의 경우 10bit를 사용한다. (0~1023)&lt;/li&gt;&#xA;&lt;li&gt;0V ~ 3.3V의 전압을 0~4095(0xFFF)까지의 디지털값으로 AD 변환한다.&lt;/li&gt;&#xA;&lt;li&gt;Arduino IDE 환경에서는 ESP32의 ADC 관련 레지스터를 조작하지 않고 analogRead() 함수를 사용하여 ESP32의 ADC 입력핀의 전압값을 가져올 수 있다. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;potentiometer-저항값-출력하기&#34;&gt;Potentiometer 저항값 출력하기&lt;a class=&#34;anchor&#34; href=&#34;#potentiometer-%ec%a0%80%ed%95%ad%ea%b0%92-%ec%b6%9c%eb%a0%a5%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-adc-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;가변저항의 저항을 A0(ADC1_CH0, GPIO36)로 읽고 전압값으로 변환한 뒤 시리얼 모니터로 출력한다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ESP32 ADC test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define analogPin A0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// read the input on analog pin GPIO36 (ADC1_CH0):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; sensorValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;analogRead&lt;/span&gt;(analogPin);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Convert the analog (12bit ADC :  0 - 4095) to a voltage (0 - 3.3V):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; voltage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (sensorValue &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4095.0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// print out the value you read:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(voltage);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;potentiometer로-led-밝기-조절하기&#34;&gt;Potentiometer로 LED 밝기 조절하기&lt;a class=&#34;anchor&#34; href=&#34;#potentiometer%eb%a1%9c-led-%eb%b0%9d%ea%b8%b0-%ec%a1%b0%ec%a0%88%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic-1&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic-1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-adc-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 시작하기</title>
      <link>http://localhost:1313/posts/esp32-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sat, 19 Oct 2019 15:22:37 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;esp32-시작하기&#34;&gt;ESP32 시작하기&lt;a class=&#34;anchor&#34; href=&#34;#esp32-%ec%8b%9c%ec%9e%91%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;driver-설치-처음-설치하는-경우&#34;&gt;Driver 설치: 처음 설치하는 경우&lt;a class=&#34;anchor&#34; href=&#34;#driver-%ec%84%a4%ec%b9%98-%ec%b2%98%ec%9d%8c-%ec%84%a4%ec%b9%98%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;ESP32는 USB-to-Serial bridge로 Silicon Labs의 CP210x를 사용한다. &lt;a href=&#34;https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers&#34;&gt;제조사 홈페이지&lt;/a&gt;에서 자신이 사용하는 OS에 알맞는 CP210x 드라이버를 다운받아 설치한다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;arduino-ide-설치&#34;&gt;Arduino IDE 설치&lt;a class=&#34;anchor&#34; href=&#34;#arduino-ide-%ec%84%a4%ec%b9%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;Arduino IDE Download&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.arduino.cc/en/software&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;arduino-ide-설정&#34;&gt;Arduino IDE 설정&lt;a class=&#34;anchor&#34; href=&#34;#arduino-ide-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Arduino IDE에서 &lt;strong&gt;파일&lt;/strong&gt;&amp;gt; &lt;strong&gt;환경설정&lt;/strong&gt;&amp;gt; &lt;strong&gt;설정&lt;/strong&gt; (&lt;strong&gt;File&lt;/strong&gt;&amp;gt; &lt;strong&gt;Preferences&lt;/strong&gt;&amp;gt; &lt;strong&gt;Settings&lt;/strong&gt;)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-ide-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;추가적인 보드 매니저 URLs에 아래 내용을 추가한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://dl.espressif.com/dl/package_esp32_index.json&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ESP8266에 대한 URLs를 사용하고 있었다면, comma를 사용하여 구분하면 두가지를 모두 사용할 수 있다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://dl.espressif.com/dl/package_esp32_index.json, http://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;툴&lt;/strong&gt;&amp;gt; &lt;strong&gt;보드&lt;/strong&gt;&amp;gt; &lt;strong&gt;보드 매니저&lt;/strong&gt;&amp;hellip; &lt;strong&gt;Tools&lt;/strong&gt;&amp;gt; &lt;strong&gt;Board&lt;/strong&gt;&amp;gt; &lt;strong&gt;Board Manager&lt;/strong&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-ide-02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32-WROOM-32D DevkitC V4</title>
      <link>http://localhost:1313/posts/esp-wroom-32d-devkitc-v4/</link>
      <pubDate>Sat, 19 Oct 2019 01:58:29 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp-wroom-32d-devkitc-v4/</guid>
      <description>&lt;h3 id=&#34;esp32-wroom-32d-devkitc-v4&#34;&gt;ESP32-WROOM-32D DevkitC V4&lt;a class=&#34;anchor&#34; href=&#34;#esp32-wroom-32d-devkitc-v4&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-pinout.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/attach/ESP32-Pinout.hwp&#34;&gt;핀아웃 다운로드&lt;/a&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;녹색핀: 사용에 적합한 핀&lt;/li&gt;&#xA;&lt;li&gt;노란색: 사용은 가능하나 부팅시 예기치 않은 동작이 발생할 수 있으므로 주의해야 하는 핀 (GPIO34~39는 Input only!)&lt;/li&gt;&#xA;&lt;li&gt;빨간색: 입력 또는 출력으로 사용할 수 없는 핀을 의미한다. (사용이 가능하더라도 사용하지 않음!)&lt;/li&gt;&#xA;&lt;li&gt;보라색: Wifi사용시 사용불가한 analog핀&lt;/li&gt;&#xA;&lt;li&gt;GPIO에서 Output이 가능한 모든 핀은 PWM으로 사용 가능&lt;/li&gt;&#xA;&lt;li&gt;ADC: 0&lt;del&gt;3.3V (0&lt;/del&gt;4095) (0&lt;del&gt;0.15V구간과 3.1&lt;/del&gt;3.3V의 값은 리니어하지 않으므로 구별이 거의 불가능함&lt;/li&gt;&#xA;&lt;li&gt;I2C: 아두이노IDE에서 사용하는 디폴트 핀&lt;/li&gt;&#xA;&lt;li&gt;RTC GPIO: Ultra Low Power(Deep Sleep)모드의 ESP32를 Wake up&lt;/li&gt;&#xA;&lt;li&gt;Strapping Pins: Bootloader나 Flashing시에 사용되며, 코드 업로드시 문제될 수 있음&lt;/li&gt;&#xA;&lt;li&gt;High at Boot, Low at Boot, BOOT, PWM at Boot: Boot시 신호가 나오며, Output으로 사용하면 reset이나 booting시에 문제가 될 수 있는 핀&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;peripheral&#34;&gt;Peripheral&lt;a class=&#34;anchor&#34; href=&#34;#peripheral&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;ADC와 DAC 기능은 특정 핀에 고정되어 있다. 하지만 UART, I2C, SPI, PWM등의 기능은 어느 핀에 사용할지 결정해서 코드에서 지정해 줘야 한다. 소프트웨어에서 핀의 속성을 정의해 줄 수 있지만, 각 핀들은 디폴트로 지정되어 있는 기능들이 있다. (Pinout 참고)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
