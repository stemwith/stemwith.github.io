<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on STEM with</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on STEM with</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 02 Dec 2021 18:27:53 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ESP32, RC카</title>
      <link>http://localhost:1313/posts/esp32-rc%EC%B9%B4/</link>
      <pubDate>Thu, 02 Dec 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-rc%EC%B9%B4/</guid>
      <description>&lt;h3 id=&#34;샤시-조립&#34;&gt;샤시 조립&lt;a class=&#34;anchor&#34; href=&#34;#%ec%83%a4%ec%8b%9c-%ec%a1%b0%eb%a6%bd&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;샤시-부품&#34;&gt;샤시 부품&lt;a class=&#34;anchor&#34; href=&#34;#%ec%83%a4%ec%8b%9c-%eb%b6%80%ed%92%88&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;번호&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;부품&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;사진&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;수량&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;용도 및 참고사항&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;전륜 회전축&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-14.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;베어링(대)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-18.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;스티어링 컵&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-08.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;커플러 고정핀&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-16.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;베어링(중)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-19.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(전륜) 육각 커플러&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-15.png&#34; width=&#34;80%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;휠&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-01.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;나이록 너트(M4)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-22.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;십자형 육각 복스&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-17.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼 조인트 커넥팅 로드&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-09.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;홀 간격 80.5mm 유지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼 조인트 커넥팅 로드&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-35.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;홀 간격 51mm 유지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;12&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;서보모터&lt;br&gt;MG996R&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-54.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;13&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;ㄴ자 서보모터 브라켓&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-11.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;휠 베이스 고정판&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-12.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;15&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;서보 혼&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-25.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(볼트 포함)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;16&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;나이록 너트&lt;br&gt;(M2.5)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-23.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;17&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤시 하판&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-03.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;18&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;DC엔코더 모터 &amp;amp; 커넥터&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-04.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;19&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;모터 브라켓&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-07.png&#34; width=&#34;67%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;20&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤프트&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-10.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;21&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;써클립&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-24.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;22&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤프트 베어링&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-21.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;기어&lt;br&gt;(무두볼트(Set Screw) 포함)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-05.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;24&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;육각 샤프트 커플링 커넥터&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-06.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;25&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;범퍼&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-02.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;26&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;샤시 상판&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-34.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;27&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;락스위치&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-20.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;28&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;황동 육각 스터드&lt;br&gt;(M3×22mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-26.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;휠 베이스 고정용 4개, 상판 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;29&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;황동 육각 스터드&lt;br/&gt;(M3×16mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-27.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;범퍼 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;30&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br/&gt;(Pan head, M4×6mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-32.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;모터 브라켓과 샤시 하판 고정용 6개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br&gt;(Bind-Washer head, M3×6mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-28.png&#34; alt=&#34;&#34; /&gt;  &lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-28.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;서보모터와 서보모터 브라켓 고정용 4개, 서보모터 브라켓과 샤시하판 고정용 4개, 범퍼 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;32&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br&gt;(Bind head, M3×8mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;`&#34; /&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;&#34; /&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;&#34; /&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-30.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;육각 스터드 고정용 12개, 범퍼 고정용 2개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br/&gt;(Pan head, M2.5×10mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-29.png&#34; alt=&#34;&#34; /&gt;  &lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-29.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;커넥팅 로드 연결용 3개, 휠 베이스 연결용 4개&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;34&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;볼트&lt;br&gt;(Flat head, M2.5×5mm)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-31.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;모터와 모터브라켓 고정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;35&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;육각렌치&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-33.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;기어 무두볼트용&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;저항&lt;br&gt;1K or 5.1K&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/r/ESP32-RC-Car-13.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(선택사항) 인코더 풀업저항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;홀센서 칩&lt;br&gt;SH41F(SOT-23타입)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;(선택사항) 홀 센서를 이중채널로 사용할 필요가 있는 경우에, 각 모터마다 1개씩 추가함&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;총&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36종&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;전륜-조향-휠-조립&#34;&gt;전륜 조향 휠 조립&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a0%84%eb%a5%9c-%ec%a1%b0%ed%96%a5-%ed%9c%a0-%ec%a1%b0%eb%a6%bd&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;사진 오른쪽부터 차례대로 8개의 부품을 끼워 휠을 조립한다. (왼쪽휠/오른쪽휠 각각 1개씩, 총 2개 조립)&lt;/p&gt;</description>
    </item>
    <item>
      <title>알코올 램프 안전 손잡이 받침대 3D프린팅</title>
      <link>http://localhost:1313/posts/stem-%EC%95%8C%EC%BD%94%EC%98%AC-%EB%9E%A8%ED%94%84-%EB%B0%9B%EC%B9%A8%EB%8C%80/</link>
      <pubDate>Mon, 15 Nov 2021 17:57:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/stem-%EC%95%8C%EC%BD%94%EC%98%AC-%EB%9E%A8%ED%94%84-%EB%B0%9B%EC%B9%A8%EB%8C%80/</guid>
      <description>&lt;p&gt;학교에서 알코올 램프를 사용할 때 겪는 불편한 문제 중 하나. 삼발이가 뜨거워져서 알코올 램프를 끌 때, 손 등 부분이 삼발이에 닿아서 데이기 쉽다는 것이다. 이 때문에 한국에서는 알코올 램프를 끼워 안전하게 쓸 수 있는 받침대를 구입하여 사용하곤 했다.&lt;/p&gt;&#xA;&lt;p&gt;그런데 온갖 잡동사니를 다 팔고 있는 중국 타오바오를 아무리 뒤져보아도 막상 이런 형태의 알코올 램프 받침대를 찾을 수가 없었다. 그동안 사용했던 받침대들이 깨지고, 열에 의해 변형되어 새로 구입을 하기는 해야하는데, 어떻게 할까 생각하다가&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>전자기파 검출기 만들기</title>
      <link>http://localhost:1313/posts/stem-%EC%A0%84%EC%9E%90%EA%B8%B0%ED%8C%8C-%EA%B2%80%EC%B6%9C%EA%B8%B0/</link>
      <pubDate>Tue, 02 Nov 2021 17:57:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/stem-%EC%A0%84%EC%9E%90%EA%B8%B0%ED%8C%8C-%EA%B2%80%EC%B6%9C%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;전자기파-검출&#34;&gt;전자기파 검출&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a0%84%ec%9e%90%ea%b8%b0%ed%8c%8c-%ea%b2%80%ec%b6%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;콘센트, 멀티탭, 전자제품 등에서 나오는 60Hz 정도의 전자파를 검출하여 증폭시킨 뒤, 이를 스위칭 신호로 만들어 LED를 켜는 회로를 구성해본다.&lt;/p&gt;&#xA;&lt;p&gt;※ 참고: 눈이 즐거운 물리 (&lt;a href=&#34;https://www.phys.pe.kr&#34;&gt;www.phys.pe.kr&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/w/wave-27.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;작동원리&#34;&gt;작동원리&lt;a class=&#34;anchor&#34; href=&#34;#%ec%9e%91%eb%8f%99%ec%9b%90%eb%a6%ac&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;안테나에 전자기파가 잡히면&lt;/li&gt;&#xA;&lt;li&gt;C1815 트랜지스터로 신호를 증폭&lt;/li&gt;&#xA;&lt;li&gt;1N4148 다이오드는 반대 방향으로 흐르는 노이즈 신호를 제거하여, 안테나에 잡힌 전자기파만을 유효 신호로 처리하도록 함&lt;/li&gt;&#xA;&lt;li&gt;증폭된 신호를 A1015 트랜지스터를 스위치 삼아 LED를 켬&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;준비물&#34;&gt;준비물&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a4%80%eb%b9%84%eb%ac%bc&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;개별-준비물&#34;&gt;개별 준비물&lt;a class=&#34;anchor&#34; href=&#34;#%ea%b0%9c%eb%b3%84-%ec%a4%80%eb%b9%84%eb%ac%bc&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LED 1개&lt;/li&gt;&#xA;&lt;li&gt;0.01uF (103) 세라믹 캐패시터 1개&lt;/li&gt;&#xA;&lt;li&gt;A1015 트랜지스터 1개&lt;/li&gt;&#xA;&lt;li&gt;C1815 트랜지스터 1개&lt;/li&gt;&#xA;&lt;li&gt;10uH 인덕터 코일 (갈-검-검-금) 1개&lt;/li&gt;&#xA;&lt;li&gt;1N4148 스위칭 다이오드 1개&lt;/li&gt;&#xA;&lt;li&gt;CR2032 3V 리튬전지 1개&lt;/li&gt;&#xA;&lt;li&gt;듀퐁 케이블 10P (9P 사용 가능) 1개&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;기타-준비물&#34;&gt;기타 준비물&lt;a class=&#34;anchor&#34; href=&#34;#%ea%b8%b0%ed%83%80-%ec%a4%80%eb%b9%84%eb%ac%bc&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;스트리퍼, 가위, 스카치테이프&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, DC모터, TB6612FNG</title>
      <link>http://localhost:1313/posts/esp32-dc%EB%AA%A8%ED%84%B0/</link>
      <pubDate>Mon, 01 Nov 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-dc%EB%AA%A8%ED%84%B0/</guid>
      <description>&lt;h3 id=&#34;dc모터-사용하기&#34;&gt;DC모터 사용하기&lt;a class=&#34;anchor&#34; href=&#34;#dc%eb%aa%a8%ed%84%b0-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;아두이노의 경우와 마찬가지로 ESP32에서도 TB6612FNG 모터드라이버와 함께, 모터 및 아두이노 단독사용을 위하여 3.7V 18650 2개를 직렬로 연결한 외부전원을 사용한다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;tb6612fng&#34;&gt;TB6612FNG&lt;a class=&#34;anchor&#34; href=&#34;#tb6612fng&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;h5 id=&#34;기본-핀-배열&#34;&gt;기본 핀 배열&lt;a class=&#34;anchor&#34; href=&#34;#%ea%b8%b0%eb%b3%b8-%ed%95%80-%eb%b0%b0%ec%97%b4&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;VM&lt;br/&gt;VCC&lt;br/&gt;GND(*)&lt;br/&gt;AOUT1&lt;br/&gt;AOUT2&lt;br/&gt;BOUT2&lt;br/&gt;BOUT1&lt;br/&gt;GND&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-01.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;PWMA&lt;br/&gt;AIN2&lt;br/&gt;AIN1&lt;br/&gt;STBY&lt;br/&gt;BIN1&lt;br/&gt;BIN2&lt;br/&gt;PWMB&lt;br/&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-02.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;핀-배열이-다른-경우&#34;&gt;핀 배열이 다른 경우&lt;a class=&#34;anchor&#34; href=&#34;#%ed%95%80-%eb%b0%b0%ec%97%b4%ec%9d%b4-%eb%8b%a4%eb%a5%b8-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;GND&lt;br/&gt;VCC&lt;br/&gt;AOUT1&lt;br/&gt;AOUT2&lt;br/&gt;BOUT2&lt;br/&gt;BOUT1&lt;br/&gt;VM&lt;br/&gt;GND&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-03.png&#34; width=&#34;75%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;PWMA&lt;br/&gt;AIN2&lt;br/&gt;AIN1&lt;br/&gt;NC (=STBY)&lt;br/&gt;BIN1&lt;br/&gt;BIN2&lt;br/&gt;PWMB&lt;br/&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/t/tb6612fng-04.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;VM (모터 전압) = 15V max&lt;/li&gt;&#xA;&lt;li&gt;VCC (로직 전압) = 2.7 ~ 5.5V&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;GND&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TB6612FNG 모듈을 여러개 테스트한 결과, 기본 핀 배열을 가진 모듈의 &lt;strong&gt;3번핀 GND&lt;/strong&gt;에 연결할 경우 &lt;strong&gt;작동이 안되는&lt;/strong&gt; 몇몇 제품이 있었음&lt;/li&gt;&#xA;&lt;li&gt;그러므로 &lt;strong&gt;8번핀, 9번핀의 GND 사용을 권장&lt;/strong&gt;함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;출력전류: 정전류 1.2A (3.2A peak)까지 (모터 2개 사용시 합산 전류임)&lt;/li&gt;&#xA;&lt;li&gt;모터 제어모드: CW, CCW, short-brake, STOP, stand-by&lt;/li&gt;&#xA;&lt;li&gt;두개의 모터 출력을 개별 제어하며, &lt;strong&gt;100kHz&lt;/strong&gt;의 PWM으로 속도 제어&lt;/li&gt;&#xA;&lt;li&gt;써멀 셧다운 및 저전압 감지회로 내장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;pin의-사용&#34;&gt;Pin의 사용&lt;a class=&#34;anchor&#34; href=&#34;#pin%ec%9d%98-%ec%82%ac%ec%9a%a9&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;p&gt;ESP32와 TB6612FNG모듈을 브레드보드를 통해 연결하기 쉽도록 핀을 구성한 Pinmap이므로, 필요에 따라 수정하여 사용할 수 있다. (아래표는 참고만 할 것!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, nRF24L01 무선통신</title>
      <link>http://localhost:1313/posts/esp32-nrf24l01/</link>
      <pubDate>Sun, 10 Oct 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-nrf24l01/</guid>
      <description>&lt;h3 id=&#34;nrf24l01&#34;&gt;nRF24L01&lt;a class=&#34;anchor&#34; href=&#34;#nrf24l01&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;library&#34;&gt;library&lt;a class=&#34;anchor&#34; href=&#34;#library&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;스케치&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 포함하기&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 관리&lt;/strong&gt;&amp;gt; &lt;strong&gt;nRF24L01&lt;/strong&gt; 검색한 후, &lt;strong&gt;RF24 by TMRh20, Avamander&lt;/strong&gt; 설치&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/n/ESP32-nRF24L01-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic-nrf24l01-receiver-with-esp32&#34;&gt;schematic: nRF24L01 receiver with ESP32&lt;a class=&#34;anchor&#34; href=&#34;#schematic-nrf24l01-receiver-with-esp32&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/n/ESP32-nRF24L01-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;※ nRF24L01 모듈에 따라 10uF 캐페시터가 없으면 통신이 안되는 경우가 있음. 이런 경우에만 사용할 것.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;pinmap-안테나를-위로-향하게-두고-모듈을-위에서-내려다-볼때의-핀배열&#34;&gt;pinmap: (안테나를 위로 향하게 두고, 모듈을 위에서 내려다 볼때의 핀배열)&lt;a class=&#34;anchor&#34; href=&#34;#pinmap-%ec%95%88%ed%85%8c%eb%82%98%eb%a5%bc-%ec%9c%84%eb%a1%9c-%ed%96%a5%ed%95%98%ea%b2%8c-%eb%91%90%ea%b3%a0-%eb%aa%a8%eb%93%88%ec%9d%84-%ec%9c%84%ec%97%90%ec%84%9c-%eb%82%b4%eb%a0%a4%eb%8b%a4-%eb%b3%bc%eb%95%8c%ec%9d%98-%ed%95%80%eb%b0%b0%ec%97%b4&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ESP32&lt;/th&gt;&#xA;          &lt;th&gt;3V3&lt;/th&gt;&#xA;          &lt;th&gt;IO5&lt;/th&gt;&#xA;          &lt;th&gt;IO23&lt;/th&gt;&#xA;          &lt;th&gt;None&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;          &lt;td&gt;↑&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;nRF24L01&lt;/td&gt;&#xA;          &lt;td&gt;VCC + 10uF&lt;/td&gt;&#xA;          &lt;td&gt;CSN&lt;/td&gt;&#xA;          &lt;td&gt;MOSI&lt;/td&gt;&#xA;          &lt;td&gt;IRQ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;(위에서 보이는 핀배열)&lt;/td&gt;&#xA;          &lt;td&gt;GND + 10uF&lt;/td&gt;&#xA;          &lt;td&gt;CE&lt;/td&gt;&#xA;          &lt;td&gt;SCK&lt;/td&gt;&#xA;          &lt;td&gt;MISO&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;          &lt;td&gt;↓&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ESP32&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;GND&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;IO4&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;IO18&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;IO19&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch-11-chat-room&#34;&gt;sketch: 1:1 Chat Room&lt;a class=&#34;anchor&#34; href=&#34;#sketch-11-chat-room&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;양방향 송수신을 위하여 위 회로도를 보고 2개의 모듈을 만든 뒤, 다음 스케치를 업로드한다.&lt;/li&gt;&#xA;&lt;li&gt;시리얼 모니터를 띄운 뒤, 메세지를 전송해본다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Libraries for NRF24L01+ module.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;SPI.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;nRF24L01.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;RF24.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//RF24 object with two pins defined with arguments. CE: 4, CSN: 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;RF24 &lt;span style=&#34;color:#a6e22e&#34;&gt;radio&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Address of the pipe. 40 bit long, you can choose this freely.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Remember to use different address in different projects.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; address &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x1234ABCDEFLL&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; stext[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; spos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; rtext[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; rpos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sendText&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; text, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; tlen)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.stopListening();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.openWritingPipe(address);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.write(stext, tlen);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SEND: &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.println(text);    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  memset(stext, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.openReadingPipe(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, address);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.startListening();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;//Start the radio&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.begin(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.begin();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;//Open reading pipe with given address and start listening for incoming data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  radio.openReadingPipe(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, address);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.setPALevel(RF24_PA_MIN); &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  radio.startListening();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; Serial.available()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stext[spos] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Serial.read();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(stext[spos] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x0a&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      sendText(stext, spos);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      spos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      spos &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (radio.available()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (radio.available()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      radio.read(rtext, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Serial.print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RECV: &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Serial.println(rtext);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch-11-chat-room-1&#34;&gt;sketch: 1:1 Chat Room&lt;a class=&#34;anchor&#34; href=&#34;#sketch-11-chat-room-1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;다음은 처음 실행 후 시리얼모니터에 입력한 ID를 이용하여 Chat Room을 만드는 코드이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, OLED (한글 출력 하기)</title>
      <link>http://localhost:1313/posts/esp32-oled/</link>
      <pubDate>Sun, 26 Sep 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-oled/</guid>
      <description>&lt;h3 id=&#34;oled&#34;&gt;OLED&lt;a class=&#34;anchor&#34; href=&#34;#oled&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;종류&#34;&gt;종류&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a2%85%eb%a5%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;ESP32나 Arduino에서 사용할 수 있는  oled의 종류는 매우 많지만, 주로 128*64 픽셀을 가진 0.96인치, 1.3인치의 SSD1306, SH1106 컨트롤러를 사용한 oled가 판매되고 있으며, 통신 프로토콜은 I2C나 SPI를 사용한다. oled 모듈 구입시 픽셀수, 컨트롤러 및 통신프로토콜을 잘 알아두어야 스케치 작성시 참고할 수 있음에 유의한다. I2C 방식은 GPIO를 2개만 사용하여 구성이 쉽다는 장점이 있고, SPI방식은 4~5개의 GPIO를 사용하지만 속도가 빠르다는 장점이 있다. 겉모습만으로는 컨트롤러를 확인하기는 어렵다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;I2C&lt;/th&gt;&#xA;          &lt;th&gt;SPI&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-i2c-01.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-spi-01.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-i2c-02.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/u/u8g2-oled-spi-02.png&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;이밖에도 U8g2 라이브러리에서 사용가능한 다양한 oled의 종류를 아래 링크에서 확인할 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, 스텝모터</title>
      <link>http://localhost:1313/posts/esp32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</link>
      <pubDate>Sat, 25 Sep 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</guid>
      <description>&lt;h3 id=&#34;스텝-모터-28byj-48&#34;&gt;스텝 모터, 28BYJ-48&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%85%9d-%eb%aa%a8%ed%84%b0-28byj-48&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;specification&#34;&gt;Specification&lt;a class=&#34;anchor&#34; href=&#34;#specification&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-02.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;정격전압: 5VDC&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;기어비: 1/64&#xA;$$&#xA;\frac {32}{9} \times \frac {22}{11} \times \frac {26}{9} \times \frac {31}{10} = 63.68395 \fallingdotseq 64&#xA;$$&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-01.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;스트라이드 각도&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;스펙상 5.625º / 64&lt;/strong&gt; = 0.087890625&#xA;&lt;ul&gt;&#xA;&lt;li&gt;그러므로,  360º / 0.087890625 = 4096 스텝&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;실제로는 11.25º / 64&lt;/strong&gt; = 0.17578125&#xA;&lt;ul&gt;&#xA;&lt;li&gt;그러므로,  360º / 0.17578125 = &lt;strong&gt;2048 스텝으로 1회전&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Frequency: 100Hz&lt;/li&gt;&#xA;&lt;li&gt;토크: 34.3mN,m&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;모터드라이브-uln2003&#34;&gt;모터드라이브 ULN2003&lt;a class=&#34;anchor&#34; href=&#34;#%eb%aa%a8%ed%84%b0%eb%93%9c%eb%9d%bc%ec%9d%b4%eb%b8%8c-uln2003&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-03.png&#34; width=&#34;67%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;스텝-모터의-구동&#34;&gt;스텝 모터의 구동&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%85%9d-%eb%aa%a8%ed%84%b0%ec%9d%98-%ea%b5%ac%eb%8f%99&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pin-map&#34;&gt;Pin Map&lt;a class=&#34;anchor&#34; href=&#34;#pin-map&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;외부전원&lt;/th&gt;&#xA;          &lt;th&gt;모터드라이브&lt;/th&gt;&#xA;          &lt;th&gt;ESP32&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT1&lt;/td&gt;&#xA;          &lt;td&gt;19&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT2&lt;/td&gt;&#xA;          &lt;td&gt;18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT3&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;INT4&lt;/td&gt;&#xA;          &lt;td&gt;17&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;(+) 5V&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;(-)&lt;/td&gt;&#xA;          &lt;td&gt;VCC&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;※ 모터드라이브에 연결하는 전원(VCC)는 &lt;strong&gt;외부전원 5V를 사용&lt;/strong&gt;한다. (ESP32의 5V는, 전류가 부족하여 ESP32와 연결한 노트북에 영향을 줄 수 있으므로, 사용하지 않는 것이 좋다.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, 온도측정(DS18b20), PLX_DAQ</title>
      <link>http://localhost:1313/posts/esp32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-ds18b20/</link>
      <pubDate>Fri, 17 Sep 2021 00:41:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-ds18b20/</guid>
      <description>&lt;h3 id=&#34;ds18b20-온도센서&#34;&gt;DS18b20 온도센서&lt;a class=&#34;anchor&#34; href=&#34;#ds18b20-%ec%98%a8%eb%8f%84%ec%84%bc%ec%84%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;DS18b20 온도 센서를 이용하여 온도를 측정한다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;one-wire 버스 통신&lt;/li&gt;&#xA;&lt;li&gt;공급전압: 3.0V ~ 5.5V&lt;/li&gt;&#xA;&lt;li&gt;작동온도: -55ºC ~ +125ºC&lt;/li&gt;&#xA;&lt;li&gt;오차: +/-0.5 ºC (-10ºC ~ 85ºC 범위에서)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pinout&#34;&gt;Pinout&lt;a class=&#34;anchor&#34; href=&#34;#pinout&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/DS18b20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;DS18b20 센서는 두 가지 연결방법을 제공하는데, 하나는 VCC를 5V에 연결하는 Normal Mode이고 다른 하나는 VCC를 GND에 연결하는 Parasite Mode이다. 두가지 방법 모두 지원되지만 (경험상) Normal를 추천하며 (원인은 잘 모르겠지만) Parasite Mode에서는 온도센서가 작동이 되지 않는 경우도 가끔 있었다. 회로 구성을 위해 &lt;strong&gt;4.7㏀ 저항 1개&lt;/strong&gt;가 필요하며 Normal Mode 구성을 위해 다음 그림과 같이 연결한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>드론 Part2 조종기 FrSky TaranisQ X7 수신기 FrSky X8R</title>
      <link>http://localhost:1313/posts/drone-%EC%A1%B0%EC%A2%85%EA%B8%B0-%EC%88%98%EC%8B%A0%EA%B8%B0/</link>
      <pubDate>Mon, 02 Aug 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/drone-%EC%A1%B0%EC%A2%85%EA%B8%B0-%EC%88%98%EC%8B%A0%EA%B8%B0/</guid>
      <description>&lt;br&gt;&#xA;&lt;h3 id=&#34;조종기-frsky-taranisq-x7&#34;&gt;조종기 FrSky TaranisQ X7&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a1%b0%ec%a2%85%ea%b8%b0-frsky-taranisq-x7&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;button&#34;&gt;Button&lt;a class=&#34;anchor&#34; href=&#34;#button&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/d/drone2_01.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;펌웨어-업데이트&#34;&gt;펌웨어 업데이트&lt;a class=&#34;anchor&#34; href=&#34;#%ed%8e%8c%ec%9b%a8%ec%96%b4-%ec%97%85%eb%8d%b0%ec%9d%b4%ed%8a%b8&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;① 펌웨어 다운로드: &lt;a href=&#34;https://www.open-tx.org&#34;&gt;https://www.open-tx.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Installation&amp;gt; News&amp;gt;에서 최신 버전 OpenTX 클릭&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Download&amp;gt; SDCard&amp;gt; opentx-x7 클릭한 뒤, 최신버전의 zip파일 다운로드 후 압축해제&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Download&amp;gt; 본인 PC의 OS Companion 다운로드 (펌웨어 버전에 맞는 Companion 선택해야 함)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;② Yaw, Roll 트림을 동시에 서로 안쪽으로 민 상태로 전원버튼을 누르면, Bootloader로 진입함&lt;/p&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/d/drone2_02.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;③ TaranisQ X7 하단커버을 열고 miniUSB포트를 이용하여 PC와 연결하면,&lt;/p&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/d/drone2_03.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Taranis 드라이브와 USB 드라이브 폴더가 열림 (USB 드라이버는 조정기에 삽입되어 있는 miniSD카드를 의미)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;④ [한글 음성 파일 업데이트]&lt;/p&gt;</description>
    </item>
    <item>
      <title>드론 Part1 기체 조립</title>
      <link>http://localhost:1313/posts/drone-hardware/</link>
      <pubDate>Sun, 01 Aug 2021 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/drone-hardware/</guid>
      <description>&lt;br&gt;&#xA;&lt;h3 id=&#34;드론-조립&#34;&gt;드론 조립&lt;a class=&#34;anchor&#34; href=&#34;#%eb%93%9c%eb%a1%a0-%ec%a1%b0%eb%a6%bd&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;s500-기체-조립&#34;&gt;S500 기체 조립&lt;a class=&#34;anchor&#34; href=&#34;#s500-%ea%b8%b0%ec%b2%b4-%ec%a1%b0%eb%a6%bd&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/d/drone1_01.png&#34; width=&#34;75%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;전원부: 아래 3가지 방법중 1가지 방법을 선택하여 구성&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;S500 기판 오른쪽에 있는 (+), (-) 단자에 납을 크게 먹인 뒤, AWG12 와이어를 붙이고, 반대쪽 끝은 (사용할 LiPo 배터리의 단자 형태를 고려하여) XT60 Male 혹은 Deans (T plug) 단자를 납땝하여 연결한다.&lt;/li&gt;&#xA;&lt;li&gt;(사용할 LiPo 배터리의 단자가 XT60인 경우) S500 기판 하단에 있는 단자 구멍 중 오른쪽 부분에 XT60 Male 단자를 직접 붙인다.&lt;/li&gt;&#xA;&lt;li&gt;(사용할 LiPo 배터리의 단자가 Deans인 경우) S500 기판 하단에 있는 단자 구멍 중 왼쪽 부분에 Deans (T plug) Male 단자를 직접 붙인다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1번, 2번 모터&lt;/p&gt;</description>
    </item>
    <item>
      <title>STEM, Solar Tracker</title>
      <link>http://localhost:1313/posts/stem-solar-tracker/</link>
      <pubDate>Sun, 22 Nov 2020 01:41:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/stem-solar-tracker/</guid>
      <description>&lt;h3 id=&#34;solar-tracker-만들기&#34;&gt;Solar Tracker 만들기&lt;a class=&#34;anchor&#34; href=&#34;#solar-tracker-%eb%a7%8c%eb%93%a4%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;팬(도리도리) &amp;amp; 틸트(끄덕끄덕)가 가능한 2축 서보모터 거치대와 2개의 서보모터를 사용하여 Solar Tracker를 만들어 보자.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;단계1-solar-tracker-frame-3d-printing&#34;&gt;단계1: Solar Tracker Frame 3D Printing&lt;a class=&#34;anchor&#34; href=&#34;#%eb%8b%a8%ea%b3%841-solar-tracker-frame-3d-printing&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/SolarTracker01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/attach/Sun_Tracker_Gnomon_B.stl&#34;&gt;.stl 파일&lt;/a&gt;  &lt;a href=&#34;http://localhost:1313/attach/Sun_Tracker_Gnomon_B.gcode&#34;&gt;.gcode 파일&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;3D 프린팅 후, 조도센서를 설치할 4곳에 1mm 드릴을 이용하여 각각 2개씩 구멍을 뚫는다 (총 8개).&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;단계2-조도센서-조립하기&#34;&gt;단계2: 조도센서 조립하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%8b%a8%ea%b3%842-%ec%a1%b0%eb%8f%84%ec%84%bc%ec%84%9c-%ec%a1%b0%eb%a6%bd%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;h5 id=&#34;조도센서-삽입&#34;&gt;조도센서 삽입&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a1%b0%eb%8f%84%ec%84%bc%ec%84%9c-%ec%82%bd%ec%9e%85&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/SolarTracker02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;조도센서의 다리를 위에서 뚫은 구멍을 통해 넣은 뒤,&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/SolarTracker03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;뒤쪽에 글루건을 쏘아 고정시킨다. (조도센서는 극성을 구분할 필요가 없으므로, 서로 선이 맞닿지만 않으면 된다.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 서보모터 PWM제어</title>
      <link>http://localhost:1313/posts/esp32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</link>
      <pubDate>Mon, 19 Oct 2020 23:41:02 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0-%EC%A0%9C%EC%96%B4/</guid>
      <description>&lt;h3 id=&#34;sg90-mg90s--mg966r-서보모터&#34;&gt;SG90, MG90S,  MG966R 서보모터&lt;a class=&#34;anchor&#34; href=&#34;#sg90-mg90s--mg966r-%ec%84%9c%eb%b3%b4%eb%aa%a8%ed%84%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;datasheet&#34;&gt;datasheet&lt;a class=&#34;anchor&#34; href=&#34;#datasheet&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/SG90_Datasheet.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;사용법&#34;&gt;사용법&lt;a class=&#34;anchor&#34; href=&#34;#%ec%82%ac%ec%9a%a9%eb%b2%95&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ESP32는 16개의 PWM채널이 있으므로, 최대 16개의 서보모터를 동시에 제어할 수 있다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;서보모터 데이터 시트의 스펙상으로는&amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;대부분의 서보모터(&lt;strong&gt;SG90, MG90S, MG966R&lt;/strong&gt; 등 포함)는 위의 그림처럼 20ms가 1주기가 되므로, PWM frequency를 50Hz로 설정한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;20ms가 1주기이고, HIGH 펄스가 2ms 지속될 때 180º 회전을 한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;그러므로, 전체 펄스 폭의 1/10만큼 HIGH 펄스가 주어지면 180º 회전을 한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Resolution이 16비트라면 65535의 1/10에 해당하는 &lt;del&gt;6554&lt;/del&gt;의 값이 duty값으로 주어지면 서보모터는 180º 회전을 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESP32, 중력 가속도 측정</title>
      <link>http://localhost:1313/posts/stem-%EC%A4%91%EB%A0%A5-%EA%B0%80%EC%86%8D%EB%8F%84-%EC%B8%A1%EC%A0%95/</link>
      <pubDate>Tue, 06 Oct 2020 17:57:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/stem-%EC%A4%91%EB%A0%A5-%EA%B0%80%EC%86%8D%EB%8F%84-%EC%B8%A1%EC%A0%95/</guid>
      <description>&lt;h3 id=&#34;중력gravitational-force&#34;&gt;중력(Gravitational Force)&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a4%91%eb%a0%a5gravitational-force&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;뉴턴은 달의 운동과 케플러의 법칙을 통해, 달과 지구 사이에 작용하는 힘은 지구의 질량과 달의 질량의 곱에 비례하고 거리의 제곱에 반비례한다는 만유인력의 법칙을 밝혔다.&lt;/p&gt;&#xA;&lt;span&gt;\[ F = G \frac{Mm}{r^2} = m_i a = mg \]&lt;/span&gt;&lt;p&gt;지구의 질량 M&lt;/p&gt;&#xA;&lt;span&gt;\[ M=5.072 \times 10^{24}~kg \]&lt;/span&gt;&lt;p&gt;지구 반지름 r&lt;/p&gt;&#xA;&lt;span&gt;\[ r = 6371~km \]&lt;/span&gt;&lt;p&gt;만유인력 상수값은 다음과 같다. (캐번디시에 의해 측정된 G값은 6.674)&lt;/p&gt;&#xA;&lt;span&gt;\[ G = 6.67259 \times 10^{-11}~N \cdot m^2 /kg^2 \]&lt;/span&gt;&lt;p&gt;만유인력이 지상의 물체에 작용되는 경우, 이때 작용하는 힘을 중력이라고 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, Geiger Counter</title>
      <link>http://localhost:1313/posts/arduino-geiger-counter/</link>
      <pubDate>Sun, 23 Aug 2020 17:57:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-geiger-counter/</guid>
      <description>&lt;p&gt;※ SAT Subject Chemistry: Pactice Test&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Used to detect radioactivity.&#xA;① Calorimeter&#xA;② Geiger Counter&#xA;③ Burette&#xA;④ Funnel&#xA;⑤ Bunsen Burner&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;h3 id=&#34;가이거-계수기&#34;&gt;가이거 계수기&lt;a class=&#34;anchor&#34; href=&#34;#%ea%b0%80%ec%9d%b4%ea%b1%b0-%ea%b3%84%ec%88%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;방사선을 측정할 수 있는 관으로  방사능 입자 하나하나를 셀 수 있다. 1908년 러더퍼드의 제자 요하네스 한스 빌헬름 가이거(Johannes Hans Wilhelm Geiger)가 알파선을 감지할 수 있는 감지기를 개발하였으며, 그 후 1928년 가이거와 가이거의 제자인 발터 뮐러가 함께 개량하여 모든 전리방사선을 감지할 수 있도록 만든 것이 현재의 가이거-뮐러 튜브(GM Tube)이다.&lt;/li&gt;&#xA;&lt;li&gt;원리: 튜브는 비활성 기체가 충전된 상태이며  중심 전극(+극, anode)과 관의 내벽(-극, cathode, 금속이나 흑연으로 코팅)으로 구성되어 있다. 여기에 수백V의 전압을 걸면, 관 안에 걸린 높은 전기장 때문에 이온은 음극을 향해 가속되고, 전자는 양극을 향해 가속되며 운동에너지를 얻게 되며 이동 중에 충돌한 기체분자도 함께 전이된다. 이렇게 가스 안에 하전입자의 붕괴가 일어나면 음극에서 양극을 향해 짧고 강한 펄스전류가 순간적으로 나타나 흐르게 된다. 이 펄스전류가 &amp;lsquo;스피커&amp;rsquo;를 지날때 반응음으로 가이거 계수기 특유의 &amp;lsquo;틱티티틱&amp;rsquo;하는 소리가 만들어지는데, 이것이 &amp;lsquo;방사선이 존재한다&amp;rsquo;는 상황을 알려주는 소리이다. 그리고 이 소리 1개음이 방사능 입자 1개에 대한 대응 신호가 된다.  오래된 방식이지만 오늘날에도 큰 변화 없이 이 원리를 응용하여 방사선을 측정하고 있다.&lt;/li&gt;&#xA;&lt;li&gt;단점: 상당히 큰 펄스신호를 얻을 수 있지만, 이 전류의 강도는 방사선이 가진 에너지와 비례관계를 나타내는 것은 아니기때문에, 방사선이 가진 에너지를 측정하는 것은 불가능하다. (방사선의 에너지를 알기 위해서는 비례계수관을 사용해야 한다.) 또한 고준위 방사선의 경우에는 전류가 연속적으로 흐르게 되어 펄스의 횟수를 계수할 수 없게 되는 경우도 있다. (주로 500cps 이상의 경우) 이것을 막기 위해 전자의 흐름을 제어하는 별도의 장치를 부착하거나, 신틸레이터(scintillator)나 이온화 챔버 같은 다른 검출기로 계측한다.&lt;/li&gt;&#xA;&lt;li&gt;가이거 카운터에 사용하는 튜브관은 여러 종류가 제조되고 있다. 대부분의 GM관은 감마선과 2.5MeV 이상의 베타선을 검출한다. 감마선의 검출 감도는 좋지는 않다. GM관 안의 가스밀도가 낮아서, 투과력이 높은 감마선은 상호작용을 일으키기 어렵기 때문이다. 중성자선은 가스로부터 전리하지 않기때문에 검출하지 못한다. 하지만, 관 안쪽을 붕소로 코팅하거나, 삼불화붕소 아니면 ³He가스를 충전하면 중성자선에도 반응하는 GM관을 만들 수 있다. 중성자는 붕소원자핵과 반응하여 알파선을 생성하거나,  ³He원자와 반응하여 수소와 트리튬이온과 전자를 생성하므로 이 전하입자들이 붕괴를 발생시킨다. 각 튜브마다 검출하는 입자가 다르기 때문에, CPM(Count Per Minute) 단위를 uSv/h(Sieverts Per Hours) 단위로 바꾸기 위한 Conversion Factor가 모두 다르다. 그러므로 사용하는 튜브관이 어떤 것인지 정확하게 알아두어야 한다.&lt;/li&gt;&#xA;&lt;li&gt;GM관은 하드웨어 난수발생기로서 이용할 수도 있다.&lt;/li&gt;&#xA;&lt;li&gt;Background Radiation: 자연적으로 존재하는 자연 방사선, 즉 Background Radiation의 경우 J305β 튜브관을 사용할때 평균 15.6 CPM이 측정된다. (주변 상황에 따라 조금씩 달라짐)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;라이브러리-추가하기&#34;&gt;라이브러리 추가하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Wire : 기본 내장 라이브러리&lt;/li&gt;&#xA;&lt;li&gt;LiquidCrystal I2C (by Frank de Brabander) 검색하여 설치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic-for-standalone&#34;&gt;schematic (for standalone)&lt;a class=&#34;anchor&#34; href=&#34;#schematic-for-standalone&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/Geiger-Counter.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 OpenWeatherMap에서 실시간 날씨 정보 받기</title>
      <link>http://localhost:1313/posts/esp32-openweathermap/</link>
      <pubDate>Tue, 19 Nov 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-openweathermap/</guid>
      <description>&lt;h3 id=&#34;openweathermaporg&#34;&gt;OpenWeatherMap.org&lt;a class=&#34;anchor&#34; href=&#34;#openweathermaporg&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;a href=&#34;https://openweathermap.org/&#34;&gt;OpenWeatherMap&lt;/a&gt;은 세계 각 지역의 현재 날씨, 예보, 과거 날씨 데이터를 제공하는 사이트입니다. (몇가지 제약이 있긴 하지만) 회원가입을 통해서 API Key를 생성하고 이를 통해 무료로 실시간 날씨 정보를 얻을 수 있습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;free-current-weather-and-forecasts-collection&#34;&gt;Free Current weather and forecasts collection&lt;a class=&#34;anchor&#34; href=&#34;#free-current-weather-and-forecasts-collection&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;60 Calls per minute (no more than)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/current&#34;&gt;Current weather API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/forecast5&#34;&gt;5 days/3 hour forecast API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/api/weathermaps&#34;&gt;Weather maps 1.0&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/api/uvi&#34;&gt;UV index&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://openweathermap.org/triggers&#34;&gt;Weather alerts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Availability 95%&lt;/li&gt;&#xA;&lt;li&gt;Weather API data update  &amp;lt; 2 hours&lt;/li&gt;&#xA;&lt;li&gt;Weather maps data update  &amp;lt; 3 hours&lt;/li&gt;&#xA;&lt;li&gt;API lifetime support :  Current version&lt;/li&gt;&#xA;&lt;li&gt;Historical weather collection은 모두 Starter 이상(유료)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;current-weather-collections-api-key-생성&#34;&gt;Current weather collections API Key 생성&lt;a class=&#34;anchor&#34; href=&#34;#current-weather-collections-api-key-%ec%83%9d%ec%84%b1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sign Up을 클릭하여 회원가입을 하고,&lt;/p&gt;</description>
    </item>
    <item>
      <title>엑셀, 데이터 유효성 검사의 목록 구성시 동적 범위 설정</title>
      <link>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%ED%9A%A8%EC%84%B1%EA%B2%80%EC%82%AC-%EB%8F%99%EC%A0%81%EB%B2%94%EC%9C%84%EC%84%A4%EC%A0%95/</link>
      <pubDate>Fri, 01 Nov 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%ED%9A%A8%EC%84%B1%EA%B2%80%EC%82%AC-%EB%8F%99%EC%A0%81%EB%B2%94%EC%9C%84%EC%84%A4%EC%A0%95/</guid>
      <description>&lt;p&gt;데이터 유효성 검사를 할 때, 상황에 따라서 목록 구성이 다르게 표시되는 방법을 알아보겠습니다. 일단 다음의 경우를 예로 들면,&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/dynamic01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;학교급(초등, 중등, 고등 등)을 선택하였을 때, 초등을 선택하면 학년을 선택하는 셀에서 1&lt;del&gt;6학년까지 6개의 목록을 선택할 수 있도록 표시되고, 중등을 선택하면 7&lt;/del&gt;9학년,  고등을 선택하면 10~12학년을 선택할 수 있는 목록이 표시되도록 하는 것을 의미합니다. 또 학년마다 학급수가 다르기 때문에 각 학년을 선택하였을 때, 그 학년의 학급수만큼 학급 목록이 뜨도록 하면 더 좋겠죠. 이렇게 상황에 따라 목록이 유동적으로 표시되도록 하면, 데이터를 취합하는 입장에서 오류를 줄일 수 있는 상황을 기대할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4WD Bluetooth</title>
      <link>http://localhost:1313/posts/4wd-bluetooth/</link>
      <pubDate>Wed, 30 Oct 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/4wd-bluetooth/</guid>
      <description>&lt;h3 id=&#34;4wd-bluetooth&#34;&gt;4WD Bluetooth&lt;a class=&#34;anchor&#34; href=&#34;#4wd-bluetooth&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;지금까지 배운 RC카, 블루투스 모듈 사용법, 컨트롤러 사용법을 종합하여 Bluetooth로 조종하는 4WD를 만들어 보겠습니다. IR리모트를 사용한 RC카를 베이스로 하여 IR수신부를 빼고, 블루투스 모듈인 HC-06만 연결하면 됩니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;bluetooth-serial-controller-설정&#34;&gt;Bluetooth Serial Controller 설정&lt;a class=&#34;anchor&#34; href=&#34;#bluetooth-serial-controller-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;여기서는 4WD를 블루투스로 조종하기 위한 콘트롤러를 만들어 봅니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;먼저 Bluetooth Serial Controller를 실행시키세요. (블루투스 페어링이나 앱 설치방법은 이전의 글을 참고하세요.)  아래화면은 TERMINAL Mode인 상태입니다. 여기서 스페너 모양 아이콘을 눌러 PREFERCE로 진입하세요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-01.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;PREFERENCE 화면에서 아무곳이나 누른 뒤, 위로 스크롤하여&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-02.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;9 BUTTON MODE를 활성화 시키고, TERMINAL MODE를 꺼주세요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-03.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;그러면 이런 화면이 나타납니다. 이제 각각의 버튼을 정의해보겠습니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-04.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;다시 스페너 모양 아이콘을 눌러 PREFERENCE로 들어간 뒤, BUTTON-Name을 선택합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-05.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;button2, button4, button5, button6, button8을 각각 누른 뒤, 각 버튼 별로 &amp;lsquo;전진&amp;rsquo;, &amp;lsquo;왼쪽&amp;rsquo;, &amp;lsquo;정지&amp;rsquo;, &amp;lsquo;오른쪽&amp;rsquo;, &amp;lsquo;후진&amp;rsquo;이라고 이름을 붙여줍니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-06.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;다시 PREFERENCE에서 Command를 누르세요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-07.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;Command에서 정의해주는 값이 제일 중요한데요. 각 버튼을 누를때, 아두이노로 전달되는 값을 정의해주는 것이기 때문입니다. button2, button4, button5, button6, button8을 각각 누른 뒤, 각 버튼 별로 &amp;lsquo;F&amp;rsquo;, &amp;lsquo;L&amp;rsquo;, &amp;lsquo;O&amp;rsquo;, &amp;lsquo;R&amp;rsquo;, &amp;lsquo;B&amp;rsquo;이라고 입력값을 넣어주세요. 이 값은 스케치 작성시 사용해야 하므로 꼭 기억해두어야 합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-08.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;이제 Visibility로 갑니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-09.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;여기서는 필요없는 버튼을 지워줄 수 있어요. 실제 사용되는 버튼에만 체크하고, 나머지 버튼은 체크 해제합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-10.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;11&#34;&gt;&#xA;&lt;li&gt;그러면, 아래와 같은 멋진 블루투스 컨트롤러가 나타납니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-11.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;12&#34;&gt;&#xA;&lt;li&gt;이 상태에서 돋보기 모양 아이콘을 눌러 HC-06에 접속해 봅니다. 여기서부터는 블루투스 페어링 과정에서 설명했던 부분과 똑같습니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-12.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;13&#34;&gt;&#xA;&lt;li&gt;모듈ID인 SKS100을 누르면 페어링을 시도하고요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-13.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;14&#34;&gt;&#xA;&lt;li&gt;만일 페어링할 모듈이 나타나지 않으면, Scan for devices로 모듈을 찾아 페어링을 해봅니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-14.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;15&#34;&gt;&#xA;&lt;li&gt;페어링을 시도하는 중이네요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-15.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;16&#34;&gt;&#xA;&lt;li&gt;페어링 완료! 이제 컨트롤러 사용을 위한 모든 준비과정이 완료되었습니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/4wd-bt-16.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;4wd-블루투스-초음파센서-자동차&#34;&gt;4WD 블루투스 초음파센서 자동차&lt;a class=&#34;anchor&#34; href=&#34;#4wd-%eb%b8%94%eb%a3%a8%ed%88%ac%ec%8a%a4-%ec%b4%88%ec%9d%8c%ed%8c%8c%ec%84%bc%ec%84%9c-%ec%9e%90%eb%8f%99%ec%b0%a8&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;위 회로에 초음파 센서 하나만 덧붙여봅니다. 50cm 이내에 물체가 접근하면 후진했다가 정지하도록 되어있습니다. (실제로는 50cm보다 훨씬 짧은 거리내에서 후진을 시작하네요.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>DC모터 &#43; 4WD 자동차 만들기 (TB6612FNG)</title>
      <link>http://localhost:1313/posts/dc%EB%AA%A8%ED%84%B0-4wd-%EC%9E%90%EB%8F%99%EC%B0%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Tue, 29 Oct 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/dc%EB%AA%A8%ED%84%B0-4wd-%EC%9E%90%EB%8F%99%EC%B0%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;dc모터-사용하기&#34;&gt;DC모터 사용하기&lt;a class=&#34;anchor&#34; href=&#34;#dc%eb%aa%a8%ed%84%b0-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;아두이노의 5V, 3.3V핀으로는 모터에 필요한 충분한 전압과 전류를 공급하기 어렵다. 그러므로 사용하려는 모터에 맞는 전압과 전류의 공급을 위한 모터드라이버를 사용해야 한다. 아두이노에서 주로 사용하는 모듈은 L293D, L298N와 TB6612FNG 등이 있으며, 여기서는 TB6612FNG 모터드라이버와 함께, 모터 및 아두이노 단독사용을 위하여 별도의 외부전원을 사용한다. &lt;del&gt;외부 전원으로는 모터를 위한 1.5V AA*4개와 함께 아두이노 단독사용을 위한 9V 사각전지(6F22)를 추가로 연결하였다.&lt;/del&gt;&lt;/p&gt;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;&lt;p&gt;1.5V AA 6개 혹은 3.7V 18650 2개를 직렬로 연결하여 사용하면, 9V 사각전지(6F22)가 필요하지 않으므로 이 방법을 추천한다. 또한 AA 건전지를 사용하는 경우 4WD기준 연속사용시간은 10분 정도뿐일 정도로 전지 소모가 매우 빠르므로, 충전이 가능한 18650 사용을 추천한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 라인트레이서, L298N</title>
      <link>http://localhost:1313/posts/arduino-%EB%9D%BC%EC%9D%B8%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%84%9C-l298n/</link>
      <pubDate>Mon, 28 Oct 2019 22:48:56 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EB%9D%BC%EC%9D%B8%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%84%9C-l298n/</guid>
      <description>&lt;p&gt;아두이노를 사용하여 검은색 라인을 따라 움직이는 라인트레이서 자동차를 만들어보자.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;tcrt5000-ir-reflective-sensor&#34;&gt;TCRT5000 IR reflective sensor&lt;a class=&#34;anchor&#34; href=&#34;#tcrt5000-ir-reflective-sensor&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;라인트레이서 제작시 가장 널리 사용되는 IR 센서이다. 감지하는 부분이 검은색으로 되어 있는 부분이라면 IR이 모두 흡수되고, 흰색으로 되어 있는 부분에서는 모두 반사되는 원리를 이용한다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/LT-03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;장애물이 없는 경우: 1 반환&lt;/li&gt;&#xA;&lt;li&gt;센서와 12mm이내의 거리에 밝은색이 위치하는 경우: 0 반환&lt;/li&gt;&#xA;&lt;li&gt;센서와 12mm이내의 거리에 검은색이 위치하는 경우: 1 반환&lt;/li&gt;&#xA;&lt;li&gt;검은색의 경우도 아주 가까이 가져가면 적외선 수신량이 증가하여 0의 값을 반환할 수 있으므로, 라인트레이서 구성시 감지하는 적당한 거리를 찾는 것이 중요합니다.&lt;/li&gt;&#xA;&lt;li&gt;10~12mm 정도의 거리에서 측정하는 것을 추천&lt;/li&gt;&#xA;&lt;li&gt;AO 단자를 이용할 경우 아날로그 신호로 처리도 가능&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;&lt;p&gt;(위 스펙과는 별도로) 라인트레이서 제작시에는 경험상 센서가 바닥면으로부터 2cm정도 떨어지도록 설치하는 것을 추천함&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, Bluetooth 페어링</title>
      <link>http://localhost:1313/posts/arduino-bluetooth-%ED%8E%98%EC%96%B4%EB%A7%81/</link>
      <pubDate>Sat, 26 Oct 2019 23:24:07 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-bluetooth-%ED%8E%98%EC%96%B4%EB%A7%81/</guid>
      <description>&lt;p&gt;아두이노에서 블루투스를 이용하는 방법을 알아보겠습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;bluetooth-module-선택&#34;&gt;Bluetooth module 선택&lt;a class=&#34;anchor&#34; href=&#34;#bluetooth-module-%ec%84%a0%ed%83%9d&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;아이폰&lt;/strong&gt; : MLT-BT05(AT-09) BLE 모듈 사용 (이 모듈은 안드로이도에서도 사용 가능)&lt;/p&gt;&#xA;&lt;p&gt;HC-06, HC-05는 아이폰에서 SPP(Serial Port Profile) 통신이 지원하지 않는 이유로 사용할 수 없습니다. 그러므로 아이폰으로 블루투스 통신을 하기 위해서는 MLT-BT-BT05, AT-09, CC2541, HM-10, HC-02, RN-42 같은 BLE(Bluetooth Low Energy) 모듈을 사용합니다. 연결방법이나 AT명령어 세트는 HC-06과 비슷해요. 주의 할 점은, 시리얼 모니터에서 &lt;strong&gt;Both NL &amp;amp; CR&lt;/strong&gt; 모드를 선택해주어야 하는 것입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/BT-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 BLE, Blynk Gauge</title>
      <link>http://localhost:1313/posts/esp32-ble-blynk-gauge/</link>
      <pubDate>Wed, 23 Oct 2019 21:33:48 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ble-blynk-gauge/</guid>
      <description>&lt;h3 id=&#34;esp32에서-blynk로-센서값-보내기&#34;&gt;ESP32에서 Blynk로 센서값 보내기&lt;a class=&#34;anchor&#34; href=&#34;#esp32%ec%97%90%ec%84%9c-blynk%eb%a1%9c-%ec%84%bc%ec%84%9c%ea%b0%92-%eb%b3%b4%eb%82%b4%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Blynk App의 GAUGE 위젯을 사용하여 ESP32에 연결된 Potentiometer의 저항값을 읽어 Blynk App에 전압(V), 저항(㏀) 값을 표시해본다. (ESP32 → Blynk App)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ESP32의 Potentiometer 값을 읽기 위해 BLYNK_READ(Vpin)을 사용한다.&lt;/li&gt;&#xA;&lt;li&gt;새로운 프로젝트를 만드는 경우, 새로운 auth token을 받아서 사용해야 한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_PRINT Serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_USE_DIRECT_CONNECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BlynkSimpleEsp32_BLE.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEDevice.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEServer.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// You should get Auth Token in the Blynk App.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Go to the Project Settings (nut icon).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; auth[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WUAeS6P57T3XNaIGyLK1-OUv........&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Potentiometer Pin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define PIN_POTENTIOMETER A0                       &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Potentiometer GPIO 36&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Resist, Voltage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value_Potentiometer; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value_R;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; value_V;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Debug console&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Waiting for connections...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// for Blynk &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;setDeviceName&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blynk-t&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(auth);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  value_Potentiometer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;analogRead&lt;/span&gt;(PIN_POTENTIOMETER);  &lt;span style=&#34;color:#75715e&#34;&gt;// 12bit ADC (0~4095)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  value_V &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(value_Potentiometer, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4095&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3300&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 0~3300mV&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  value_R &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(value_V, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3300&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);            &lt;span style=&#34;color:#75715e&#34;&gt;// 0~10kΩ&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resist : &amp;#34;&lt;/span&gt;); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(value_R); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ω&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Voltage: &amp;#34;&lt;/span&gt;); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(value_V); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mV&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_READ&lt;/span&gt;(V1)           &lt;span style=&#34;color:#75715e&#34;&gt;// ESP32 -&amp;gt; widget virtual pin1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;virtualWrite&lt;/span&gt;(V1, value_R);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_READ&lt;/span&gt;(V2)           &lt;span style=&#34;color:#75715e&#34;&gt;// ESP32 -&amp;gt; widget virtual pin1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;virtualWrite&lt;/span&gt;(V2, value_V);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Blynk에서 2개의 Gauge를 사용하기 위해 BLYNK)READ(Vpin)을 2번 사용한다.&lt;/li&gt;&#xA;&lt;li&gt;Blynk.virtualWrite(Vpin, value)를 통해 Blynk App의 Gauge 위젯에서 지정한 virtual pin에 value값을 표시한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;blynk-설정&#34;&gt;Blynk 설정&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;새로운 프로젝트를 생성한다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NAME : ESP32_Potentiometer&lt;/li&gt;&#xA;&lt;li&gt;CHOOSE DEVICE : ESP32 Dev Board&lt;/li&gt;&#xA;&lt;li&gt;CONNECTION TYPE : BLE&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-02.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;이메일로 발송된 토큰을 복사한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-03.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;+버튼을 눌러 위젯을 추가할 수 있는 화면으로 진입한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-04.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;먼저 BLE 위젯을 선택하여 ESP32와 Blynk간의 통신 방법을 지정한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-05.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;블루투스 모양의 위젯 버튼을 눌러 Blynk와의 통신을 준비한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-06.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;Connect BLE device&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-07.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;연결하고자 하는 BLE 장비를 선택하면,&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-08.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;연결 확인!&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-09.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;+버튼을 눌러 출력 위젯 2개를 추가한다. (Gauge, Labeled value)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-10.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;먼저 Gauge 위젯을 선택한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-11.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;11&#34;&gt;&#xA;&lt;li&gt;Gauge 위젯이 추가되면 육각형 모양의 아이콘을 눌러 GAUGE Setting 화면으로 진입한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-12.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-13.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;12&#34;&gt;&#xA;&lt;li&gt;설정화면에서 다음 4가지를 설정한다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NAME : 저항&lt;/li&gt;&#xA;&lt;li&gt;INPUT : V1, 0~1000&lt;/li&gt;&#xA;&lt;li&gt;LABEL : (단위를 표시하기 위해) x10 Ohm 을 적는다.&lt;/li&gt;&#xA;&lt;li&gt;READING RATE : 1sec (PUSH 위젯은 실행되지 않음)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-14.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;13&#34;&gt;&#xA;&lt;li&gt;Labeled Value 위젯을 추가하고, 다음과 같이 설정한다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NAME : 저항&lt;/li&gt;&#xA;&lt;li&gt;INPUT : V2, 0~3300&lt;/li&gt;&#xA;&lt;li&gt;LABEL : (단위를 표시하기 위해) mV 를 적는다.&lt;/li&gt;&#xA;&lt;li&gt;READING RATE : 1sec (PUSH 위젯은 실행되지 않음)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-15.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;14&#34;&gt;&#xA;&lt;li&gt;상단의 뒤로가기 화살표를 눌러 프로젝트 바탕화면으로 돌아간다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-16.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;15&#34;&gt;&#xA;&lt;li&gt;여기서 플레이버튼을 누르면,&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-adc-17.png&#34; width=&#34;33%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;p&gt;저항과 전압의 측정이 시작된다. (시리얼 모니터에서도 관찰 가능)&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 BLE, Blynk Slider (PWM)</title>
      <link>http://localhost:1313/posts/esp32-ble-blynk-slider-pwm/</link>
      <pubDate>Tue, 22 Oct 2019 23:55:21 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ble-blynk-slider-pwm/</guid>
      <description>&lt;h3 id=&#34;esp32와-blynk에서의-pwm-사용&#34;&gt;ESP32와 Blynk에서의 PWM 사용&lt;a class=&#34;anchor&#34; href=&#34;#esp32%ec%99%80-blynk%ec%97%90%ec%84%9c%ec%9d%98-pwm-%ec%82%ac%ec%9a%a9&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Blynk app에서 Slider 위젯을 사용하여 App → ESP32로 PWM 신호를 보내 LED의 밝기를 조절해본다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Blynk에서 Slider는 Virtual pin을 사용해야한다. (Digital핀을 선택하는 것이 불가능)&lt;/li&gt;&#xA;&lt;li&gt;Virtual pin을 사용하기 위해 BLYNK_WRITE(Vpin)을 사용한다.&lt;/li&gt;&#xA;&lt;li&gt;ESP32에서 PWM을 사용하기 위한 절차에 따라 코딩을 진행한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-pwm-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;※ LED모듈을 사용하는 경우 저항이 필요없다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_PRINT Serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define BLYNK_USE_DIRECT_CONNECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BlynkSimpleEsp32_BLE.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEDevice.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;BLEServer.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// You should get Auth Token in the Blynk App.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Go to the Project Settings (nut icon).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; auth[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rc77E7UrbQHhoLE-LV1Ajxz20k8eLBrk&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// setting PWM properties&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LEDC_FREQ        5000 &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Hz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LEDC_CHANNEL_0   0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LEDC_RESOLUTION  12   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 10bit (0~1023) 12bit(0~4095) 16bit(0~65535)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// led Pin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pin_ledR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_WRITE&lt;/span&gt;(V5)           &lt;span style=&#34;color:#75715e&#34;&gt;// widget virtual pin5 -&amp;gt; ESP32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value_V5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; param.&lt;span style=&#34;color:#a6e22e&#34;&gt;asInt&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ledcWrite&lt;/span&gt;(LEDC_CHANNEL_0, value_V5);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;V5 value: &amp;#34;&lt;/span&gt;); Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(value_V5);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Debug console&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Waiting for connections...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// configure LED PWM functionalitites&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ledcSetup&lt;/span&gt;(LEDC_CHANNEL_0, LEDC_FREQ, LEDC_RESOLUTION);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// attach the same channel to the GPIO to be controlled&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ledcAttachPin&lt;/span&gt;(pin_ledR, LEDC_CHANNEL_0);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// for Blynk &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;setDeviceName&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blynk-t&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(auth);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch-분석&#34;&gt;sketch 분석&lt;a class=&#34;anchor&#34; href=&#34;#sketch-%eb%b6%84%ec%84%9d&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;Button 위젯 사용을 위해 사용하였던 예제 sketch에 다음의 라인을 추가하여야 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 BLE, Blynk Button</title>
      <link>http://localhost:1313/posts/esp32-ble-blynk-button/</link>
      <pubDate>Mon, 21 Oct 2019 23:12:58 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-ble-blynk-button/</guid>
      <description>&lt;h3 id=&#34;blynk를-처음-사용하는-경우&#34;&gt;Blynk를 처음 사용하는 경우&lt;a class=&#34;anchor&#34; href=&#34;#blynk%eb%a5%bc-%ec%b2%98%ec%9d%8c-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;blynk-라이브러리-설치하기&#34;&gt;Blynk 라이브러리 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;docs.blynk.cc 접속 – Downloads – Blynk Library&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1&#34;&gt;https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Blynk_Release_v0.6.1.zip 다운로드&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;압축을 풀면 libraries, tools 폴더가 보임&lt;/li&gt;&#xA;&lt;li&gt;이 두 폴더를 아두이노IDE의 기본 스케치북 위치로 복사하여 붙여넣기 함&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기존의 libraries 폴더와 합쳐짐&lt;/li&gt;&#xA;&lt;li&gt;기본 스케치북 위치 확인 방법&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아두이노IDE – 파일 – 환경설정 – 설정탭 – 스케치북 위치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;스마트폰에-blynk-app-설치하기&#34;&gt;스마트폰에 Blynk App 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%eb%a7%88%ed%8a%b8%ed%8f%b0%ec%97%90-blynk-app-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아이폰 : 애플 앱스토어&lt;/li&gt;&#xA;&lt;li&gt;안드로이드 : 구글 플레이스토어&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;버튼-위젯을-이용한-led-onoff-하기&#34;&gt;버튼 위젯을 이용한 LED On/Off 하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%b2%84%ed%8a%bc-%ec%9c%84%ec%a0%af%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-led-onoff-%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/blynk-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, Bluetooth, Blynk</title>
      <link>http://localhost:1313/posts/arduino-bluetooth-blynk/</link>
      <pubDate>Sun, 20 Oct 2019 23:10:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-bluetooth-blynk/</guid>
      <description>&lt;h3 id=&#34;blynk-설정&#34;&gt;Blynk 설정&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;blynk-라이브러리-설치&#34;&gt;Blynk 라이브러리 설치&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%84%a4%ec%b9%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;docs.blynk.cc 접속 – Downloads – Blynk Library&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1&#34;&gt;https://github.com/blynkkk/blynk-library/releases/tag/v0.6.1&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Blynk_Release_v0.6.1.zip 다운로드&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;압축을 풀면 libraries, tools 폴더가 보임&lt;/li&gt;&#xA;&lt;li&gt;이 두 폴더를 아두이노IDE의 기본 스케치북 위치로 복사하여 붙여넣기 함&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기존의 libraries 폴더와 합쳐짐&lt;/li&gt;&#xA;&lt;li&gt;기본 스케치북 위치 확인 방법&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아두이노IDE – 파일 – 환경설정 – 설정탭 – 스케치북 위치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;스마트폰에-blynk-app-다운로드-하여-설치하기&#34;&gt;스마트폰에 Blynk App 다운로드 하여 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%eb%a7%88%ed%8a%b8%ed%8f%b0%ec%97%90-blynk-app-%eb%8b%a4%ec%9a%b4%eb%a1%9c%eb%93%9c-%ed%95%98%ec%97%ac-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아이폰 : 애플 앱스토어&lt;/li&gt;&#xA;&lt;li&gt;안드로이드 : 구글 플레이스토어&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;버튼-위젯을-이용한-led-onoff-하기&#34;&gt;버튼 위젯을 이용한 LED On/Off 하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%b2%84%ed%8a%bc-%ec%9c%84%ec%a0%af%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-led-onoff-%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;blynk-계정생성-및-auth-token-받기&#34;&gt;Blynk 계정생성 및 Auth Token 받기&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ea%b3%84%ec%a0%95%ec%83%9d%ec%84%b1-%eb%b0%8f-auth-token-%eb%b0%9b%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Blynk App 실행&lt;/li&gt;&#xA;&lt;li&gt;Create New Account : 주로 사용하는 e-mail을 사용하여 계정 생성&lt;/li&gt;&#xA;&lt;li&gt;Blynk에서 New Project 생성&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아이폰용 MLT-BT05의 경우&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Project Name 설정: BLE Test&lt;/li&gt;&#xA;&lt;li&gt;CHOOSE DEVICE: Arduino UNO&lt;/li&gt;&#xA;&lt;li&gt;CONNECTION TYPE: BLE&lt;/li&gt;&#xA;&lt;li&gt;설정 후 Create 버튼&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;안드로이드용 HC-06의 경우&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Project Name 설정: HC-06 Test&lt;/li&gt;&#xA;&lt;li&gt;CHOOSE DEVICE: Arduino UNO&lt;/li&gt;&#xA;&lt;li&gt;CONNECTION TYPE: Bluetooth&lt;/li&gt;&#xA;&lt;li&gt;설정 후 Create 버튼&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Auth Token 확인&#xA;&lt;ul&gt;&#xA;&lt;li&gt;가입시 지정한 이메일로 로그인하여 토큰 확인&lt;/li&gt;&#xA;&lt;li&gt;(매우 복잡한 형태의) 토큰을 복사하여 코딩시 사용할 것이므로, 컴퓨터로 확인!&lt;/li&gt;&#xA;&lt;li&gt;스마트폰으로 확인하는 것은 무의미함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;blynk-위젯-설정&#34;&gt;Blynk 위젯 설정&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ec%9c%84%ec%a0%af-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;아이폰용 MLT-BT05를 사용할 경우&#xA;&lt;ul&gt;&#xA;&lt;li&gt;생성된 프로젝트(BLE Test) 바탕화면으로 진입하면 Blynk App 상단의 초록색 메뉴바의 이름이 BLE Test로 바뀜&lt;/li&gt;&#xA;&lt;li&gt;여기서 ⊕버튼 터치한 후 Button위젯과 BLE위젯 추가&lt;/li&gt;&#xA;&lt;li&gt;추가된 BUTTON 위젯 선택 후 설정&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OUTPUT: Select pin: Digital D13 / MODE: SWITCH&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;안드로이드용 HC-06를 사용할 경우&#xA;&lt;ul&gt;&#xA;&lt;li&gt;생성된 프로젝트(HC-06 Test) 바탕화면으로 진입하면 Blynk App 상단의 초록색 메뉴바의 이름이 HC-06 Test로 바뀜&lt;/li&gt;&#xA;&lt;li&gt;여기서 ⊕버튼 터치한 후 Button위젯과 Bluetooth위젯 추가&lt;/li&gt;&#xA;&lt;li&gt;추가된 BUTTON 위젯 선택 후 설정&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OUTPUT: Select pin: Digital D13 / MODE: SWITCH&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;blynk-연결하기&#34;&gt;Blynk 연결하기&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ec%97%b0%ea%b2%b0%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;아두이노 스케치 예제 불러오기&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파일 – 예제 – Blynk – Boards_USB_Serial – Arduino_SoftwareSerial 선택&lt;/li&gt;&#xA;&lt;li&gt;예제의 char auth[] = &amp;ldquo;YourAuthToken&amp;rdquo;; 부분을 찾아서 쌍따옴표 사이의 YourAuthToken을 지운 뒤, 이메일에서 복사한 AuthToken 붙여넣기&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;아두이노 UNO에 스케치 업로드&lt;/li&gt;&#xA;&lt;li&gt;스마트폰의 블루투스 기능을 키고,&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아이폰용 MLT-BT05의 경우&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bluetooth 모듈 설정에서 설정한 모듈ID 디바이스를 연결(예를 들어 MLT-BT05-&lt;strong&gt;T&lt;/strong&gt;) (디폴트 연결PIN 123456)&lt;/li&gt;&#xA;&lt;li&gt;Blynk App에서 BLE버튼(블루투스 아이콘 모양) 터치 후 Connect BLE device 버튼을 누른 뒤,&lt;/li&gt;&#xA;&lt;li&gt;연결할 디바이스 MLT-BT05-T를 찾은 후 OK버튼 누름&lt;/li&gt;&#xA;&lt;li&gt;MLT-BT05-T connected 메시지가 나오면 연결 완료된 것임&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;안드로이드용 HC-06의 경우&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bluetooth 모듈 설정에서 설정한 모듈ID 디바이스를 연결(예를 들어 HC-06-&lt;strong&gt;T&lt;/strong&gt; 디바이스를 연결 (디폴트 연결PIN 1234)&lt;/li&gt;&#xA;&lt;li&gt;Blynk App에서 Bluetooth버튼(블루투스 아이콘 모양) 터치 후 Connect Bluetooth device 버튼을 누른 뒤,&lt;/li&gt;&#xA;&lt;li&gt;연결할 디바이스 HC-06-T를 찾은 후 OK버튼 누름&lt;/li&gt;&#xA;&lt;li&gt;HC-06-T connected 메시지가 나오면 연결 완료된 것임&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Blynk App 상단의 뒤로 돌아가기 버튼을 누른 뒤, App 오른쪽 상단의 ▷(플레이버튼)버튼을 누름&#xA;&lt;ul&gt;&#xA;&lt;li&gt;App상단에 빨간색 숫자1이 보이면 아직 연결이 되지 않았다는 것을 의미함&lt;/li&gt;&#xA;&lt;li&gt;잠시 기다리면 빨간색 숫자1이 사라지고, 이 상태가 작동 준비가 완료된 것을 의미함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;BUTTON 아이콘을 눌러 ON/OFF → 아두이노 Built-in LED ON/OFF&lt;/li&gt;&#xA;&lt;li&gt;Blynk App 오른쪽 상단의 □(정지버튼)을 누른 뒤, ⊕버튼 터치한 후 Text Input 위젯 추가&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;슬라이더-위젯을-이용한-led-밝기-제어&#34;&gt;슬라이더 위젯을 이용한 LED 밝기 제어&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%ac%eb%9d%bc%ec%9d%b4%eb%8d%94-%ec%9c%84%ec%a0%af%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-led-%eb%b0%9d%ea%b8%b0-%ec%a0%9c%ec%96%b4&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Built-in LED가 사용하는 13번핀은 PWM이 지원되지 않으므로, 11번핀을 사용한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 ADC</title>
      <link>http://localhost:1313/posts/esp32-adc/</link>
      <pubDate>Sun, 20 Oct 2019 01:59:54 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-adc/</guid>
      <description>&lt;h3 id=&#34;esp32-adc&#34;&gt;ESP32 ADC&lt;a class=&#34;anchor&#34; href=&#34;#esp32-adc&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ESP32는 18개의 12bit ADC 입력핀을 사용할 수 있다. (0~4095)&lt;/li&gt;&#xA;&lt;li&gt;아두이노의 경우 10bit를 사용한다. (0~1023)&lt;/li&gt;&#xA;&lt;li&gt;0V ~ 3.3V의 전압을 0~4095(0xFFF)까지의 디지털값으로 AD 변환한다.&lt;/li&gt;&#xA;&lt;li&gt;Arduino IDE 환경에서는 ESP32의 ADC 관련 레지스터를 조작하지 않고 analogRead() 함수를 사용하여 ESP32의 ADC 입력핀의 전압값을 가져올 수 있다. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;potentiometer-저항값-출력하기&#34;&gt;Potentiometer 저항값 출력하기&lt;a class=&#34;anchor&#34; href=&#34;#potentiometer-%ec%a0%80%ed%95%ad%ea%b0%92-%ec%b6%9c%eb%a0%a5%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-adc-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;가변저항의 저항을 A0(ADC1_CH0, GPIO36)로 읽고 전압값으로 변환한 뒤 시리얼 모니터로 출력한다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ESP32 ADC test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define analogPin A0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;115200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// read the input on analog pin GPIO36 (ADC1_CH0):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; sensorValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;analogRead&lt;/span&gt;(analogPin);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Convert the analog (12bit ADC :  0 - 4095) to a voltage (0 - 3.3V):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; voltage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (sensorValue &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4095.0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// print out the value you read:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(voltage);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;potentiometer로-led-밝기-조절하기&#34;&gt;Potentiometer로 LED 밝기 조절하기&lt;a class=&#34;anchor&#34; href=&#34;#potentiometer%eb%a1%9c-led-%eb%b0%9d%ea%b8%b0-%ec%a1%b0%ec%a0%88%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic-1&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic-1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-adc-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32 시작하기</title>
      <link>http://localhost:1313/posts/esp32-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sat, 19 Oct 2019 15:22:37 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp32-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;esp32-시작하기&#34;&gt;ESP32 시작하기&lt;a class=&#34;anchor&#34; href=&#34;#esp32-%ec%8b%9c%ec%9e%91%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;driver-설치-처음-설치하는-경우&#34;&gt;Driver 설치: 처음 설치하는 경우&lt;a class=&#34;anchor&#34; href=&#34;#driver-%ec%84%a4%ec%b9%98-%ec%b2%98%ec%9d%8c-%ec%84%a4%ec%b9%98%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;ESP32는 USB-to-Serial bridge로 Silicon Labs의 CP210x를 사용한다. &lt;a href=&#34;https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers&#34;&gt;제조사 홈페이지&lt;/a&gt;에서 자신이 사용하는 OS에 알맞는 CP210x 드라이버를 다운받아 설치한다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;arduino-ide-설치&#34;&gt;Arduino IDE 설치&lt;a class=&#34;anchor&#34; href=&#34;#arduino-ide-%ec%84%a4%ec%b9%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;Arduino IDE Download&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.arduino.cc/en/software&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;h4 id=&#34;arduino-ide-설정&#34;&gt;Arduino IDE 설정&lt;a class=&#34;anchor&#34; href=&#34;#arduino-ide-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Arduino IDE에서 &lt;strong&gt;파일&lt;/strong&gt;&amp;gt; &lt;strong&gt;환경설정&lt;/strong&gt;&amp;gt; &lt;strong&gt;설정&lt;/strong&gt; (&lt;strong&gt;File&lt;/strong&gt;&amp;gt; &lt;strong&gt;Preferences&lt;/strong&gt;&amp;gt; &lt;strong&gt;Settings&lt;/strong&gt;)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-ide-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;추가적인 보드 매니저 URLs에 아래 내용을 추가한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://dl.espressif.com/dl/package_esp32_index.json&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ESP8266에 대한 URLs를 사용하고 있었다면, comma를 사용하여 구분하면 두가지를 모두 사용할 수 있다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://dl.espressif.com/dl/package_esp32_index.json, http://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;툴&lt;/strong&gt;&amp;gt; &lt;strong&gt;보드&lt;/strong&gt;&amp;gt; &lt;strong&gt;보드 매니저&lt;/strong&gt;&amp;hellip; &lt;strong&gt;Tools&lt;/strong&gt;&amp;gt; &lt;strong&gt;Board&lt;/strong&gt;&amp;gt; &lt;strong&gt;Board Manager&lt;/strong&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-ide-02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp32-WROOM-32D DevkitC V4</title>
      <link>http://localhost:1313/posts/esp-wroom-32d-devkitc-v4/</link>
      <pubDate>Sat, 19 Oct 2019 01:58:29 +0900</pubDate>
      <guid>http://localhost:1313/posts/esp-wroom-32d-devkitc-v4/</guid>
      <description>&lt;h3 id=&#34;esp32-wroom-32d-devkitc-v4&#34;&gt;ESP32-WROOM-32D DevkitC V4&lt;a class=&#34;anchor&#34; href=&#34;#esp32-wroom-32d-devkitc-v4&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/esp32-pinout.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/attach/ESP32-Pinout.hwp&#34;&gt;핀아웃 다운로드&lt;/a&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;녹색핀: 사용에 적합한 핀&lt;/li&gt;&#xA;&lt;li&gt;노란색: 사용은 가능하나 부팅시 예기치 않은 동작이 발생할 수 있으므로 주의해야 하는 핀 (GPIO34~39는 Input only!)&lt;/li&gt;&#xA;&lt;li&gt;빨간색: 입력 또는 출력으로 사용할 수 없는 핀을 의미한다. (사용이 가능하더라도 사용하지 않음!)&lt;/li&gt;&#xA;&lt;li&gt;보라색: Wifi사용시 사용불가한 analog핀&lt;/li&gt;&#xA;&lt;li&gt;GPIO에서 Output이 가능한 모든 핀은 PWM으로 사용 가능&lt;/li&gt;&#xA;&lt;li&gt;ADC: 0&lt;del&gt;3.3V (0&lt;/del&gt;4095) (0&lt;del&gt;0.15V구간과 3.1&lt;/del&gt;3.3V의 값은 리니어하지 않으므로 구별이 거의 불가능함&lt;/li&gt;&#xA;&lt;li&gt;I2C: 아두이노IDE에서 사용하는 디폴트 핀&lt;/li&gt;&#xA;&lt;li&gt;RTC GPIO: Ultra Low Power(Deep Sleep)모드의 ESP32를 Wake up&lt;/li&gt;&#xA;&lt;li&gt;Strapping Pins: Bootloader나 Flashing시에 사용되며, 코드 업로드시 문제될 수 있음&lt;/li&gt;&#xA;&lt;li&gt;High at Boot, Low at Boot, BOOT, PWM at Boot: Boot시 신호가 나오며, Output으로 사용하면 reset이나 booting시에 문제가 될 수 있는 핀&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;peripheral&#34;&gt;Peripheral&lt;a class=&#34;anchor&#34; href=&#34;#peripheral&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;ADC와 DAC 기능은 특정 핀에 고정되어 있다. 하지만 UART, I2C, SPI, PWM등의 기능은 어느 핀에 사용할지 결정해서 코드에서 지정해 줘야 한다. 소프트웨어에서 핀의 속성을 정의해 줄 수 있지만, 각 핀들은 디폴트로 지정되어 있는 기능들이 있다. (Pinout 참고)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blynk에 센서값 출력하기</title>
      <link>http://localhost:1313/posts/blynk%EC%97%90-%EC%84%BC%EC%84%9C%EA%B0%92-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 18 Oct 2019 23:46:21 +0900</pubDate>
      <guid>http://localhost:1313/posts/blynk%EC%97%90-%EC%84%BC%EC%84%9C%EA%B0%92-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;http://help.blynk.cc/en/articles/512056-how-to-display-any-sensor-data-in-blynk-app&#34;&gt;http://help.blynk.cc/en/articles/512056-how-to-display-any-sensor-data-in-blynk-app&lt;/a&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;센서값을 Blynk로 출력하기 위해서는 Blynk가 연결되지 않은 상태에서 시리얼모니터에 센서값들을 출력할 수 있어야 한다. ​센서값을 출력하는 코드가 완성되면, 그 다음으로 Blynk에 센서값을 보내는 작업을 시작하는 것이 좋다.&lt;/p&gt;&#xA;&lt;p&gt;Blynk앱에 센서값을 표시하는 방법에는 크게 두가지 방법이 있으며, 진행중인 프로젝트에 따라 적절한 방법을 선택하면 된다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;pull&#34;&gt;PULL&lt;a class=&#34;anchor&#34; href=&#34;#pull&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;이 경우에 블링크는 앱이 열려있는 동안에만 Blynk에서 값을 받는다.&lt;/li&gt;&#xA;&lt;li&gt;앱에서 센서값을 표시하는 가장 간단한 방법이며, Blynk 앱의 Virtual Pins이 구동중일때 센서값을 가져온다. (Blynk를 닫거나 백그라운드에서 실행될때 데이타는 요청되지 않는다.) 타이머를 사용할 필요가 없으므로 코딩이 단순한 편이지만, 데이터가 서버에 저장되지 않으므로 히스토리 그래프를 볼 수 없다는 단점이 있다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;blynk-앱-설정&#34;&gt;Blynk 앱 설정&lt;a class=&#34;anchor&#34; href=&#34;#blynk-%ec%95%b1-%ec%84%a4%ec%a0%95&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;새 프로젝트를 만든다. (새로운 Auth Token값이 당신의 이메일에 전송된다)&lt;/li&gt;&#xA;&lt;li&gt;Value Display 위젯을 추가한다.&lt;/li&gt;&#xA;&lt;li&gt;위젯 세팅으로 가서 PIN 항목을 Virtual Pin V5로 설정한다.&lt;/li&gt;&#xA;&lt;li&gt;Reading Rate를 3초로 설정한다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Analog Pin에서 값을 (간단하게) 읽어들이는 경우에는 코드를 쓸 필요가 없다. 단지 예제파일을 오픈하여 하드웨어와 커넥션만 변경한다.&lt;/li&gt;&#xA;&lt;li&gt;e-mail을 체크하여 Auth Token을 확인하고, 스케치에 Auth Token을 수정입력한다.&lt;/li&gt;&#xA;&lt;li&gt;하드웨어에 코드를 업로드한다.&lt;/li&gt;&#xA;&lt;li&gt;Blynk에서 플레이버튼을 누른다.&lt;/li&gt;&#xA;&lt;li&gt;값이 표시되는 것을 볼 수 있다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BLYNK_READ&lt;/span&gt;(V5) { &lt;span style=&#34;color:#75715e&#34;&gt;//Blynk app has something on V5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  sensorData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;analogRead&lt;/span&gt;(A0); &lt;span style=&#34;color:#75715e&#34;&gt;//reading the sensor on A0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  Blynk.&lt;span style=&#34;color:#a6e22e&#34;&gt;virtualWrite&lt;/span&gt;(V5, sensorData); &lt;span style=&#34;color:#75715e&#34;&gt;//sending to Blynk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 코드는 매시간마다 Blynk가 &lt;code&gt;_READ&lt;/code&gt; 요청을 Virtual Pin V5에 보내도록 한다. A0핀에서 센서값을 읽은 후, Blynk에서 Virtual Pin V5에 되돌려 준다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bluetooth Serial Controller 앱</title>
      <link>http://localhost:1313/posts/bluetooth-%EC%8B%9C%EB%A6%AC%EC%96%BC-%ED%86%B5%EC%8B%A0/</link>
      <pubDate>Thu, 17 Oct 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/bluetooth-%EC%8B%9C%EB%A6%AC%EC%96%BC-%ED%86%B5%EC%8B%A0/</guid>
      <description>&lt;h3 id=&#34;bluetooth-시리얼-통신&#34;&gt;Bluetooth 시리얼 통신&lt;a class=&#34;anchor&#34; href=&#34;#bluetooth-%ec%8b%9c%eb%a6%ac%ec%96%bc-%ed%86%b5%ec%8b%a0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Bluetooth Serial Controller 앱을 통하여 아두이노와 스마트폰 간의 간단한 시리얼 통신을 해보겠습니다. 이를 위해서는 먼저 &lt;a href=&#34;2018/10/09/Arduino-Bluetooth-%ed%8e%98%ec%96%b4%eb%a7%81&#34;&gt;Bluetooth 페어링&lt;/a&gt; 문서를 참고하여 블루투스 모듈과 스마트폰을 페어링 해두어야 합니다. 페어링이 완료된 후 시리얼 통신을 진행합니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/BT-03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;SoftwareSerial.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;SoftwareSerial &lt;span style=&#34;color:#a6e22e&#34;&gt;BTSerial&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Connect HC-06 TX,RX &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;9600&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// set the data rate for the BT port&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   BTSerial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;9600&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (BTSerial.&lt;span style=&#34;color:#a6e22e&#34;&gt;available&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(BTSerial.&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;available&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     BTSerial.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;스마트폰에-bluetooth-serial-controller-앱-설치하기&#34;&gt;스마트폰에 Bluetooth Serial Controller 앱 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%eb%a7%88%ed%8a%b8%ed%8f%b0%ec%97%90-bluetooth-serial-controller-%ec%95%b1-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;이제 Google Playstore를 통해서 스마트폰에 Bluetooth Serial Controller 앱을 설치합니다. (iOS는 유사한 프로그램으로 설치)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/BTserialapp-01.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;​    비슷한 역할을 하는 수많은 앱들이 있는데, 여러 앱을 설치하고 사용해본 결과, 이 앱이 사용하기에 유연함을 갖고 있는 것 같더군요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>hexo icarus 테마로 Github 블로그 만들기</title>
      <link>http://localhost:1313/posts/hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Sun, 01 Sep 2019 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;필수-요소&#34;&gt;필수 요소&lt;a class=&#34;anchor&#34; href=&#34;#%ed%95%84%ec%88%98-%ec%9a%94%ec%86%8c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Hexo를 이용하여 블로그를 만들기에 앞서 아래 요소를 먼저 설치&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;git&lt;/li&gt;&#xA;&lt;li&gt;github.com에 repository 2개 생성하기&#xA;&lt;ul&gt;&#xA;&lt;li&gt;사용자ID-archives&lt;/li&gt;&#xA;&lt;li&gt;사용자ID.github.io&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;node.js&lt;/li&gt;&#xA;&lt;li&gt;npm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hexo.io&#34;&gt;hexo.io&lt;/a&gt; 사이트에는 이를 위한 설치 방법이 간단하게 요약이 되어 있지만, 이것만으로 자신이 원하는 형태의 블로그를 운영하기는 쉽지 않다. 이 글은 아무것도 설치 되어있지 않은 상태의 윈도우 사용 컴퓨터 사용자를 기준으로, d드라이브에 hexo 블로그를 생성하고 운영하는 방법을 차례대로 따라할 수 있도록 정리한 것이다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;git-설치&#34;&gt;Git 설치&lt;a class=&#34;anchor&#34; href=&#34;#git-%ec%84%a4%ec%b9%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;https://git-scm.com/download/win&lt;/a&gt; 에서 &lt;strong&gt;64-bit Git for Windows Setup&lt;/strong&gt; 다운로드&lt;/li&gt;&#xA;&lt;li&gt;설치 (설치 경로는 바꾸지 않음)&lt;/li&gt;&#xA;&lt;li&gt;exe 파일은 삭제&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;nodejs-설치&#34;&gt;nodejs 설치&lt;a class=&#34;anchor&#34; href=&#34;#nodejs-%ec%84%a4%ec%b9%98&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt; 에서 Windows Installer (.msi) 64-bit 다운로드&lt;/p&gt;</description>
    </item>
    <item>
      <title>Processing 기초</title>
      <link>http://localhost:1313/posts/processing-%EA%B8%B0%EC%B4%88/</link>
      <pubDate>Fri, 30 Nov 2018 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/processing-%EA%B8%B0%EC%B4%88/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;processing.org 에서 다운로드 (&lt;a href=&#34;https://processing.org/download/&#34;&gt;다운로드 페이지&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;arduino sketch는 C++기반이고, processing sketch는 java기반입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;processing-sketch-예제&#34;&gt;processing sketch 예제&lt;a class=&#34;anchor&#34; href=&#34;#processing-sketch-%ec%98%88%ec%a0%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;예제1 : 프로세싱 윈도우 크기, 배경색, 점, 선, 사각형, 원, 텍스트, 폰트, 사진 입력&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size(400,400);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  background(100);        &lt;span style=&#34;color:#75715e&#34;&gt;// background(0,255,0);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  strokeWeight(10);       &lt;span style=&#34;color:#75715e&#34;&gt;// dot/line width&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  stroke(0,255,0,100);    &lt;span style=&#34;color:#75715e&#34;&gt;// dot/line color and transparency, noStroke();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  point(200,200);         &lt;span style=&#34;color:#75715e&#34;&gt;// draw dot&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  line(0,0,200,150);      &lt;span style=&#34;color:#75715e&#34;&gt;// draw line&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ellipse(300,300,50,80); &lt;span style=&#34;color:#75715e&#34;&gt;// draw circle(x,y,xr,yr)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  fill(0);                &lt;span style=&#34;color:#75715e&#34;&gt;// rect/text color, nofill();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rect(100,250,150,300);  &lt;span style=&#34;color:#75715e&#34;&gt;// draw rectangle(x1,y1,x2,y2)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  textSize(20);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  PFont font &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; createFont(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NanumGothic&amp;#34;&lt;/span&gt;, 32);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  textFont(font);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  text(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;,200,100); &lt;span style=&#34;color:#75715e&#34;&gt;// text(string,x1,y2)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  PImage img &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; loadImage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sks.jpg&amp;#34;&lt;/span&gt;);  &lt;span style=&#34;color:#75715e&#34;&gt;// file in &amp;#39;/sketch_XXXXXXa/data/&amp;#39; folder&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  image(img,20,50);       &lt;span style=&#34;color:#75715e&#34;&gt;// image(img,x,y,width,height);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;예제2 : 마우스와 키보드 이벤트&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size(400,400);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mousePressed&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(mouseButton &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; LEFT) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;left button Pressed!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(mouseButton &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; RIGHT) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;right button Pressed!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(mouseButton &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; CENTER) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;center button Pressed!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keyPressed&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;key Pressed!&amp;#34;&lt;/span&gt;);   &lt;span style=&#34;color:#75715e&#34;&gt;// Key event&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(key);              &lt;span style=&#34;color:#75715e&#34;&gt;// Key String&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(keyCode);          &lt;span style=&#34;color:#75715e&#34;&gt;// ASCII Code&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseReleased&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button Released!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keyReleased&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;key Released!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseClicked&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button Clicked!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseMoved&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mouse Moved!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseDragged&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mouse Dragged!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseWheel&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mouse Wheel!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;예제3 : 마우스 움직이는 대로 원 그리기&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size(400,400);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;() {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseMoved&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ellipse(mouseX,mouseY,50,50);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;예제4 : 자유선 그리기&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  size(400,400);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;() {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mouseMoved&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  line(pmouseX,pmouseY,mouseX,mouseY);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;arduino와-processing을-통해-arduino-보드의-기본-led-blink-하기&#34;&gt;Arduino와 Processing을 통해 arduino 보드의 기본 led blink 하기&lt;a class=&#34;anchor&#34; href=&#34;#arduino%ec%99%80-processing%ec%9d%84-%ed%86%b5%ed%95%b4-arduino-%eb%b3%b4%eb%93%9c%ec%9d%98-%ea%b8%b0%eb%b3%b8-led-blink-%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;아두이노의 기본 LED를 사용할 것이므로 별도의 회로 연결없이 아두이노만 연결한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>드론의 비행 원리</title>
      <link>http://localhost:1313/posts/%EB%93%9C%EB%A1%A0%EC%9D%98-%EB%B9%84%ED%96%89-%EC%9B%90%EB%A6%AC/</link>
      <pubDate>Thu, 01 Nov 2018 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EB%93%9C%EB%A1%A0%EC%9D%98-%EB%B9%84%ED%96%89-%EC%9B%90%EB%A6%AC/</guid>
      <description>&lt;p&gt;드론의 비행 원리를 이해하기 이전에, 먼저 헬리콥터의 비행원리를 알아보는 것이 좋습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;헬리콥터의-비행-원리&#34;&gt;헬리콥터의 비행 원리&lt;a class=&#34;anchor&#34; href=&#34;#%ed%97%ac%eb%a6%ac%ec%bd%a5%ed%84%b0%ec%9d%98-%eb%b9%84%ed%96%89-%ec%9b%90%eb%a6%ac&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;헬리콥터의 비행과 관련된 4가지 힘은 그림과 같습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;양력: 로터의 회전에 의해 발생하는 힘으로, 이를 조절하여 상승, 하강, 호버링을 할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;추력: 로터 회전면의 기울기를 조절하여 전진하려는 힘인 추력을 발생시키고, 이를 조절하여 가속 또는 감속을 조절합니다.&lt;/li&gt;&#xA;&lt;li&gt;항력&lt;/li&gt;&#xA;&lt;li&gt;중력&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/Drone-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;헬리콥터의-토크와-반토크&#34;&gt;헬리콥터의 토크와 반토크&lt;a class=&#34;anchor&#34; href=&#34;#%ed%97%ac%eb%a6%ac%ec%bd%a5%ed%84%b0%ec%9d%98-%ed%86%a0%ed%81%ac%ec%99%80-%eb%b0%98%ed%86%a0%ed%81%ac&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;헬리콥터-블레이드의-회전&#34;&gt;헬리콥터 블레이드의 회전&lt;a class=&#34;anchor&#34; href=&#34;#%ed%97%ac%eb%a6%ac%ec%bd%a5%ed%84%b0-%eb%b8%94%eb%a0%88%ec%9d%b4%eb%93%9c%ec%9d%98-%ed%9a%8c%ec%a0%84&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;반시계&lt;/strong&gt; 방향으로 회전하는 블레이드가 있다고 가정합니다. 이 블레이드가 빠른 속도로 회전하면 양력이 발생하여 상승하게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1602 LCD, 조도, 초음파, 온습도</title>
      <link>http://localhost:1313/posts/1602-lcd-display/</link>
      <pubDate>Tue, 02 Oct 2018 14:18:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/1602-lcd-display/</guid>
      <description>&lt;p&gt;1602 LCD 중에서 (I2C 모듈이 추가되어 있지 않은) 가장 기본적인 형태, 즉 1602 LCD만 있는 상태에서의 출력방법을 알아보겠습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/1602-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic--백라이트-밝기-조절-추가&#34;&gt;schematic : 백라이트 밝기 조절 추가&lt;a class=&#34;anchor&#34; href=&#34;#schematic--%eb%b0%b1%eb%9d%bc%ec%9d%b4%ed%8a%b8-%eb%b0%9d%ea%b8%b0-%ec%a1%b0%ec%a0%88-%ec%b6%94%ea%b0%80&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;백라이트를 사용하지 않으면 너무 어두워서 글자가 잘 보이지 않는다. 적당한 밝기의 백라이트 사용을 위해 &lt;strong&gt;LCD 3번핀을 3.3㏀ 거쳐서 GND로 연결&lt;/strong&gt;(혹은 1㏀ 3개를 직렬연결) 하거나, 아래 회로와 같이 가변 저항을 사용하면 백라이트의 밝기를 적절히 조절할 수도 있다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/1602-02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;pin-map&#34;&gt;Pin Map&lt;a class=&#34;anchor&#34; href=&#34;#pin-map&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;LCD Pin&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Arduino Uno&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;VSS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;LCD GND&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;VDD&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;LCD 전원&lt;/td&gt;&#xA;          &lt;td&gt;+5V&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;VO&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;글자 대비값&lt;/td&gt;&#xA;          &lt;td&gt;(가변저항 추가/미사용시 3.3㏀ 거쳐서 GND)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;RS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;레지스터 설정&lt;/td&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;RW&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;읽기/쓰기모드 설정&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;E&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;쓰기모드 활성화&lt;/td&gt;&#xA;          &lt;td&gt;11&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;D0&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;데이터 핀&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;D1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;9&lt;/td&gt;&#xA;          &lt;td&gt;D2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;D3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;11&lt;/td&gt;&#xA;          &lt;td&gt;D4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;          &lt;td&gt;D5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;13&lt;/td&gt;&#xA;          &lt;td&gt;D6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;14&lt;/td&gt;&#xA;          &lt;td&gt;D7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;″&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;15&lt;/td&gt;&#xA;          &lt;td&gt;A&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;배경밝기 전압입력&lt;/td&gt;&#xA;          &lt;td&gt;(가변저항 추가)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;K&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;배경밝기 GND&lt;/td&gt;&#xA;          &lt;td&gt;(가변저항 추가)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;라이브러리-설치하기&#34;&gt;라이브러리 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;이 경우에는 Arduino IDE에 기본적으로 포함되어 있는 LiquidCrystal 라이브러리를 이용한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7 Segment (FND) 사용하기</title>
      <link>http://localhost:1313/posts/7-segment-fnd-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Oct 2018 11:21:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/7-segment-fnd-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;h2 id=&#34;fnd의-종류&#34;&gt;FND의 종류&lt;a class=&#34;anchor&#34; href=&#34;#fnd%ec%9d%98-%ec%a2%85%eb%a5%98&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;FND는 Anode형과 Cathode형으로 분류되며, 이 중 Anode형이 주로 사용되고 있는데요. Anode형은 중앙핀이 VCC이며, Cathode형은 GND입니다. 우리가 사용하는 것은 5611BH로 Common Anode형입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;7 Segment (FND)는 숫자나 문자를 표현하는 7개의 LED와 소수점을 표현하는 1개의 LED가 포함되어 있는 부품을 의미합니다. FND는 16X2 LCD와 비교할 때 표현할 수 있는 문자의 개수가 제한되고, 각 문자의 표현을 위하여 총 8개의 LED를 하나씩 조절해주어야 하는 등 사용이 복잡하다는 단점이 있습니다. 그렇지만, 전력소모가 적고 크기가 큰 Segment를 선택하면 비교적 큰 문자도 표현할 수 있다는 장점이 있어 다양한 용도로 사용되고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 스텝모터</title>
      <link>http://localhost:1313/posts/arduino-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0/</link>
      <pubDate>Sat, 08 Sep 2018 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EC%8A%A4%ED%85%9D%EB%AA%A8%ED%84%B0/</guid>
      <description>&lt;h3 id=&#34;스텝모터-step-motor&#34;&gt;스텝모터 (Step Motor)&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%85%9d%eb%aa%a8%ed%84%b0-step-motor&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;펄스 모양의 전압에 의해 일정 각도(스텝 수) 만큼 회전하는 모터.&lt;/li&gt;&#xA;&lt;li&gt;회전 각도는 입력 펄스 신호의 수에 비례하고, 회전 속도는 입력 펄스 신호의 주파수에 비례한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;스텝모터-28byj-48&#34;&gt;스텝모터 28BYJ-48&lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%85%9d%eb%aa%a8%ed%84%b0-28byj-48&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;정격전압: 5VDC&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;기어비: 1/64&#xA;$$&#xA;\frac {32}{9} \times \frac {22}{11} \times \frac {26}{9} \times \frac {31}{10} = 63.68395 \fallingdotseq 64&#xA;$$&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-01.png&#34; width=&#34;80%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;스트라이드 각도&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;스펙상 5.625º / 64&lt;/strong&gt; = 0.087890625&#xA;&lt;ul&gt;&#xA;&lt;li&gt;그러므로,  360º / 0.087890625 = 4096 스텝&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;실제로는 11.25º / 64&lt;/strong&gt; = 0.17578125&#xA;&lt;ul&gt;&#xA;&lt;li&gt;그러므로,  360º / 0.17578125 = &lt;strong&gt;2048 스텝으로 1회전&lt;/strong&gt; (이 값이 중요함!)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Frequency: 100Hz&lt;/li&gt;&#xA;&lt;li&gt;토크: 34.3mN,m&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;모터드라이브-uln2003&#34;&gt;모터드라이브 ULN2003&lt;a class=&#34;anchor&#34; href=&#34;#%eb%aa%a8%ed%84%b0%eb%93%9c%eb%9d%bc%ec%9d%b4%eb%b8%8c-uln2003&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/s/Step-Motor-03.png&#34; width=&#34;67%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/s/UNO-step-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 서보모터</title>
      <link>http://localhost:1313/posts/arduino-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0/</link>
      <pubDate>Sat, 08 Sep 2018 17:57:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0/</guid>
      <description>&lt;h3 id=&#34;서보모터-sg-90&#34;&gt;서보모터 SG-90&lt;a class=&#34;anchor&#34; href=&#34;#%ec%84%9c%eb%b3%b4%eb%aa%a8%ed%84%b0-sg-90&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/servo-01.png&#34; width=&#34;67%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;모터드라이버, 회전센서, 모터, 제어회로가 내장된 기어 박스를 포함하고 있는 형태의 모터로, 스텝모터보다 힘이 강함&lt;/li&gt;&#xA;&lt;li&gt;보통 선이 3가닥이며, 회전수와 각도 등의 움직임 제어가 가능&lt;/li&gt;&#xA;&lt;li&gt;아두이노에서 많이 다루는 SG90 제품의 경우 0~180˚ 제어가 가능&lt;/li&gt;&#xA;&lt;li&gt;아두이노UNO의 USB 전류량이 500mA 정도가 한계이므로 별도의 전원을 사용하지 않으면 1~2개의 서보모터만 사용 가능&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;라이브러리-추가하기&#34;&gt;라이브러리 추가하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;서보모터를 사용하기 위한 Servo 라이브러리는 아두이노 IDE에 기본으로 포함되어 있다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;스케치&amp;gt; 라이브러리 포함하기&amp;gt; Servo 를 선택하면,&lt;/li&gt;&#xA;&lt;li&gt;#include &amp;lt;servo.h&amp;gt; 라이브러리가 스케치에 추가 된다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/servo-02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 피에조 부저</title>
      <link>http://localhost:1313/posts/arduino-piezo-buzzer/</link>
      <pubDate>Fri, 07 Sep 2018 17:23:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-piezo-buzzer/</guid>
      <description>&lt;h3 id=&#34;buzzer의-종류&#34;&gt;Buzzer의 종류&lt;a class=&#34;anchor&#34; href=&#34;#buzzer%ec%9d%98-%ec%a2%85%eb%a5%98&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Active Buzzer (능동형 부저)&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Passive Buzzer (수동형 부저)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;有源蜂鸣器 (KY-012)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;无源蜂鸣器 (KY-006)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;회로가 내장되어 있어, 전원만 인가하면 소리가 나므로 프로그램 제어가 편리함&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;내부에 진동원이 없어, 스케치에 주파수를 지정하여야만 소리를 냄&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;원하는 주파수의 소리를 낼 수 없음&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;원하는 주파수의 소리를 만들어낼 수 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;패시브 부저에 비해 비쌈 (모듈 1개 0.9위안)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;액티브 부저에 비해 저렴 (모듈 1개 0.8위안)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer-active.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer-passive.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer-active3.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer-active1.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer-active2.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer-passive2.png&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;모듈로 판매하는 제품의 경우 겉모양으로는 구별이 어렵다. Active Buzzer의 경우 초기 판매시 스티커를 붙여서 판매하지만, 스티커가 떨어져 나간 상태라면 Passive Buzzer와 구별하기 어렵다. 또한 반드시 스티커가 붙은 형태로 판매하는 것도 아니다.&lt;/li&gt;&#xA;&lt;li&gt;Active Buzzer의 경우 스티커로 사용전압을 표시하기도 한다. 빨간색은 3V, 파란색은 5V, 보라색은 12V용이다.&lt;/li&gt;&#xA;&lt;li&gt;Active Buzzer 모듈의 경우 低电平触发(혹은 Low Level) / 高电平触发(혹은 High Level) 2가지 형태로 표기가 되어 있다. &lt;strong&gt;低电平触发은 DigitalWrite에서 HIGH&lt;/strong&gt;일 때 소리가 나며, &lt;strong&gt;高电平触发은 LOW&lt;/strong&gt;일 때 소리가 난다.&lt;/li&gt;&#xA;&lt;li&gt;모듈 형태가 아닌 단일 부품의 형태라면 연결 핀이 나와 있는 아랫면을 보면 구별할 수 있다. 일반적으로 Active Buzzer는 검은색 실리콘으로 밀폐되어 있으며, Passive Buzzer는 핀의 접합부위가 그대로 노출되어 있다.&lt;/li&gt;&#xA;&lt;li&gt;Active Buzzer와 Passive Buzzer를 구별하는 가장 좋은 방법은 사용전압에 해당하는 전압(낮은 전압의 건전지도 가능)의 건전지를 연결시켜보는 것이다. 소리가 나면 Active, 나지 않으면 Passive라고 생각하면 된다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;active-buzzer&#34;&gt;Active Buzzer&lt;a class=&#34;anchor&#34; href=&#34;#active-buzzer&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/Buzzer01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 키패드 사용하기</title>
      <link>http://localhost:1313/posts/arduino-%ED%82%A4%ED%8C%A8%EB%93%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 07 Sep 2018 13:23:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%ED%82%A4%ED%8C%A8%EB%93%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;44-매트릭스-키보드&#34;&gt;4×4 매트릭스 키보드&lt;a class=&#34;anchor&#34; href=&#34;#44-%eb%a7%a4%ed%8a%b8%eb%a6%ad%ec%8a%a4-%ed%82%a4%eb%b3%b4%eb%93%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;키패드 입력값을 시리얼 모니터로 출력해보자.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/keypad-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pin-map&#34;&gt;Pin Map&lt;a class=&#34;anchor&#34; href=&#34;#pin-map&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Arduino&lt;/th&gt;&#xA;          &lt;th&gt;Keypad&lt;/th&gt;&#xA;          &lt;th&gt;일부 Keypad의 경우&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;9&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;&lt;p&gt;주의 : Keypad 제조회사에 따라 통상적인 배선 순서와는 반대로 해야하는 경우도 있다. 키패드의 단자에 단자번호가 적혀있지 않으므로, 일단 통상적인 배선순서에 따라 연결해보고 시리얼 모니터를 통해 출력되는 값을 보고 확인해야 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, IR 리모컨</title>
      <link>http://localhost:1313/posts/arduino-ir-%EB%A6%AC%EB%AA%A8%EC%BB%A8/</link>
      <pubDate>Thu, 06 Sep 2018 11:12:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-ir-%EB%A6%AC%EB%AA%A8%EC%BB%A8/</guid>
      <description>&lt;p&gt;생활속에서 가장 밀접하게 쓰이는 IR(Infra Red, 적외선) 리모컨의 사용에 대해서 알아본다. 리모컨 작동을 위해서는 기본적으로 IR 신호를 내보내는 리모컨본체와 이 본체에서 내보내는 신호를 받아들이는 IR 리시버가 필요하다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;a class=&#34;anchor&#34; href=&#34;#%ea%b8%b0%eb%b3%b8-%ec%82%ac%ec%9a%a9%eb%b2%95&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/remote.png&#34; width=&#34;80%&#34;&gt;&#xA;&lt;/figure&gt;&#xA;       &lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/remote-controller.png&#34;&gt;&#xA;       &lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;위 그림에서 IR 리시버에 있는 핀은, IR모듈이 아닌 단일 부품형태의 리시버 일때 핀의 순서이다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h5 id=&#34;ir-리시버-모듈을-사용하는-경우&#34;&gt;IR 리시버 모듈을 사용하는 경우&lt;a class=&#34;anchor&#34; href=&#34;#ir-%eb%a6%ac%ec%8b%9c%eb%b2%84-%eb%aa%a8%eb%93%88%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;p&gt;아두이노 학습용으로 판매하는 IR 리시버는 브레드보드에 바로 붙일 수 있도록 조그만 PCB가 달린 모듈의 형태로 판매되는 경우가 많으며, 이 경우에는 PCB보드에 써있는 글씨를 보고 각 핀에 맞게 아두이노에 연결해야한다. 문제는 PCB에 어느 핀인지를 나타내는 글자가 잘 안보인다는 것!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 1602 LCD (I2C)</title>
      <link>http://localhost:1313/posts/arduino-1602-lcd-i2c/</link>
      <pubDate>Mon, 03 Sep 2018 00:42:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-1602-lcd-i2c/</guid>
      <description>&lt;h3 id=&#34;1602-lcd-i2c&#34;&gt;1602 LCD (I2C)&lt;a class=&#34;anchor&#34; href=&#34;#1602-lcd-i2c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/1602lcd.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;1602 LCD&lt;/th&gt;&#xA;          &lt;th&gt;SDA&lt;/th&gt;&#xA;          &lt;th&gt;SCL&lt;/th&gt;&#xA;          &lt;th&gt;VCC&lt;/th&gt;&#xA;          &lt;th&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Arduino&lt;/td&gt;&#xA;          &lt;td&gt;A4&lt;/td&gt;&#xA;          &lt;td&gt;A5&lt;/td&gt;&#xA;          &lt;td&gt;5V&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;라이브러리-설치하기&#34;&gt;라이브러리 설치하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;스케치&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 포함하기&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 관리&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Wire : 기본 내장 라이브러리&lt;/li&gt;&#xA;&lt;li&gt;LiquidCrystal I2C (by Frank de Brabander) 검색하여 설치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// I2C 1602 LCD (연결핀을 바꿀 수 없음)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// VCC-5V / GND-GND / SDA-A4 / SCL-A5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;Wire.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;LiquidCrystal_I2C.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// i2c address 는 칩에 따라 0x20~0x27 혹은 0x3F값을 가짐&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;LiquidCrystal_I2C &lt;span style=&#34;color:#a6e22e&#34;&gt;lcd&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0x27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lcd.&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;();               &lt;span style=&#34;color:#75715e&#34;&gt;// lcd 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  lcd.&lt;span style=&#34;color:#a6e22e&#34;&gt;backlight&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lcd.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;I Love Steam!!&amp;#34;&lt;/span&gt;);   &lt;span style=&#34;color:#75715e&#34;&gt;// LCD창에 메시지 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 문자열의 길이 13개를 왼쪽으로 스크롤&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pCount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; pCount &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;; pCount&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lcd.&lt;span style=&#34;color:#a6e22e&#34;&gt;scrollDisplayLeft&lt;/span&gt;();         &lt;span style=&#34;color:#75715e&#34;&gt;// 왼쪽으로 스크롤&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 문자열 길이 13열 + 기본 16열 = 29개 위치를 오른쪽으로 스크롤&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pCount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; pCount &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;; pCount&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) { &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lcd.&lt;span style=&#34;color:#a6e22e&#34;&gt;scrollDisplayRight&lt;/span&gt;();       &lt;span style=&#34;color:#75715e&#34;&gt;// 오른쪽으로 스크롤&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 왼쪽으로 16개 위치 스크롤하여 처음 위치로 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pCount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; pCount &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;; pCount&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lcd.&lt;span style=&#34;color:#a6e22e&#34;&gt;scrollDisplayLeft&lt;/span&gt;();         &lt;span style=&#34;color:#75715e&#34;&gt;// 왼쪽으로 스크롤&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;주의사항&#34;&gt;주의사항&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I2C 모듈에 점퍼선을 뺏다가 다시 끼우는 경우, 정상적인 상황에서도 LCD가 작동하지 않는 경우가 있음 (주로 첫번째라인에 ■■■■■■■■■■■■■■■■ 형태로 출력되는 오류가 발생됨)&lt;/li&gt;&#xA;&lt;li&gt;이런 경우에는 배선을 모두 완료한 상태에서 스케치 업로드를 다시 하면 대부분 해결됨&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;여러-가지-문자열-출력해보기&#34;&gt;여러 가지 문자열 출력해보기&lt;a class=&#34;anchor&#34; href=&#34;#%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%eb%ac%b8%ec%9e%90%ec%97%b4-%ec%b6%9c%eb%a0%a5%ed%95%b4%eb%b3%b4%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;첫 번째 행에 I Love Steam!!&lt;/li&gt;&#xA;&lt;li&gt;두 번째 행에 본인의 영문이름을 써서 스크롤 해보기&lt;/li&gt;&#xA;&lt;li&gt;두 번째 행에 출력하는 방법 : lcd.setCursor(0,1);&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;1602-lcd에-ds18b20-온도센서-값-출력하기&#34;&gt;1602 LCD에 DS18b20 온도센서 값 출력하기&lt;a class=&#34;anchor&#34; href=&#34;#1602-lcd%ec%97%90-ds18b20-%ec%98%a8%eb%8f%84%ec%84%bc%ec%84%9c-%ea%b0%92-%ec%b6%9c%eb%a0%a5%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;schematic-1&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic-1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/1602lcd-ds18b20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, TM1637 모듈 사용하기</title>
      <link>http://localhost:1313/posts/arduino-tm1637-%EB%AA%A8%EB%93%88-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 02 Sep 2018 20:04:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-tm1637-%EB%AA%A8%EB%93%88-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;h3 id=&#34;tm1637&#34;&gt;TM1637&lt;a class=&#34;anchor&#34; href=&#34;#tm1637&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/tm1637-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;TM1637&lt;/th&gt;&#xA;          &lt;th&gt;CLK&lt;/th&gt;&#xA;          &lt;th&gt;DIO&lt;/th&gt;&#xA;          &lt;th&gt;VCC&lt;/th&gt;&#xA;          &lt;th&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Arduino&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;5V&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;라이브러리-추가하기&#34;&gt;라이브러리 추가하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;파일&amp;gt; 새파일&amp;gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;스케치&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 포함하기&lt;/strong&gt;&amp;gt; &lt;strong&gt;라이브러리 관리&lt;/strong&gt;&amp;gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/tm1637-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;라이브러리 매니저 창이 뜨면, 검색란에 “tm1637&amp;quot;를 적어 넣음. tm1637관련 라이브러리가 5~6개정도 검색됨. TM1637 by Avishay Orpaz 라이브러리를 선택하여 설치&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/tm1637-03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;tm1637-숫자-표기-방법&#34;&gt;TM1637 숫자 표기 방법&lt;a class=&#34;anchor&#34; href=&#34;#tm1637-%ec%88%ab%ec%9e%90-%ed%91%9c%ea%b8%b0-%eb%b0%a9%eb%b2%95&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;pre&gt;&lt;code&gt;for TM1637 by Avishay Orpaz library &#xA;   *  A  *&#xA;   F     B&#xA;   *  G  *&#xA;   E     C&#xA;   *  D  *  DP&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&amp;ldquo;8.8.8.8.&amp;rdquo; → &amp;quot; &amp;quot; → &amp;ldquo;0123&amp;rdquo; → &amp;ldquo;dOnE&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 온도 및 습도 측정 (DHT22)</title>
      <link>http://localhost:1313/posts/arduino-%EC%98%A8%EC%8A%B5%EB%8F%84%EC%B8%A1%EC%A0%95-dht22/</link>
      <pubDate>Sun, 02 Sep 2018 01:41:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EC%98%A8%EC%8A%B5%EB%8F%84%EC%B8%A1%EC%A0%95-dht22/</guid>
      <description>&lt;h3 id=&#34;온습도-센서-dht22&#34;&gt;온습도 센서 DHT22&lt;a class=&#34;anchor&#34; href=&#34;#%ec%98%a8%ec%8a%b5%eb%8f%84-%ec%84%bc%ec%84%9c-dht22&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;DHT22 센서를 이용하여 온도와 습도를 측정한다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;센서&lt;/th&gt;&#xA;          &lt;th&gt;DHT11&lt;/th&gt;&#xA;          &lt;th&gt;DHT22 (AM2302)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;사진&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;http://localhost:1313/image/dht22-02.png&#34; alt=&#34;DHT11&#34; /&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;figure class=&#34;center&#34;&gt;&lt;img src=&#34;http://localhost:1313/image/dht22-01.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;온도&lt;/td&gt;&#xA;          &lt;td&gt;0 ~ 50℃ (오차범위 ±2℃)&lt;/td&gt;&#xA;          &lt;td&gt;-40 ~ 100℃ (오차범위 ±0.5℃) (해상도 0.1℃)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;습도&lt;/td&gt;&#xA;          &lt;td&gt;20 ~ 90% (오차범위 ±5%)&lt;/td&gt;&#xA;          &lt;td&gt;0 ~ 100% (오차범위 ±2~5%) (해상도 0.1%)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pinout&#34;&gt;Pinout&lt;a class=&#34;anchor&#34; href=&#34;#pinout&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;DHT22&lt;/th&gt;&#xA;          &lt;th&gt;DAT&lt;/th&gt;&#xA;          &lt;th&gt;VCC&lt;/th&gt;&#xA;          &lt;th&gt;GND&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Arduino&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;5V&lt;/td&gt;&#xA;          &lt;td&gt;GND&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/dht22-05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;라이브러리-준비하기&#34;&gt;라이브러리 준비하기&lt;a class=&#34;anchor&#34; href=&#34;#%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ec%a4%80%eb%b9%84%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;h5 id=&#34;case1-위-사진과-같은-형태의-dht22-모듈을-사용하는-경우&#34;&gt;Case1: 위 사진과 같은 형태의 DHT22 모듈을 사용하는 경우&lt;a class=&#34;anchor&#34; href=&#34;#case1-%ec%9c%84-%ec%82%ac%ec%a7%84%ea%b3%bc-%ea%b0%99%ec%9d%80-%ed%98%95%ed%83%9c%ec%9d%98-dht22-%eb%aa%a8%eb%93%88%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34;&gt;#&lt;/a&gt;&lt;/h5&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;라이브러리 매니저검색창에 검색어로 &amp;lsquo;AM2302&amp;rsquo;를 입력&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino, 온도측정(DS18b20)</title>
      <link>http://localhost:1313/posts/arduino-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-ds18b20/</link>
      <pubDate>Sun, 02 Sep 2018 00:41:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EC%98%A8%EB%8F%84%EC%B8%A1%EC%A0%95-ds18b20/</guid>
      <description>&lt;h3 id=&#34;ds18b20-온도센서&#34;&gt;DS18b20 온도센서&lt;a class=&#34;anchor&#34; href=&#34;#ds18b20-%ec%98%a8%eb%8f%84%ec%84%bc%ec%84%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;DS18b20 온도 센서를 이용하여 온도를 측정한다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;one-wire 버스 통신&lt;/li&gt;&#xA;&lt;li&gt;공급전압: 3.0V ~ 5.5V&lt;/li&gt;&#xA;&lt;li&gt;작동온도: -55ºC ~ +125ºC&lt;/li&gt;&#xA;&lt;li&gt;오차: +/-0.5 ºC (-10ºC ~ 85ºC 범위에서)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;pinout&#34;&gt;Pinout&lt;a class=&#34;anchor&#34; href=&#34;#pinout&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/DS18b20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;DS18b20 센서는 두 가지 연결방법을 제공하는데, 하나는 VCC를 5V에 연결하는 Normal Mode이고 다른 하나는 VCC를 GND에 연결하는 Parasite Mode이다. 두가지 방법 모두 지원되지만 (경험상) Normal를 추천하며 (원인은 잘 모르겠지만) Parasite Mode에서는 온도센서가 작동이 되지 않는 경우도 가끔 있었다. 회로 구성을 위해 &lt;strong&gt;4.7㏀ 저항 1개&lt;/strong&gt;가 필요하며 Normal Mode 구성을 위해 다음 그림과 같이 연결한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino 스위치, 풀다운저항, 풀업저항</title>
      <link>http://localhost:1313/posts/arduino-%EC%8A%A4%EC%9C%84%EC%B9%98-%ED%92%80%EB%8B%A4%EC%9A%B4-%ED%92%80%EC%97%85%EC%A0%80%ED%95%AD/</link>
      <pubDate>Sat, 01 Sep 2018 16:01:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EC%8A%A4%EC%9C%84%EC%B9%98-%ED%92%80%EB%8B%A4%EC%9A%B4-%ED%92%80%EC%97%85%EC%A0%80%ED%95%AD/</guid>
      <description>&lt;h3 id=&#34;tact-switch&#34;&gt;Tact Switch&lt;a class=&#34;anchor&#34; href=&#34;#tact-switch&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/tact_switch.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;pull-down&#34;&gt;Pull-down&lt;a class=&#34;anchor&#34; href=&#34;#pull-down&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;동작&lt;/th&gt;&#xA;          &lt;th&gt;Arduino&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;스위치를 누르면&lt;/td&gt;&#xA;          &lt;td&gt;ON&lt;/td&gt;&#xA;          &lt;td&gt;HIGH&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;스위치에서 손을 떼면&lt;/td&gt;&#xA;          &lt;td&gt;OFF&lt;/td&gt;&#xA;          &lt;td&gt;LOW&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;저항(10k 이상)을 GND에 연결&lt;/strong&gt;한 경우: Pull-down 회로&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/switch01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;sketch&#34;&gt;sketch&lt;a class=&#34;anchor&#34; href=&#34;#sketch&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; switch_R &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(switch_R, INPUT);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;begin&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;9600&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(switch_R);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH) {                  &lt;span style=&#34;color:#75715e&#34;&gt;// 스위치를 누르면&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {                           &lt;span style=&#34;color:#75715e&#34;&gt;// 스위치에서 손을 떼면&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Serial.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;&lt;h3 id=&#34;pull-up&#34;&gt;Pull-up&lt;a class=&#34;anchor&#34; href=&#34;#pull-up&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;동작&lt;/th&gt;&#xA;          &lt;th&gt;Arduino&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;스위치를 누르면&lt;/td&gt;&#xA;          &lt;td&gt;OFF&lt;/td&gt;&#xA;          &lt;td&gt;LOW&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;스위치에서 손을 떼면&lt;/td&gt;&#xA;          &lt;td&gt;ON&lt;/td&gt;&#xA;          &lt;td&gt;HIGH&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;schematic-1&#34;&gt;schematic&lt;a class=&#34;anchor&#34; href=&#34;#schematic-1&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;저항(10k 이상)을 VCC(5V)에 연결&lt;/strong&gt;한 경우: Pull-up 회로&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino 시작하기, RGB LED, PWM</title>
      <link>http://localhost:1313/posts/arduino-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sat, 01 Sep 2018 16:00:00 +0900</pubDate>
      <guid>http://localhost:1313/posts/arduino-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;h2 id=&#34;arduino&#34;&gt;Arduino&lt;a class=&#34;anchor&#34; href=&#34;#arduino&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/arduino-01uno.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;pinout&#34;&gt;Pinout&lt;a class=&#34;anchor&#34; href=&#34;#pinout&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;digital--analog&#34;&gt;Digital &amp;amp; Analog&lt;a class=&#34;anchor&#34; href=&#34;#digital--analog&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/arduino-02unopin.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Digital&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0~13번 핀&lt;/li&gt;&#xA;&lt;li&gt;PWM:3,5,6,9,10,11번 핀 (&lt;strong&gt;8bit&lt;/strong&gt;로 &lt;strong&gt;0~255&lt;/strong&gt;의 범위를 사용)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Analog Input:  ADC &lt;strong&gt;10bit&lt;/strong&gt;로 &lt;strong&gt;0~1023&lt;/strong&gt;의 범위를 사용&lt;/li&gt;&#xA;&lt;li&gt;스케치 업로드 중에는 0번핀(RX), 1번핀(TX)을 사용할 수 없다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;전원부-v_in&#34;&gt;전원부 V_in&lt;a class=&#34;anchor&#34; href=&#34;#%ec%a0%84%ec%9b%90%eb%b6%80-v_in&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;input으로 사용&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기본적으로 파워잭을 사용하는 것과 같음&lt;/li&gt;&#xA;&lt;li&gt;아두이노에 전원을 공급 (6.6V~12V 범위에서 가능)&lt;/li&gt;&#xA;&lt;li&gt;외부전원이 Vin을 통해 공급되면, USB포트에서 나오는 전원공급은 자동으로 차단됨&lt;/li&gt;&#xA;&lt;li&gt;최소 전압은 6.6V이나, 다이오드에서의 전압 강하로 인해, 최소 7.2V가 공급되어야 USB포트에서의 전원이 차단되고, 외부전원으로 아두이노가 전원을 공급받기 시작함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;output으로 사용&lt;/p&gt;</description>
    </item>
    <item>
      <title>엑셀, 다중조건을 사용하여 랭킹 구하기</title>
      <link>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EB%8B%A4%EC%A4%91%EC%A1%B0%EA%B1%B4%EB%9E%AD%ED%82%B9/</link>
      <pubDate>Fri, 01 Jun 2018 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EB%8B%A4%EC%A4%91%EC%A1%B0%EA%B1%B4%EB%9E%AD%ED%82%B9/</guid>
      <description>&lt;p&gt;1가지 조건으로 랭킹을 구하는 경우, rank.eq() 함수를 사용하면 되지만, 2가지 이상의 조건이 부합하는 경우에는 rank.eq() 함수로는 구할 수 없습니다. 이처럼 다중 조건이 주어졌을 때 랭킹을 구하는 방법입니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;예시&lt;a class=&#34;anchor&#34; href=&#34;#%ec%98%88%ec%8b%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/rank.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;위 예시에서 &amp;lsquo;자격&amp;rsquo;과 &amp;lsquo;계열&amp;rsquo; 조건에 따라 각각의 랭킹을 구하는 함수는&lt;/p&gt;&#xA;&lt;p&gt;3년인문 랭킹의 경우&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;IF&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;AND&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;E3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;L&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;F3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;L&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),&lt;span style=&#34;color:#a6e22e&#34;&gt;SUMPRODUCT&lt;/span&gt;((&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;E&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;E&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;E3)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;F&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;F&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;F3)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;J&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;J&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;J3))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;입니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;L1, L2에 &amp;lsquo;3&amp;rsquo;, &amp;lsquo;인문&amp;rsquo;이라는 조건을 넣고&lt;/li&gt;&#xA;&lt;li&gt;AND($E3=L$1,$F3=L$2) 부분을 통해 E, F열의 값이 각각 &amp;lsquo;3&amp;rsquo;과 &amp;lsquo;인문&amp;rsquo;인 경우에만&lt;/li&gt;&#xA;&lt;li&gt;J3:J27 까지의 국어영어 합계점수에 따라 랭킹을 부여합니다.&lt;/li&gt;&#xA;&lt;li&gt;동석차인경우 높은 순위의 값을 부여합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>연수기 DIY</title>
      <link>http://localhost:1313/posts/%EC%97%B0%EC%88%98%EA%B8%B0-diy/</link>
      <pubDate>Wed, 31 Jan 2018 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EC%97%B0%EC%88%98%EA%B8%B0-diy/</guid>
      <description>&lt;h3 id=&#34;연수기의-원리&#34;&gt;연수기의 원리&lt;a class=&#34;anchor&#34; href=&#34;#%ec%97%b0%ec%88%98%ea%b8%b0%ec%9d%98-%ec%9b%90%eb%a6%ac&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;연수기는 Ca2+, Mg2+, Fe2+ 같은 양이온을 포함한 &lt;strong&gt;센물&lt;/strong&gt;을, (이러한 양이온을 제거한 형태의) &lt;strong&gt;단물&lt;/strong&gt;로 만들어주는 장치입니다. 이렇게 만들어 주는 방법은 크게 두가지인데, 하나는 전기적인 방법이고, 다른 하나는 센물에 포함되어 있는 양이온을 다른 형태의 양이온으로 치환시켜주는 방법입니다. 전자는 전기연결이 필요하므로, 보통 집에서 사용하는 연수기는 후자의 방법을 사용하지요.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;이를 위해 기본적으로 &lt;strong&gt;양이온교환수지&lt;/strong&gt;를 사용합니다. 양이온 교환수지는 보통 날치알 같은 작은 알갱이 형태로 되어 있는데, 이 알갱이에 수많은 Na+이 붙어 있다고 생각하면 되요. 이 상태에서 센물(수돗물)이 들어오면, 센물의 Ca2+, Mg2+, Fe2+ 등의 이온이 Na+가 붙어 있던 자리에 대신 들어가게 되고, 대신 Na+가 수도물에 포함되어 나오게 되는데, 이렇게 되면 물 속에 Ca2+, Mg2+, Fe2+ 등의 성분이 사라지게 되어, 연수(단물)가 나오게 되는 것입니다. 말로 표현하자니 엄청 복잡한데요. 그러나, 고등학교 화학시간에도 이러한 원리를 이미 배웠다는 사실&amp;hellip;교과서에 나와있는 그림으로 표현하면 아래와 같아요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>엑셀, 사진으로 vlookup 효과 구현하기</title>
      <link>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EC%82%AC%EC%A7%84%EC%9C%BC%EB%A1%9C-vlookup-%ED%9A%A8%EA%B3%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 05 Jan 2018 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EC%82%AC%EC%A7%84%EC%9C%BC%EB%A1%9C-vlookup-%ED%9A%A8%EA%B3%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;엑셀의 vlookup 함수는 사진파일을 데이터형으로 다룰 수 없어요. 여기서는 사전에 준비된 사진파일(.jpg, .gif, .png, .bmp 등)을 보다 쉽게 엑셀파일에 삽입하고, 삽입된 사진을 몇가지 함수를 조합하여 vlookup 효과를 구현하는 방법을 알아보도록 하겠습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;예시&lt;a class=&#34;anchor&#34; href=&#34;#%ec%98%88%ec%8b%9c&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;담임 선생님이라면 매 학년초마다 연락처 등을 포함한 학생인적사항 관련 조사를 하게 됩니다. 일반적인 경우라면 관련 부서에서 한글워드프로세서나 엑셀, 한셀 등으로 양식을 만들어서 보내주고 그것을 이용하여 작업을 하는데, 사실 여러 부서에서 중복된 데이터를 다양한 형태의 폼으로 원하기 때문에 그때마다 재입력해야하는 엄청난 비효율을 매년마다 경험하게 되요. 그렇기 때문에 조금 어렵고 귀찮기는 하지만 한글워드프로세서보다는 엑셀, 한셀 등의 스프레드시트를 통해 관리하는 것을 강력히 추천합니다. &lt;strong&gt;엑셀로 RAW데이터를 만들어두면, 이 데이터를 활용하여 한글워드프로세서의 메일머지를 이용하기도 쉽고 엑셀이나 한셀을 사용하여 통계를 내기도 쉬워지기 때문&lt;/strong&gt;이죠.&lt;/p&gt;</description>
    </item>
    <item>
      <title>엑셀, 빈셀 채우기</title>
      <link>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EB%B9%88%EC%85%80-%EC%B1%84%EC%9A%B0%EA%B8%B0/</link>
      <pubDate>Tue, 01 Nov 2016 18:27:53 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EC%97%91%EC%85%80-%EB%B9%88%EC%85%80-%EC%B1%84%EC%9A%B0%EA%B8%B0/</guid>
      <description>&lt;p&gt;아래와 같이 학년, 반, 번호를 채워 넣으려고 할 때, A3~A31셀이 빈 셀로 되어 있네요. 이럴때 모든 셀을 1학년을 나타내는 숫자 1을 채워 넣으려면 어떻게 해야 할까요? A2셀을 클릭하고 A31셀까지 아래쪽으로 쭉 드래그를 하면 되겠죠?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/equal01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;그런데, 문제는 &amp;lsquo;반&amp;rsquo;의 숫자를 넣을 B열입니다. 1~3반까지의 숫자가 나뉘어 있으므로 드래그를 세번 나누어서 해야 하는 것이죠. 세개의 반만 있으면 다행이지만, 학급수가 많다면 이것도 쉬운일이 아닙니다. 이럴때, 한번의 작업으로 빈셀을 채우는 방법을 알아보겠습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;먼저 A2~B31까지 블럭을 설정합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image/equal02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>역삼투압 정수기 DIY</title>
      <link>http://localhost:1313/posts/%EC%97%AD%EC%82%BC%ED%88%AC%EC%95%95-%EC%A0%95%EC%88%98%EA%B8%B0-diy/</link>
      <pubDate>Sat, 20 Oct 2012 22:20:35 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EC%97%AD%EC%82%BC%ED%88%AC%EC%95%95-%EC%A0%95%EC%88%98%EA%B8%B0-diy/</guid>
      <description>&lt;p&gt;몸에 좋은 미네랄까지 걸러낸다고 하여 역삼투압정수기를 싫어하시는 분도 많지요? 그러나 여기는 중국입니다. 미네랄이고 뭐고, 그냥 거를 수 있는 것은 다 걸러내는 것이 좋습니다.&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;역삼투압정수기의 경우 2)번이 정석입니다. 그런데, 폐수가 너무 많이 버려지기때문에, 1)번과 같이 작업하는 분도 계시죠. 정수 성능은 조금 떨어지겠지만 폐수가 전혀 없기도 합니다. 그렇지만 역삼투압정수기의 원리에 맞추어 생각해보면, 1)번 구성은 가장 비싼 RO필터 성능을 급격히 저하시키는 원인이 될 수 있습니다. 1)번과 같이 설치하는 것보다는 2)번 구성대로 하고, 대신 폐수라인을 적절히 빼내어 설거지 용도로 사용하는 것이 좋습니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
